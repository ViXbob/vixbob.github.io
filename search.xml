<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>水题记录1.1</title>
      <link href="/2018/09/26/%E6%B0%B4%E9%A2%98%E8%AE%B0%E5%BD%951.1/"/>
      <url>/2018/09/26/%E6%B0%B4%E9%A2%98%E8%AE%B0%E5%BD%951.1/</url>
      <content type="html"><![CDATA[<h1 style="text-align: center"><font color="#ff 0000"> 8/15</font></h1><p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/73TFV2kf9H4fa5Vb7vubW4PozaU1zCCxCiM0lpnRDUQ!/r/dDwBAAAAAAAA"> <a id="more"></a></p><h1 id="水题记录1.1">水题记录1.1</h1><h2 id="noi.ac-模拟赛r3-t1-列队"><a href="http://noi.ac/contest/12/problem/36" target="_blank" rel="noopener">1.NOI.AC 模拟赛R3 T1 列队</a></h2><p>题目大意 : 给你一个<span class="math inline">\(n \times m\)</span>的矩阵<span class="math inline">\((n, m \le 10^3)\)</span>, 每次询问有多少个人在<span class="math inline">\(TA\)</span>那一排是第<span class="math inline">\(x\)</span>高, 在<span class="math inline">\(TA\)</span>那一列是第<span class="math inline">\(y\)</span>高</p><p>题解 :</p><p>考虑到<span class="math inline">\(n, m\)</span>都很小, 直接暴力把所有的情况都处理, 怎么搞呢?</p><p>对于每一个人在<span class="math inline">\(TA\)</span>那一行二分一下, 那一列二分一下然后统计一下答案</p><p>复杂度<span class="math inline">\(O((nm)log(nm) + q)\)</span></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, q, a[maxn][maxn], ans[maxn][maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; X[maxn], Y[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read(); q = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">a[i][j] = read();</span><br><span class="line">X[i].push_back(a[i][j]);</span><br><span class="line">Y[j].push_back(a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">sort(X[i].begin(), X[i].end());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">sort(Y[i].begin(), Y[i].end());</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> posx = lower_bound(X[i].begin(), X[i].end(), a[i][j]) - X[i].begin() + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> posy = lower_bound(Y[j].begin(), Y[j].end(), a[i][j]) - Y[j].begin() + <span class="number">1</span>;</span><br><span class="line">ans[posx][posy]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= q; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = read(), y = read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[m - x + <span class="number">1</span>][n - y + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">3 3 2</span></span><br><span class="line"><span class="comment">1 8 9</span></span><br><span class="line"><span class="comment">3 2 7</span></span><br><span class="line"><span class="comment">6 5 4</span></span><br><span class="line"><span class="comment">3 3</span></span><br><span class="line"><span class="comment">2 2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3 3 2</span></span><br><span class="line"><span class="comment">1 2 7</span></span><br><span class="line"><span class="comment">6 4 5</span></span><br><span class="line"><span class="comment">8 3 9</span></span><br><span class="line"><span class="comment">3 2</span></span><br><span class="line"><span class="comment">2 3</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="noi.ac-模拟赛r3-t2-染色"><a href="http://noi.ac/contest/12/problem/37" target="_blank" rel="noopener">2.NOI.AC 模拟赛R3 T2 染色</a></h2><p>题目大意 : 现在有<span class="math inline">\(n\)</span>个位置, <span class="math inline">\(m\)</span>种颜色, 要求给<span class="math inline">\(n\)</span>个位置染色, 要求求出满足任意一个长度为<span class="math inline">\(m\)</span>子区间的颜色种类小于<span class="math inline">\(m\)</span>的方案数</p><p>题解 : 设状态<span class="math inline">\(f[i][j]\)</span>表示前<span class="math inline">\(i\)</span>个位置, 后<span class="math inline">\(j\)</span>个位置有<span class="math inline">\(j\)</span>种颜色, 后<span class="math inline">\(j+1\)</span>个位置也有<span class="math inline">\(j\)</span>种颜色的方案数, 有转移 <span class="math display">\[f[i][j] += \begin{cases} f[i - 1][j - 1] \cdot (m - j + 1) \ \ \ \ if(j &lt; m)\\ \sum_{v = j}^m f[i - 1][v]\end{cases}\]</span> 就是如果颜色种类小于<span class="math inline">\(m\)</span>, 你可以在第<span class="math inline">\(i\)</span>个位置上随便放上<span class="math inline">\(m - j + 1\)</span>中的一种颜色</p><p>也可以从上个状态后缀颜色数大于<span class="math inline">\(j\)</span>的任意一种状态转移过来, 如图 :</p><p><img src="http://wx4.sinaimg.cn/mw690/0060lm7Tly1fvo1gvl2u0j30lp0duq34.jpg"></p><p>然后如果你直接暴力转移复杂度是<span class="math inline">\(O(n m^2)\)</span>的, 考虑直接用后缀和维护一下复杂度便变成了<span class="math inline">\(O(nm)\)</span>, 可以通过此题</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, P, f[maxn][maxn], s[maxn], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;LL rnt = <span class="number">1l</span>l * x * y; <span class="keyword">return</span> (<span class="keyword">int</span>)(rnt &gt;= P ? rnt % P : rnt);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read(); P = read();</span><br><span class="line"></span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>] = m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line">f[i][j] = pls(f[i][j], mul(f[i - <span class="number">1</span>][j - <span class="number">1</span>], m - j + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = m; j &gt;= <span class="number">1</span>; j--) s[j] = pls(f[i - <span class="number">1</span>][j], s[j + <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) f[i][j] = pls(f[i][j], s[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) ans = pls(ans, f[n][i]);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="noi.ac-模拟赛r3-t3-游戏"><a href="http://noi.ac/contest/12/problem/38" target="_blank" rel="noopener">3.NOI.AC 模拟赛R3 T3 游戏</a></h2><p>题目大意 : 你一开始有<span class="math inline">\(n\)</span>个角色, 每个角色的初始经验为<span class="math inline">\(0\)</span>, 初始等级为<span class="math inline">\(0\)</span>, 现在有一个序列<span class="math inline">\(a\)</span>(保证<span class="math inline">\(a\)</span>递增), 定义每个角色的等级为满足<span class="math inline">\(当前经验 \ge a_i\)</span>的最大的<span class="math inline">\(i\)</span>, (保证序列<span class="math inline">\(a\)</span>的长度<span class="math inline">\(m\)</span>小于等于<span class="math inline">\(10\)</span>)?</p><p>然后有三个操作 :</p><ol type="1"><li>给区间<span class="math inline">\([l, r]\)</span>中的角色的经验都加上<span class="math inline">\(x\)</span></li><li>将某一个角色的经验改为<span class="math inline">\(x\)</span></li><li>查询区间<span class="math inline">\([l, r]\)</span>中所有角色的等级和</li></ol><p>题解 : 前两个操作线段树都可以很好的解决, 但是该如何解决升级的问题呢?</p><ol type="1"><li>对于第一个操作, 我们定义对于第<span class="math inline">\(i\)</span>个玩家升级到下一个等级所需的经验为<span class="math inline">\(p_i\)</span>, 然后我们维护一个区间中<span class="math inline">\(p_i\)</span>的最小值, 如果当前区间中<span class="math inline">\(p_i\)</span>的最小值小于加上的经验<span class="math inline">\(x\)</span>, 我们直接在线段树上暴力改, 因为最多只有<span class="math inline">\(m\)</span>级, 所以一个角色最多被改<span class="math inline">\(m\)</span>次, 复杂度没有问题</li><li>对于第二个操作, 直接暴力修改, 复杂度<span class="math inline">\(O(m \cdot logn)\)</span>, <strong>注意</strong>有可能修改的值比当前经验值还要小</li><li>直接线段树查询<span class="math inline">\(O(logn)\)</span></li></ol><p>最终复杂度<span class="math inline">\(O(m \cdot nlogn)\)</span></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls p &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs p &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mid (l + r &gt;&gt; 1)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> LL inf = <span class="number">1l</span>l &lt;&lt; <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, q;</span><br><span class="line">LL a[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Segment</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> s; LL minv, tag;&#125; t[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">t[p].s = t[ls].s + t[rs].s;</span><br><span class="line">t[p].minv = min(t[ls].minv, t[rs].minv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t[p].tag == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> o = t[p].tag;</span><br><span class="line">t[ls].minv -= o; t[ls].tag += o;</span><br><span class="line">t[rs].minv -= o; t[rs].tag += o;</span><br><span class="line">t[p].tag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">modifyz</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> pos, <span class="keyword">int</span> p, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">t[p].s = <span class="number">0</span>; t[p].minv = a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span>(x &gt;= t[p].minv) &#123;</span><br><span class="line">x -= t[p].minv; t[p].s++;</span><br><span class="line">t[p].minv = a[t[p].s + <span class="number">1</span>] - a[t[p].s];</span><br><span class="line">&#125; t[p].minv -= x; <span class="keyword">return</span>;</span><br><span class="line">&#125; pushdown(p);</span><br><span class="line"><span class="keyword">if</span>(pos &lt;= mid) modifyz(l, mid, pos, ls, x);</span><br><span class="line"><span class="keyword">else</span> modifyz(mid + <span class="number">1</span>, r, pos, rs, x);</span><br><span class="line">pushup(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">modifyp</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> p, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t[p].minv &gt; x) &#123;</span><br><span class="line">            t[p].tag += x; t[p].minv -= x; <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l == r) &#123;</span><br><span class="line"><span class="keyword">while</span>(x &gt;= t[p].minv) &#123;</span><br><span class="line">x -= t[p].minv; t[p].s++;</span><br><span class="line">t[p].minv = a[t[p].s + <span class="number">1</span>] - a[t[p].s];</span><br><span class="line">&#125; t[p].minv -= x; <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">pushdown(p);</span><br><span class="line">modifyp(l, mid, ls, x); modifyp(mid + <span class="number">1</span>, r, rs, x);</span><br><span class="line">pushup(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr, <span class="keyword">int</span> p, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == ql &amp;&amp; r == qr) <span class="keyword">return</span> modifyp(l, r, p, x);</span><br><span class="line">pushdown(p);</span><br><span class="line"><span class="keyword">if</span>(qr &lt;= mid) modify(l, mid, ql, qr, ls, x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(ql &gt; mid) modify(mid + <span class="number">1</span>, r, ql, qr, rs, x);</span><br><span class="line"><span class="keyword">else</span> modify(l, mid, ql, mid, ls, x), modify(mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr, rs, x);</span><br><span class="line">pushup(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == ql &amp;&amp; r == qr) <span class="keyword">return</span> t[p].s;</span><br><span class="line"><span class="keyword">if</span>(qr &lt;= mid) <span class="keyword">return</span> query(l, mid, ql, qr, ls);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(ql &gt; mid) <span class="keyword">return</span> query(mid + <span class="number">1</span>, r, ql, qr, rs);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> query(l, mid, ql, mid, ls) + query(mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr, rs);</span><br><span class="line">&#125;</span><br><span class="line">&#125; T;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read(); q = read(); a[m + <span class="number">1</span>] = inf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (n &lt;&lt; <span class="number">2</span>); i++) T.t[i].minv = inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) a[i] = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) T.modifyz(<span class="number">1</span>, n, i, <span class="number">1</span>, read());</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(q--) &#123;</span><br><span class="line"><span class="keyword">int</span> opt = read(), l = read(), r = read();</span><br><span class="line"><span class="keyword">if</span>(opt == <span class="number">1</span>) T.modify(<span class="number">1</span>, n, l, r, <span class="number">1</span>, read());</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt == <span class="number">2</span>) T.modifyz(<span class="number">1</span>, n, l, <span class="number">1</span>, r);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, T.query(<span class="number">1</span>, n, l, r, <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="noi.ac-模拟赛r5-t1-count"><a href="http://noi.ac/contest/14/problem/45" target="_blank" rel="noopener">4.NOI.AC 模拟赛R5 T1 count</a></h2><p>题目大意 : 长度为<span class="math inline">\(n+1\)</span>的序列<span class="math inline">\(A\)</span>，其中的每个数都是不大于<span class="math inline">\(n\)</span>的正整数，且<span class="math inline">\(n\)</span>以内每个正整数至少出现一次。</p><p>对于每一个正整数<span class="math inline">\(k=1,..,n+1\)</span>，求出的本质不同的长度为<span class="math inline">\(k\)</span>的子序列(不一定要连续)的数量。对<span class="math inline">\(10^9+7\)</span>取模。</p><p>题解 : 我们先找出两个相同的数<span class="math inline">\(x\)</span>的位置为<span class="math inline">\(p1, p2\)</span>, 定义<span class="math inline">\(Z = min(p1, p2) - 1, Q = n + 1 - max(p1, p2)\)</span></p><p>如图 :</p><p><img src="http://wx1.sinaimg.cn/mw690/0060lm7Tly1fvo7mm87z9j30la08jt8m.jpg"></p><p>如果不考虑重复答案就是<span class="math inline">\(\binom{n + 1}{i}\)</span>, 我们再考虑一下如何计算出重复的子序列</p><p>考虑对于一个<span class="math inline">\(k\)</span>, <span class="math inline">\(x\)</span>可以是子序列第<span class="math inline">\(i\)</span>个<span class="math inline">\((1 \le i \le k)\)</span></p><p>重复的串的个数就是在前<span class="math inline">\(Z\)</span>个选<span class="math inline">\(i - 1\)</span>个的方案数乘上在后<span class="math inline">\(Q\)</span>个选<span class="math inline">\(k - i\)</span>的方案数, 然后答案就是下面那个式子 <span class="math display">\[\binom{n + 1}{k} - \sum_{i = 1}^{k} \binom{Z}{i - 1} \cdot \binom{Q}{k - i}\]</span> 然后用一下恒等式 <span class="math display">\[\binom{n + 1}{k} - \binom {Z + Q}{k - 1}\]</span> <del>就水完了</del></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[maxn], vis[maxn], rfac[maxn &lt;&lt; <span class="number">1</span>], fac[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">2</span>], Z, Q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;LL rnt = <span class="number">1l</span>l * x * y; <span class="keyword">return</span> (<span class="keyword">int</span>)(rnt &gt;= P ? rnt % P : rnt);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dec</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x -= y; <span class="keyword">return</span> x &lt; <span class="number">0</span> ? x + P : x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k) &#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>) cnt = mul(cnt, x);</span><br><span class="line">x = mul(x, x); k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> mul(fac[n], mul(ksm(fac[m], P - <span class="number">2</span>), ksm(fac[n - m], P - <span class="number">2</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//freopen("count2.in", "r", stdin);</span></span><br><span class="line"><span class="comment">//freopen("count.out", "w", stdout);</span></span><br><span class="line"></span><br><span class="line">n = read(); fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n + <span class="number">1</span>; i++) vis[a[i] = read()]++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line"><span class="keyword">if</span>(vis[a[i]] &gt; <span class="number">1</span>) p[(p[<span class="number">0</span>] &lt;= <span class="number">0</span>) ^ <span class="number">1</span>] = i;</span><br><span class="line">Z = min(p[<span class="number">0</span>], p[<span class="number">1</span>]) - <span class="number">1</span>; Q = n + <span class="number">1</span> - max(p[<span class="number">0</span>], p[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn * <span class="number">2</span>; i++)</span><br><span class="line">fac[i] = mul(fac[i - <span class="number">1</span>], i);</span><br><span class="line"></span><br><span class="line"><span class="comment">//cerr &lt;&lt; Z &lt;&lt; " " &lt;&lt; Q &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n + <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> ans = C(n + <span class="number">1</span>, i);</span><br><span class="line">ans = dec(ans, C(Z + Q, i - <span class="number">1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="noi.ac-模拟赛r5-t2-delete"><a href="http://noi.ac/contest/14/problem/46" target="_blank" rel="noopener">5.NOI.AC 模拟赛R5 T2 delete</a></h2><p>题目大意 : 长度为<span class="math inline">\(n\)</span>的序列<span class="math inline">\(A\)</span>，从中删去<strong>恰好</strong><span class="math inline">\(k\)</span>个元素（右边的元素往左边移动），记<span class="math inline">\(cnt\)</span>为新序列中<span class="math inline">\(A_i=i\)</span>的元素个数（即权值与下标相同的元素的个数）。求<span class="math inline">\(cnt\)</span>的最大值。</p><p>题解 :</p><p>二维<span class="math inline">\(dp\)</span>很显然, 当然也没有什么优化的余地</p><p>尝试转化成一维<span class="math inline">\(dp\)</span>, 设<span class="math inline">\(f[i]\)</span>表示使得<span class="math inline">\(A_i = i\)</span>的最大<span class="math inline">\(cnt\)</span>, 设<span class="math inline">\(p_i = i - A_i\)</span>表示使这个数满足条件时, 这之前要删多少数</p><p>转移好想 <span class="math display">\[f[i] = max\{f[j] + 1, j &lt; i, p[i] \ge p[j], i - j - 1 \ge p[i] - p[j]\}\]</span> 等价于 <span class="math display">\[f[i] = max\{f[j] + 1, j &lt; i, p[i] \ge p[j], a[i] &gt; a[i]\}\]</span></p><p>很显然这个一个三维偏序问题, 但是如果直接搞三维偏序复杂度为<span class="math inline">\(O(nlog^2n)\)</span>, 尝试转化为二维偏序</p><p>我们可以发现当<span class="math inline">\(p[i] \ge p[j]\)</span>且<span class="math inline">\(a[i] &gt; a[j]\)</span>之后, <span class="math inline">\(i\)</span>一定大于<span class="math inline">\(j\)</span></p><p>所以<span class="math inline">\(i &gt; j\)</span>这个条件可以直接丢掉, 然后随便怎么搞一搞二维偏序就好了</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls p &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs p &lt;&lt; 1 | 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mid (l + r &gt;&gt; 1)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[maxn], k, n, a[maxn], p[maxn], ans, M, id[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Segment</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> maxv[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> pos, <span class="keyword">int</span> p, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l == r) &#123;maxv[p] = max(maxv[p], x); <span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(pos &lt;= mid) insert(l, mid, pos, ls, x);</span><br><span class="line"><span class="keyword">else</span> insert(mid + <span class="number">1</span>, r, pos, rs, x);</span><br><span class="line">maxv[p] = max(maxv[ls], maxv[rs]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ql &gt; qr) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l == ql &amp;&amp; r == qr) <span class="keyword">return</span> maxv[p];</span><br><span class="line"><span class="keyword">if</span>(qr &lt;= mid) <span class="keyword">return</span> query(l, mid, ql, qr, ls);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(ql &gt; mid) <span class="keyword">return</span> query(mid + <span class="number">1</span>, r, ql, qr, rs);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> max(query(l, mid, ql, mid, ls), query(mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr, rs));</span><br><span class="line">&#125;</span><br><span class="line">&#125;T;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;<span class="keyword">return</span> p[x] &lt; p[y] || (p[x] == p[y] &amp;&amp; a[x] &lt; a[y]);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 60pts</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//freopen("delete.in", "r", stdin);</span></span><br><span class="line"><span class="comment">//freopen("count.out", "w", stdout);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//for(register int i = 0; i &lt; maxn * 4; i++) T.maxv[i] = 0;</span></span><br><span class="line"></span><br><span class="line">n = read(); k = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">a[i] = read(); id[i] = i;</span><br><span class="line"><span class="keyword">if</span>(i - a[i] &gt;= <span class="number">0</span>) p[i] = i - a[i];</span><br><span class="line"><span class="keyword">else</span> p[i] = -inf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cerr &lt;&lt; f[0] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">sort(id + <span class="number">1</span>, id + <span class="number">1</span> + n, cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> t = id[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(p[t] == -inf || n - t &lt; k - p[t] || p[t] &gt; k) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*for(register int j = 0; j &lt; i; j++)</span></span><br><span class="line"><span class="comment">if(a[t] &gt; a[id[j]]) &#123;</span></span><br><span class="line"><span class="comment">f[t] = max(f[t], f[id[j]] + 1);</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//int p0 = 1;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p0 = T.query(<span class="number">1</span>, n, <span class="number">1</span>, a[t] - <span class="number">1</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">T.insert(<span class="number">1</span>, n, a[t], <span class="number">1</span>, f[t] = p0);</span><br><span class="line"></span><br><span class="line">ans = max(ans, f[t]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//for(register int i = 1; i &lt;= n; i++)</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; f[i] &lt;&lt; " ";</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="noi.ac-模拟赛r4-t1-子图"><a href="http://noi.ac/contest/13/problem/39" target="_blank" rel="noopener">6.NOI.AC 模拟赛R4 T1 子图</a></h2><p>题目大意 : 求最小生成树</p><p>题解 : 同题目大意</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, fa[maxn];</span><br><span class="line"></span><br><span class="line">LL ans;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Graph</span> &#123;</span><span class="keyword">int</span> x, y, w;&#125; e[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">findx</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">return</span> fa[x] == x ? fa[x] : fa[x] = findx(fa[x]);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Graph x, Graph y)</span> </span>&#123;<span class="keyword">return</span> x.w &gt; y.w;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) fa[i] = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = read(), y = read(), w = read();</span><br><span class="line">e[i] = (Graph)&#123;x, y, w&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(e + <span class="number">1</span>, e + <span class="number">1</span> + m, cmp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = e[i].x, y = e[i].y, w = e[i].w;</span><br><span class="line"><span class="keyword">int</span> rtx = findx(x), rty = findx(y);</span><br><span class="line"><span class="keyword">if</span>(rtx == rty) &#123;ans += w; <span class="keyword">continue</span>;&#125;</span><br><span class="line">fa[rtx] = rty;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="noi.ac-模拟赛r6-t1-queen"><a href="http://noi.ac/contest/15/problem/42" target="_blank" rel="noopener">7.NOI.AC 模拟赛R6 T1 queen</a></h2><p>题目大意 : 在一个<span class="math inline">\(n \times n\)</span>的棋盘上，放有<span class="math inline">\(m\)</span>个皇后，其中每一个皇后都可以向上、下、左、右、左上、左下、右上、右下这<span class="math inline">\(8\)</span>个方向移动（就是可以沿对角线和水平竖直方向移动）。其中每一个皇后可以攻击这八个方向上离它最近的皇后。</p><p>我们现在考虑每一个皇后会被从几个方向攻击到，设为<span class="math inline">\(w\)</span>。很显然<span class="math inline">\(w\)</span>属于<span class="math inline">\([0,8]\)</span>。最后要求出来<span class="math inline">\(t[0],t[1]……t[8]\)</span>九个数，表示有多少皇后被攻击到<span class="math inline">\(0次，1次……8次\)</span>。 数据保证<span class="math inline">\(m\)</span>个皇后中任意两个不在同一个位置。</p><p>题解 : 对于每一个皇后分别加入到其对应的四条直线里去(斜向下, 斜向上, 竖直, 水平)</p><p>然后判断它是不是每条直线中最左或最右的那个点, 如果在最中间的话肯定会被两边的攻击到, 所以这样就很好统计答案了</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, x[maxn], y[maxn], t[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; X[maxn], Y[maxn], Up[maxn * <span class="number">2</span>], Down[maxn * <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">x[i] = read(); y[i] = read();</span><br><span class="line">X[x[i]].push_back(y[i]);</span><br><span class="line">Y[y[i]].push_back(x[i]);</span><br><span class="line">Up[y[i] - x[i] + n].push_back(x[i]);</span><br><span class="line">Down[y[i] + x[i]].push_back(x[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">sort(X[i].begin(), X[i].end());</span><br><span class="line">sort(Y[i].begin(), Y[i].end());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n * <span class="number">2</span>; i++) &#123;</span><br><span class="line">sort(Up[i].begin(), Up[i].end());</span><br><span class="line">sort(Down[i].begin(), Down[i].end());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; :: iterator B, E; <span class="keyword">int</span> tim = <span class="number">0</span>;</span><br><span class="line">B = X[x[i]].begin(); E = X[x[i]].end(); E--;</span><br><span class="line">tim += (y[i] &gt; *B) + (y[i] &lt; *E);</span><br><span class="line"></span><br><span class="line">B = Y[y[i]].begin(), E = Y[y[i]].end(); E--;</span><br><span class="line">tim += (x[i] &gt; *B) + (x[i] &lt; *E);</span><br><span class="line"></span><br><span class="line">B = Up[y[i] - x[i] + n].begin(), E = Up[y[i] - x[i] + n].end(); E--;</span><br><span class="line">tim += (x[i] &gt; *B) + (x[i] &lt; *E);</span><br><span class="line"></span><br><span class="line">B = Down[x[i] + y[i]].begin(), E = Down[x[i] + y[i]].end(); E--;</span><br><span class="line">tim += (x[i] &gt; *B) + (x[i] &lt; *E);</span><br><span class="line"></span><br><span class="line">t[tim]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) <span class="built_in">cout</span> &lt;&lt; t[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="noi.ac-模拟赛r6-t3-color"><a href="http://noi.ac/contest/15/problem/44" target="_blank" rel="noopener">8.NOI.AC 模拟赛R6 T3 color</a></h2><p>题目大意 : 给定一串<span class="math inline">\(n\)</span>个珠子，其中每一个珠子的颜色为<span class="math inline">\(a_i\)</span>，总共有<span class="math inline">\(k\)</span>类颜色珠子标号从<span class="math inline">\(1\)</span>到<span class="math inline">\(k\)</span>。</p><p>初始给定一个参数<span class="math inline">\(T\)</span>。询问再给定<span class="math inline">\(m\)</span>个区间<span class="math inline">\(l_i\)</span>到<span class="math inline">\(r_i\)</span>，每次询问这个区间有多少颜色的珠子出现了恰好<span class="math inline">\(T\)</span>次。</p><p><span class="math inline">\(n , m \le 5 \cdot 10^5\)</span></p><p>题解 : 正解不会</p><p>然后由于数据很水直接暴力莫队即可</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> LOG = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, k, T, ans[maxn], be[maxn], L, R, curAns, tim[maxn], col[maxn], unit;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Query</span> &#123;</span><span class="keyword">int</span> l, r, id;&#125; t[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Query x, Query y)</span></span>&#123;<span class="keyword">return</span> be[x.l] == be[y.l] ? (be[x.l] &amp; <span class="number">1</span> ? x.r &lt; y.r : x.r &gt; y.r) : be[x.l] &lt; be[y.l];&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> pos)</span> </span>&#123;</span><br><span class="line">tim[col[pos]]++;</span><br><span class="line"><span class="keyword">if</span>(tim[col[pos]] == T) curAns++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tim[col[pos]] == T + <span class="number">1</span>) curAns--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> pos)</span> </span>&#123;</span><br><span class="line">tim[col[pos]]--;</span><br><span class="line"><span class="keyword">if</span>(tim[col[pos]] == T) curAns++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tim[col[pos]] == T - <span class="number">1</span>) curAns--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read(); k = read(); T = read(); unit = <span class="built_in">sqrt</span>(n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">col[i] = read();</span><br><span class="line">be[i] = (i - <span class="number">1</span>) / unit + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> l = read(), r = read();</span><br><span class="line">t[i] = (Query) &#123;l, r, i&#125;;</span><br><span class="line">&#125;</span><br><span class="line">sort(t + <span class="number">1</span>, t + <span class="number">1</span> + m, cmp);</span><br><span class="line"></span><br><span class="line">L = <span class="number">0</span>, R = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">while</span>(R &lt; t[i].r)R++, add(R);</span><br><span class="line"><span class="keyword">while</span>(R &gt; t[i].r)del(R), R--;</span><br><span class="line"><span class="keyword">while</span>(L &lt; t[i].l)del(L), L++;</span><br><span class="line"><span class="keyword">while</span>(L &gt; t[i].l)L--, add(L);</span><br><span class="line">ans[t[i].id] = curAns;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OI刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 组合数学 </tag>
            
            <tag> 线段树 </tag>
            
            <tag> 最小生成树 </tag>
            
            <tag> 莫队 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CodeforcesRound#512</title>
      <link href="/2018/09/26/CodeforcesRound-512/"/>
      <url>/2018/09/26/CodeforcesRound-512/</url>
      <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/eQed69hDrVvB2VUwSb0WDWPzoQssi*IKWwsMEVqqZmc!/r/dEQBAAAAAAAA"> <a id="more"></a></p><h1 id="codeforcesround512"><a href="http://codeforces.com/contest/1058" target="_blank" rel="noopener">CodeforcesRound#512</a></h1><h2 id="a.in-search-of-an-easy-problem"><a href="http://codeforces.com/contest/1058/problem/A" target="_blank" rel="noopener">A.In Search of an Easy Problem</a></h2><p>题目大意 : 有<span class="math inline">\(1\)</span>输出<span class="math inline">\(HARD\)</span>, 否则输出<span class="math inline">\(EASY\)</span></p><p>题解 : 同题面</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, judge = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = read();</span><br><span class="line"><span class="keyword">if</span>(x) judge = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(judge) <span class="built_in">puts</span>(<span class="string">"EASY"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"HARD"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="b.vasya-and-cornfield"><a href="http://codeforces.com/contest/1058/problem/B" target="_blank" rel="noopener">B.Vasya and Cornfield</a></h2><p>题目大意 : 给定你一个矩形的四个角, 每次询问一个点是否在这个矩形内</p><p>题解 : 他这个矩形的四条边都很特殊, 斜率都是<span class="math inline">\(1\)</span>或<span class="math inline">\(-1\)</span>, 然后直接判断这个点是否满足四个线性约束条件, 详情见高中数学必修五</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, d, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(), d = read(), m = read();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = read(), y = read();</span><br><span class="line"><span class="keyword">if</span> (x + y &lt; d || x + y &gt; <span class="number">2</span> * n - d) <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (y - x &lt; -d || y - x &gt; d) <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="c.vasya-and-golden-ticket"><a href="http://codeforces.com/contest/1058/problem/C" target="_blank" rel="noopener">C.Vasya and Golden Ticket</a></h2><p>题目大意 : 给你一个序列, 序列中的元素都小于等于<span class="math inline">\(9\)</span>, 大于等于<span class="math inline">\(0\)</span>, 问你时候存在一种划分方案使得每个划分的区间内的元素的和都相等, 要求划分出的区间连续</p><p>题解 : 直接考虑枚举将这个序列划分成<span class="math inline">\(con\)</span>个区间, 然后顺着累加每一个元素, 如果当前累积的和乘以<span class="math inline">\(con\)</span>大于整个序列的和直接<span class="math inline">\(break\)</span>, 如果乘起来等于这个序列的和就将累积的和清零, 如果最后可以直接输出<span class="math inline">\(YES\)</span>就好了</p><p>然后就<span class="math inline">\(A\)</span>了</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn], s[maxn], n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, str + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) a[i] = str[i] - <span class="string">'0'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> con = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(con &lt;= n) &#123;</span><br><span class="line"><span class="keyword">int</span> o = <span class="number">0</span>, judge = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//if((s[n] % con) != 0) &#123;con++; continue;&#125;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">o += a[i];</span><br><span class="line"><span class="keyword">if</span>(o * con == s[n]) o = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(o * con &gt; s[n]) &#123;</span><br><span class="line">judge = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(judge) &#123;<span class="built_in">puts</span>(<span class="string">"YES"</span>); <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">con++;</span><br><span class="line">&#125; <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="d.vasya-and-triangle"><a href="http://codeforces.com/contest/1058/problem/D" target="_blank" rel="noopener">D.Vasya and Triangle</a></h2><p>题目大意 : 给你一个<span class="math inline">\(n\)</span>, 一个<span class="math inline">\(m\)</span>, 一个<span class="math inline">\(k\)</span>, 要求在<span class="math inline">\((0, 0), (n, 0), (0,m), (n, m)\)</span>这四个点构成的矩形内找到三个整点使得这三个点构成的三角形的面积等于<span class="math inline">\(\frac {n \cdot m}{k}\)</span></p><p>题解 : 如果这三个点的坐标为<span class="math inline">\((x_0, y_0), (x_1, y_1), (x_2, y_2)\)</span>, 它们构成三角形的面积为 <span class="math display">\[\large{|}\frac{(x_1-x_0) \cdot(y_1-y_0) - (x_2-x_0) \cdot (y_2-y_0)}{2}\large{|}\]</span> 那么如果<span class="math inline">\(2 \cdot n \cdot m \ne 0 (mod \ \ k)\)</span>, 就无解, 否则有解</p><p>我们考虑构造一组<span class="math inline">\((a, b)\)</span>使得<span class="math inline">\(a \cdot b = \frac{2 \cdot n \cdot m}{k}\)</span>, 并且<span class="math inline">\((a \le n \&amp;\&amp; b \le m) || (a \le m \&amp;\&amp; b \le n)\)</span></p><p>设<span class="math inline">\(P = \frac{2 \cdot n \cdot m}{k}\)</span>, <span class="math inline">\(a = gcd(n, P), b = \frac{P}{a}\)</span>, 如果此时满足上述条件那么直接输出就好了</p><p>否则我们考虑将<span class="math inline">\(m\)</span>的每一个素因子都往<span class="math inline">\(a\)</span>上乘, 每乘一次就判断一下是否满足条件</p><p>关于正确性的证明 : <del>不会</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">LL n, m, k, Q, P;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">judge</span><span class="params">(LL Q, LL P)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>((Q &lt;= n &amp;&amp; P / Q &lt;= m) || (Q &lt;= m &amp;&amp; P / Q &lt;= n)) &#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"0 0"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">if</span>(Q &lt;= n &amp;&amp; P / Q &lt;= m) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; Q &lt;&lt; <span class="string">" 0"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"0 "</span> &lt;&lt; P / Q &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; P / Q &lt;&lt; <span class="string">" 0"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"0 "</span> &lt;&lt; Q &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(LL n)</span> </span>&#123;</span><br><span class="line">LL z = n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = <span class="number">2</span>; i * i &lt;= z; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(z % i == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(z % i == <span class="number">0</span>) z /= i, cnt++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt; j++)</span><br><span class="line"><span class="keyword">if</span>(Q % i == <span class="number">0</span>) &#123;</span><br><span class="line">judge(Q, P);</span><br><span class="line">Q /= i;</span><br><span class="line">judge(Q, P);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">judge(Q, P);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Q % z == <span class="number">0</span>) &#123;</span><br><span class="line">judge(Q, P);</span><br><span class="line">Q /= z;</span><br><span class="line">judge(Q, P);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read(); k = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(n * m * <span class="number">2</span> % k != <span class="number">0</span>) &#123;<span class="built_in">puts</span>(<span class="string">"NO"</span>); <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"></span><br><span class="line">Q = n * m * <span class="number">2</span> / k, P = Q;</span><br><span class="line"></span><br><span class="line">solve(n); solve(m); Q = P;</span><br><span class="line"></span><br><span class="line">solve(m); solve(n);</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="e.vasya-and-good-sequences"><a href="http://codeforces.com/contest/1058/problem/E" target="_blank" rel="noopener">E.Vasya and Good Sequences</a></h2><p>题目大意 : 给你一个长度为<span class="math inline">\(N\)</span>的序列, 序列中的每个元素的二进制下的一的位置可以互换, 从而变成另一个数</p><p>问你有多少个区间<span class="math inline">\([l,r]\)</span>满足 : <span class="math display">\[a_l \oplus a_{l+1} \oplus a_{l+2} \oplus...\oplus a_r = 0\]</span> 题解 : 设<span class="math inline">\(b_i\)</span>为<span class="math inline">\(a_i\)</span>在二进制下一的个数</p><p>我们可以转化一下问题, 题目就是要我们求出有多少个区间满足 <span class="math display">\[(\sum_{i = l} ^{i \le r} b_i) = 0 (mod \ \ 2) \&amp; \&amp; \ \ 2 \cdot max\{b_i\} \le \sum_{i = l} ^{i \le r} b_i\]</span> 我们考虑到<span class="math inline">\(1 \le a_i \le 10^{18}\)</span>所以<span class="math inline">\(1 \le b_i \le 64\)</span>, 所以对于每一个左端点, 我们向左暴力扫<span class="math inline">\(65\)</span>个数, (不放心就<span class="math inline">\(128\)</span>个数, <del>反正给了2s</del>), 就可一保证在此之后的右端点一定是满足第二个条件的, 然后直接拿前缀和统计一下<span class="math inline">\(b_i\)</span>的前缀和中有多少个是偶数, 有多少个是奇数</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">LL n, b[maxn], s[maxn], S[<span class="number">2</span>][maxn];</span><br><span class="line"></span><br><span class="line">LL a[maxn], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">a[i] = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">0</span>; (<span class="number">1l</span>l &lt;&lt; j) &lt;= a[i]; j++)</span><br><span class="line"><span class="keyword">if</span>(a[i] &amp; (<span class="number">1l</span>l &lt;&lt; j)) b[i]++;</span><br><span class="line">s[i] = s[i - <span class="number">1</span>] + b[i];</span><br><span class="line">S[<span class="number">0</span>][i] = S[<span class="number">0</span>][i - <span class="number">1</span>] + ((s[i] &amp; <span class="number">1</span>) == <span class="number">0</span>);</span><br><span class="line">S[<span class="number">1</span>][i] = S[<span class="number">1</span>][i - <span class="number">1</span>] + ((s[i] &amp; <span class="number">1</span>) == <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cerr &lt;&lt; S[0][n] + S[1][n] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">LL maxv = b[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= min(i + <span class="number">128</span>, (<span class="keyword">int</span>)n); j++) &#123;</span><br><span class="line">maxv = max(maxv, b[j]);</span><br><span class="line"><span class="keyword">if</span>((s[j] - s[i - <span class="number">1</span>]) % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; maxv * <span class="number">2</span> &lt;= s[j] - s[i - <span class="number">1</span>])</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i + <span class="number">128</span> &lt; n) ans += (S[s[i - <span class="number">1</span>] &amp; <span class="number">1</span>][n] - S[s[i - <span class="number">1</span>] &amp; <span class="number">1</span>][i + <span class="number">128</span>]);</span><br><span class="line">&#125; <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="f.putting-boxes-together"><a href="http://codeforces.com/contest/1058/problem/F" target="_blank" rel="noopener">F.Putting Boxes Together</a></h2><p>题目大意 : 给定<span class="math inline">\(N\)</span>个二元组<span class="math inline">\((a_i, w_i)\)</span>, 每次询问一个区间<span class="math inline">\([l, r]\)</span>, 要求输出 <span class="math display">\[\sum_{i = l}^{i \le r} w_i \cdot |x + i - a_i|\]</span> 这个式子的最小值对<span class="math inline">\(10^9 + 7\)</span>取膜后的答案</p><p><span class="math inline">\(PS\)</span> : 保证<span class="math inline">\(a_i &lt; a_{i + 1}\)</span></p><p>题解 : 设<span class="math inline">\(g_i = a_i - i\)</span>, 上述式子变为 : <span class="math display">\[\sum_{i = l}^{i \le r} w_i \cdot |x - g_i|\]</span> 很显然我们可以将后面那个东西看成数轴上两个点的距离, <span class="math inline">\(w_i\)</span>这个系数可以抽象成<span class="math inline">\(w_i\)</span>个点摞在一起</p><p>最后问题被抽象为了数轴上有<span class="math inline">\(\sum w_i\)</span>个点, 要求出一个点使得这个点到<span class="math inline">\(\sum w_i\)</span>的距离和最小</p><p>这个点很显然就是<span class="math inline">\(\sum w_i\)</span>个点排序后的最中间的那个点</p><p>所以每一次询问我们直接求出一个最小的<span class="math inline">\(pos\)</span>使得 <span class="math display">\[2 \cdot (\sum _{i = l} ^ {i \le pos} w_i) \ge \sum _ {i = l} ^ {i \le r} w_i \]</span> 求出这个位置后, 在这个位置左边的和右边的分开处理(可以去掉绝对值), 就好了</p><p>然后这道题很良心的是它保证了<span class="math inline">\(g_i\)</span>有序, 所以我们可以直接二分套<span class="math inline">\(BIT\)</span>或者在线段树上二分, 但是如果<span class="math inline">\(g_i\)</span>无序, 我们可以考虑带修主席树, 也是可以维护上面那个式子的</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, a[maxn], w[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dec</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x -= y; <span class="keyword">return</span> x &lt; <span class="number">0</span> ? x + P : x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;LL rnt = <span class="number">1l</span>l * x * y; <span class="keyword">return</span> (<span class="keyword">int</span>)(rnt &gt;= P ? rnt % P : rnt);&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BIT</span> &#123;</span></span><br><span class="line">LL C[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">while</span>(p &lt;= n) &#123;C[p] += x; p += (-p &amp; p);&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">query</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;LL rnt = <span class="number">0</span>; <span class="keyword">while</span>(p) &#123;rnt += C[p]; p -= (-p &amp; p);&#125; <span class="keyword">return</span> rnt;&#125;</span><br><span class="line">&#125;T;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">BIT</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> C[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">while</span>(p &lt;= n) &#123;C[p] = pls(C[p], x); p += (-p &amp; p);&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;<span class="keyword">int</span> rnt = <span class="number">0</span>; <span class="keyword">while</span>(p) &#123;rnt = pls(rnt, C[p]); p -= (-p &amp; p);&#125; <span class="keyword">return</span> rnt;&#125;</span><br><span class="line">&#125;T0;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">getpos</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">LL S = T.query(r) - T.query(l - <span class="number">1</span>), tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>, ans = <span class="number">0</span>, L = l;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r) &#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">tmp = T.query(mid) - T.query(L - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(tmp * <span class="number">2</span> &gt;= S) r = mid - <span class="number">1</span>, ans = mid;</span><br><span class="line"><span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) a[i] = read() - i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">w[i] = read(); T.modify(i, w[i]);</span><br><span class="line">T0.modify(i, mul(a[i], w[i]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> l = read(), r = read();</span><br><span class="line"><span class="keyword">if</span>(l &lt; <span class="number">0</span>) &#123;</span><br><span class="line">T.modify(-l, r - w[-l]);</span><br><span class="line">T0.modify(-l, dec(mul(a[-l], r), mul(a[-l], w[-l])));</span><br><span class="line">w[-l] = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> pos = getpos(l, r);</span><br><span class="line"><span class="keyword">int</span> S0 = (T.query(pos) - T.query(l - <span class="number">1</span>) + P) % P;</span><br><span class="line"><span class="keyword">int</span> S1 = (T.query(r) - T.query(pos) + P) % P;</span><br><span class="line"><span class="keyword">int</span> P1 = dec(mul(S0, a[pos]), dec(T0.query(pos), T0.query(l - <span class="number">1</span>)));</span><br><span class="line"><span class="keyword">int</span> P2 = dec(dec(T0.query(r), T0.query(pos)), mul(S1, a[pos]));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, pls(P1, P2));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> CodeForces </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>EducationalCodeforcesRound51</title>
      <link href="/2018/09/25/EducationalCodeforcesRound51/"/>
      <url>/2018/09/25/EducationalCodeforcesRound51/</url>
      <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/RWhX5GjRxVCYDJrPuDbxwuyqXrmUVRGuwGfdlRBeOe0!/r/dFYBAAAAAAAA"> <a id="more"></a></p><h1 id="educationalcodeforcesround51"><a href="https://codeforc.es/contest/1051" target="_blank" rel="noopener">EducationalCodeforcesRound51</a></h1><h2 id="a.vasya-and-password"><a href="https://codeforc.es/contest/1051/problem/A" target="_blank" rel="noopener">A.Vasya And Password</a></h2><p>题目大意 : 给你一个长度为<span class="math inline">\(N(N \ge 6)\)</span>包含大写, 小写字母, 和数字的字符串(可能不会全部包含), 要求你将字符串改成三种都包含的字符串的最小花费, 定义花费为 : 修改的两个字符串的距离</p><p>题解 :</p><ul><li>如果包含上述字符的任意两种, 就将其中字符集大于<span class="math inline">\(2\)</span>的其中任意一个字符修改成你所需要的</li><li>如果只包含一种, 就将任意相邻的字符改为你所需要的两个字符</li></ul><p>可以证明这样修改花费一定最小</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, f0, f1, f2, p[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">char</span> si)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(si &gt;= <span class="string">'a'</span> &amp;&amp; si &lt;= <span class="string">'z'</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(si &gt;= <span class="string">'A'</span> &amp;&amp; si &lt;= <span class="string">'Z'</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(si &gt;= <span class="string">'0'</span> &amp;&amp; si &lt;= <span class="string">'9'</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">T = read();</span><br><span class="line"><span class="keyword">while</span>(T--) &#123;</span><br><span class="line"><span class="built_in">memset</span>(p, <span class="number">0</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s + <span class="number">1</span>);</span><br><span class="line">n = <span class="built_in">strlen</span>(s + <span class="number">1</span>); f0 = f1 = f2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] &gt;= <span class="string">'a'</span> &amp;&amp; s[i] &lt;= <span class="string">'z'</span>) f0 = <span class="number">1</span>, p[<span class="number">0</span>]++;</span><br><span class="line"><span class="keyword">if</span>(s[i] &gt;= <span class="string">'A'</span> &amp;&amp; s[i] &lt;= <span class="string">'Z'</span>) f1 = <span class="number">1</span>, p[<span class="number">1</span>]++;</span><br><span class="line"><span class="keyword">if</span>(s[i] &gt;= <span class="string">'0'</span> &amp;&amp; s[i] &lt;= <span class="string">'9'</span>) f2 = <span class="number">1</span>, p[<span class="number">2</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(f0 &amp;&amp; f1 &amp;&amp; f2)&#123;<span class="built_in">puts</span>(s + <span class="number">1</span>); <span class="keyword">continue</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(f0 + f1 + f2 &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(p[get(s[i])] &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(!f0) s[i] = <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!f1) s[i] = <span class="string">'A'</span>;</span><br><span class="line"><span class="keyword">else</span> s[i] = <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(f0) s[<span class="number">1</span>] = <span class="string">'A'</span>, s[<span class="number">2</span>] = <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(f1)s[<span class="number">1</span>] = <span class="string">'a'</span>, s[<span class="number">2</span>] = <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">else</span> s[<span class="number">1</span>] = <span class="string">'a'</span>, s[<span class="number">2</span>] = <span class="string">'A'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(s + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="b.relatively-prime-pairs"><a href="https://codeforc.es/contest/1051/problem/B" target="_blank" rel="noopener">B.Relatively Prime Pairs</a></h2><p>题目大意 : 给定一个区间<span class="math inline">\([l, r]\)</span>, <span class="math inline">\(l, r \le 10^{18}, (r - l + 1) = 0 (mod \ \ 2)\)</span>, 要你求出<span class="math inline">\(\frac {r - l + 1}{2}\)</span>对二元组, 使得每个数都属于上述区间, 并且选出的元素不重复, 并且二元组中的元素互质</p><p>题解 : 显然<span class="math inline">\(gcd(n, n+1) = 1\)</span>, 然后直接输出就好了</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">gcd</span><span class="params">(LL x, LL y)</span> </span>&#123;<span class="keyword">return</span> y == <span class="number">0</span> ? x : gcd(y, x % y);&#125;</span><br><span class="line"></span><br><span class="line">LL l, r;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">l = read(); r = read();</span><br><span class="line"><span class="keyword">if</span>((r - l + <span class="number">1</span>) % <span class="number">2</span> == <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = l; i &lt;= r; i += <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>, i, i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="c.vasya-and-multisets"><a href="https://codeforc.es/contest/1051/problem/C" target="_blank" rel="noopener">C.Vasya and Multisets</a></h2><p>题目大意 : 给你一个可重集, 定义一个集合的价值为这个集合中出现次数为一的元素的个数, 要求你将集合分为两个, 使得两个集合的价值相同</p><p>题解 : 我们记原集合出现过一次的元素的个数为<span class="math inline">\(cnt\)</span>, 出现过两次的元素的个数为<span class="math inline">\(con\)</span>, 去重后集合的元素的个数为<span class="math inline">\(tot\)</span></p><p>然后我们可以不管出现过两次的元素, 因为你如果把这个元素分开放, 那么两个集合的价值都会加<span class="math inline">\(1\)</span>, 如果都放在一个集合里面, 两个集合的价值并不会改变, 所以出现过两次的元素并不会影响答案</p><p>如果<span class="math inline">\(con \&amp; 1\)</span>并且<span class="math inline">\(tot = cnt + con\)</span>就是不行的, 因为你并不能通过放置出现次数大于三的元素, 来改变答案</p><p>最后我们分类讨论一下</p><ul><li>如果<span class="math inline">\(con = 0\)</span>, 直接全部丢到一个集合里去</li><li>如果<span class="math inline">\(con = 0 (mod \ \ 2)\)</span>, 把出现次数大于一的全部丢到一个集合, 然后把出现次数为一的平均的丢到两个集合</li><li>如果<span class="math inline">\(con \&amp; 1\)</span>, 把某一个出现次数大于二的丢到<span class="math inline">\(B\)</span>集合, 剩余的出现次数大于一的元素丢到<span class="math inline">\(A\)</span>集合, 然后<span class="math inline">\(\lfloor \frac{cnt}{2} \rfloor\)</span>个出现次数为一的丢到<span class="math inline">\(A\)</span>集合, 剩余的出现次数为一的丢到<span class="math inline">\(B\)</span>集合</li></ul><p>然后就<del>轻松</del>的<span class="math inline">\(A\)</span>掉了这道题</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[maxn], vis[maxn], cnt, b[maxn], c[maxn], con[maxn], o, z, u, A, B;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">con[a[i] = b[i] = read()]++;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    sort(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">a[<span class="number">0</span>] = unique(a + <span class="number">1</span>, a + <span class="number">1</span> + n) - a - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a[<span class="number">0</span>]; i++)</span><br><span class="line"><span class="keyword">if</span>(con[a[i]] == <span class="number">2</span>) cnt++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(con[a[i]] == <span class="number">1</span>) o++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((a[<span class="number">0</span>] - o - cnt) &lt;= <span class="number">0</span> &amp;&amp; (o &amp; <span class="number">1</span>)) &#123;<span class="built_in">puts</span>(<span class="string">"NO"</span>); <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(o &lt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'A'</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> p = lower_bound(a + <span class="number">1</span>, a + <span class="number">1</span> + n, b[i]) - a;</span><br><span class="line"><span class="keyword">if</span>(con[b[i]] == <span class="number">2</span>) &#123;<span class="built_in">putchar</span>(<span class="string">'A'</span>); <span class="keyword">continue</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(o &amp; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(vis[p]) &#123;<span class="built_in">putchar</span>(vis[p] == <span class="number">1</span> ? <span class="string">'B'</span> : <span class="string">'A'</span>); <span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(u &amp;&amp; con[b[i]] &gt; <span class="number">2</span>) &#123;<span class="built_in">putchar</span>(<span class="string">'A'</span>); <span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(A &lt; (o + <span class="number">1</span>) / <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'A'</span>); A++;</span><br><span class="line"><span class="keyword">if</span>(con[b[i]] &gt; <span class="number">2</span>) vis[p] = <span class="number">1</span>, u = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'B'</span>); B++;</span><br><span class="line"><span class="keyword">if</span>(con[b[i]] &gt; <span class="number">2</span>) vis[p] = <span class="number">2</span>, u = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(con[b[i]] &gt; <span class="number">2</span>) &#123;<span class="built_in">putchar</span>(<span class="string">'A'</span>); <span class="keyword">continue</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span>(A &lt; o / <span class="number">2</span>) <span class="built_in">putchar</span>(<span class="string">'A'</span>), A++;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">putchar</span>(<span class="string">'B'</span>), B++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="d.bicolorings"><a href="https://codeforc.es/contest/1051/problem/D" target="_blank" rel="noopener">D.Bicolorings</a></h2><p>题目大意 : 给出一个<span class="math inline">\(N \times 2\)</span>的矩阵, 定义两个块联通仅当两个块有公共边且两个块的颜色相同, 要求求出当这个矩阵的联通为<span class="math inline">\(k\)</span>时的黑白染色的方案数</p><p>题解 : 我们考虑<span class="math inline">\(dp\)</span>, 设状态<span class="math inline">\(f[i][j][0/1][0/1]\)</span>, 表示染色染到第<span class="math inline">\(i\)</span>列, 当前联通块的个数为<span class="math inline">\(j\)</span>, 第<span class="math inline">\(i\)</span>列的第一行为黑色或白色, 第二列为黑色或白色的方案数</p><p>然后就是转移, 首先我们知道如果增加一列最多只会增加两个联通块, 所以我们可以以此为依据来转移</p><ul><li><p>当增加两个联通块时, 只有可能是黑白变白黑或者白黑变黑白</p></li><li><p>当增加一个联通块时, 黑黑变黑白, 白白变黑白(白黑同理), 或者白白变黑黑, 黑黑变白白</p></li><li><p>当不增加联通块时, 白黑变黑黑, 白黑变白白(黑白同理), 或者直接不变</p></li></ul><p>然后就完了, 或者直接向官方题解一样状压<span class="math inline">\(dp\)</span>, 就不用像我这么麻烦了</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k, f[maxn][maxn &lt;&lt; <span class="number">1</span>][<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); k = read();</span><br><span class="line"></span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] = f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">f[<span class="number">1</span>][<span class="number">2</span>][<span class="number">0</span>][<span class="number">1</span>] = f[<span class="number">1</span>][<span class="number">2</span>][<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(j &gt; <span class="number">2</span>) &#123;</span><br><span class="line">f[i][j][<span class="number">0</span>][<span class="number">1</span>] = pls(f[i][j][<span class="number">0</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][j - <span class="number">2</span>][<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">f[i][j][<span class="number">1</span>][<span class="number">0</span>] = pls(f[i][j][<span class="number">1</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][j - <span class="number">2</span>][<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j &gt; <span class="number">1</span>) &#123;</span><br><span class="line">f[i][j][<span class="number">0</span>][<span class="number">1</span>] = pls(f[i][j][<span class="number">0</span>][<span class="number">1</span>], pls(f[i - <span class="number">1</span>][j - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][j - <span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>]));</span><br><span class="line">f[i][j][<span class="number">1</span>][<span class="number">0</span>] = pls(f[i][j][<span class="number">1</span>][<span class="number">0</span>], pls(f[i - <span class="number">1</span>][j - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][j - <span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>]));</span><br><span class="line">f[i][j][<span class="number">1</span>][<span class="number">1</span>] = pls(f[i][j][<span class="number">1</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][j - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">f[i][j][<span class="number">0</span>][<span class="number">0</span>] = pls(f[i][j][<span class="number">0</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][j - <span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">f[i][j][<span class="number">0</span>][<span class="number">1</span>] = pls(f[i][j][<span class="number">0</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][j][<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">f[i][j][<span class="number">1</span>][<span class="number">0</span>] = pls(f[i][j][<span class="number">1</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][j][<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">f[i][j][<span class="number">0</span>][<span class="number">0</span>] = pls(f[i][j][<span class="number">0</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][j][<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">f[i][j][<span class="number">1</span>][<span class="number">1</span>] = pls(f[i][j][<span class="number">1</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][j][<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">f[i][j][<span class="number">1</span>][<span class="number">1</span>] = pls(f[i][j][<span class="number">1</span>][<span class="number">1</span>], pls(f[i - <span class="number">1</span>][j][<span class="number">0</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][j][<span class="number">1</span>][<span class="number">0</span>]));</span><br><span class="line">f[i][j][<span class="number">0</span>][<span class="number">0</span>] = pls(f[i][j][<span class="number">0</span>][<span class="number">0</span>], pls(f[i - <span class="number">1</span>][j][<span class="number">0</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][j][<span class="number">1</span>][<span class="number">0</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; pls(pls(f[n][k][<span class="number">0</span>][<span class="number">0</span>], f[n][k][<span class="number">1</span>][<span class="number">1</span>]), pls(f[n][k][<span class="number">1</span>][<span class="number">0</span>], f[n][k][<span class="number">0</span>][<span class="number">1</span>]));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="e.vasya-and-big-integers"><a href="https://codeforc.es/contest/1051/problem/E" target="_blank" rel="noopener">E.Vasya and Big Integers</a></h2><p>题目大意 : 给你一个很大的数字, 你可将其分成若干段, 要求每段数不含前导零, 并且每段数的大小都在<span class="math inline">\([l, r]\)</span>这个区间内的方案数, <span class="math inline">\(l, r\)</span>包括这个数的范围都小于<span class="math inline">\(10^{1000000}\)</span></p><p>题解 : 我们考虑<span class="math inline">\(dp\)</span>, 设状态<span class="math inline">\(f[i]\)</span>表示到第<span class="math inline">\(i\)</span>包括第<span class="math inline">\(i\)</span>位有多少种合法的方案, 转移很好想, 我们直接考虑从第<span class="math inline">\(i\)</span>为开始的后<span class="math inline">\(len_l\)</span>个数拼成的数和<span class="math inline">\(l\)</span>的大小, 和后<span class="math inline">\(len_r\)</span>个数拼成的数和<span class="math inline">\(r\)</span>的大小, 如果小于<span class="math inline">\(l\)</span>直接往后挪一位, 如果大于<span class="math inline">\(r\)</span>直接往前挪一位, 设最后确定的左端点为第<span class="math inline">\(i\)</span>位往后挪<span class="math inline">\(d_l\)</span>个数, 右端点为第<span class="math inline">\(i\)</span>往后挪<span class="math inline">\(d_r\)</span>位, 则转移方程为 <span class="math display">\[f[i] = \sum_{j = i + d_l}^{j \le i +d_r} f[j]\]</span> 这个很显然是个前缀或者后缀和的形式, 直接维护一下就好了, 那么至此问题就被转化为了如何比较两个位数相同的数的大小, 显然是直接比较两个字符串<span class="math inline">\(LCP\)</span>后一位的那个数的大小, 求<span class="math inline">\(LCP\)</span>可以直接用<span class="math inline">\(O(1)\)</span>的<span class="math inline">\(Z-function\)</span>或者<span class="math inline">\(O(logn)\)</span>的<span class="math inline">\(Hash\)</span></p><p>最后有个小<span class="math inline">\(trick\)</span>就是我们可以直接倒着<span class="math inline">\(dp\)</span>就可以很好的避免前导零的问题了</p><p><span class="math inline">\(PS\)</span>: <span class="math inline">\(Hash\)</span>可能会被卡常</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e6</span> + <span class="number">50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ln, rn, n, z1[maxn], z2[maxn], f[maxn], S[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s0[maxn], s1[maxn], s2[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dec</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x -= y; <span class="keyword">return</span> x &lt; <span class="number">0</span> ? x + P : x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Zfunction</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> *z, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">z[<span class="number">1</span>] = n; <span class="keyword">int</span> j = <span class="number">2</span>, k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i = k) &#123;</span><br><span class="line"><span class="keyword">if</span>(j &lt; i) j = i;</span><br><span class="line"><span class="keyword">while</span>(j &lt;= n &amp;&amp; s[j] == s[j - i + <span class="number">1</span>]) j++;</span><br><span class="line">z[i] = j - i; k = i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k + z[k - i + <span class="number">1</span>] &lt; j) &#123;</span><br><span class="line">z[k] = z[k - i + <span class="number">1</span>]; k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> *s0, <span class="keyword">char</span> *s1, <span class="keyword">int</span> z, <span class="keyword">int</span> pos, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(pos + len - <span class="number">1</span> &gt; n) <span class="keyword">return</span> <span class="string">'&lt;'</span>;</span><br><span class="line"><span class="keyword">if</span>(z == len) <span class="keyword">return</span> <span class="string">'='</span>;</span><br><span class="line"><span class="keyword">if</span>(s0[pos + z] &lt; s1[z + <span class="number">1</span>]) <span class="keyword">return</span> <span class="string">'&lt;'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>, s0 + <span class="number">1</span>, s1 + <span class="number">1</span>, s2 + <span class="number">1</span>);</span><br><span class="line">ln = <span class="built_in">strlen</span>(s1 + <span class="number">1</span>); rn = <span class="built_in">strlen</span>(s2 + <span class="number">1</span>);</span><br><span class="line">n = <span class="built_in">strlen</span>(s0 + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">s1[ln + <span class="number">1</span>] = <span class="number">0</span>; s2[rn + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">s1[ln + <span class="number">1</span> + i] = s0[i], s2[rn + <span class="number">1</span> + i] = s0[i];</span><br><span class="line"></span><br><span class="line">Zfunction(s1, z1, ln + n + <span class="number">1</span>); Zfunction(s2, z2, rn + n + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">f[n + <span class="number">1</span>] = S[n + <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span>(s0[i] == <span class="string">'0'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(s1[<span class="number">1</span>] == <span class="string">'0'</span> &amp;&amp; ln == <span class="number">1</span>) f[i] = f[i + <span class="number">1</span>];</span><br><span class="line">S[i] = pls(S[i + <span class="number">1</span>], f[i]); <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> l = i + ln, r = i + rn;</span><br><span class="line"><span class="keyword">int</span> p1 = z1[i + ln + <span class="number">1</span>], p2 = z2[i + rn + <span class="number">1</span>], rnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(cmp(s0, s1, p1, i, ln) == <span class="string">'&lt;'</span>) l++;</span><br><span class="line"><span class="keyword">if</span>(cmp(s0, s2, p2, i, rn) == <span class="string">'&gt;'</span>) r--;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(l &lt;= n + <span class="number">1</span> &amp;&amp; l &lt;= r) &#123;</span><br><span class="line">rnt = S[l]; r = min(r, n + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//if(r != n + 1)</span></span><br><span class="line">           rnt = dec(rnt, S[r + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">S[i] = pls(S[i + <span class="number">1</span>], f[i] = rnt);</span><br><span class="line"></span><br><span class="line"><span class="comment">//cerr &lt;&lt; "#Case : " &lt;&lt; i &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cerr &lt;&lt; l &lt;&lt; " " &lt;&lt; r &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cerr &lt;&lt; "f[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; f[i] &lt;&lt; ", S[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; S[i] &lt;&lt; endl;</span></span><br><span class="line">&#125; <span class="built_in">cout</span> &lt;&lt; f[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="f.the-shortest-statement"><a href="https://codeforc.es/contest/1051/problem/F" target="_blank" rel="noopener">F.The Shortest Statement</a></h2><p>题目大意 : 给你一张无向图, 现在有<span class="math inline">\(Q\)</span>次询问, 每次询问一个点对<span class="math inline">\((u, v)\)</span>求这两个点之间的最短路, 保证<span class="math inline">\(m - n \le 20\)</span></p><p>题解 : 我们关注一下题面中给的数据范围, 边的数量减去点的数量不超过二十, 很显然要从这个条件入手, 我们考虑一个问题, 如果只有<span class="math inline">\(n-1\)</span>条边的话就是一颗树了, 在树上我们可以直接查询<span class="math inline">\(LCA\)</span>来解决询问, 那么对于一颗树, 每加一条边就会多出一个环, 最多多加<span class="math inline">\(20\)</span>条边, 也就说最多只有二十个环, 而如果把这些环拆开来就是一棵树了, 那我们直接对每个环上拆开的那个断点进行<span class="math inline">\(Dij\)</span>就好了啊, 剩下的构成一棵树, 最后的答案就是 <span class="math display">\[min(dis[u] + dis[v] - 2 * dis[LCA(u, v)], min\{d[i][v] + d[i][u]\})\]</span> <span class="math inline">\(i\)</span>代表二十个断点中点的编号</p><p>那具体怎么实现呢? 步骤如下</p><ul><li>直接从一号节点开始<span class="math inline">\(dfs\)</span>, 每搜到一个点就打标</li><li>如果要访问的这个点没有被打标, 就直接像搜树一样记录<span class="math inline">\(fa\)</span>, <span class="math inline">\(deep\)</span></li><li>如果要访问的这个点被打标了, 那么将这个点记录下来, 最后直接迪杰斯特拉</li></ul><p><del>感觉很水</del>, 比赛的时候想是想出来了, 但没有敢打</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> LL inf = <span class="number">1l</span>l &lt;&lt; <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, Q, fa[maxn][<span class="number">18</span>];</span><br><span class="line"><span class="keyword">int</span> head[maxn], cnt = <span class="number">1</span>, C[maxn];</span><br><span class="line"><span class="keyword">int</span> deep[maxn], vis[maxn], tot;</span><br><span class="line">LL d[maxn], dis[<span class="number">45</span>][maxn];</span><br><span class="line"></span><br><span class="line">priority_queue&lt;pair&lt;LL, <span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Graph</span> &#123;</span><span class="keyword">int</span> to, nt, w;&#125; e[maxn &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ini</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span> </span>&#123;e[++cnt] = (Graph)&#123;y, head[x], w&#125;; head[x] = cnt;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now)</span> </span>&#123;</span><br><span class="line">vis[now] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; (<span class="number">1</span> &lt;&lt; i) &lt;= deep[now]; i++)</span><br><span class="line">fa[now][i] = fa[fa[now][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = head[now]; i; i = e[i].nt) &#123;</span><br><span class="line"><span class="keyword">int</span> v = e[i].to;</span><br><span class="line"><span class="keyword">if</span>(v == fa[now][<span class="number">0</span>]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(!vis[v]) &#123;</span><br><span class="line">fa[v][<span class="number">0</span>] = now; deep[v] = deep[now] + <span class="number">1</span>;</span><br><span class="line">d[v] = d[now] + e[i].w;</span><br><span class="line">dfs(v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> C[++tot] = now, C[++tot] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(deep[x] &lt; deep[y]) swap(x, y);</span><br><span class="line"><span class="keyword">int</span> tot = deep[x] - deep[y];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">17</span>; ~i; i--)</span><br><span class="line"><span class="keyword">if</span>(tot &amp; (<span class="number">1</span> &lt;&lt; i)) x = fa[x][i];</span><br><span class="line"><span class="keyword">if</span>(x == y) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">17</span>; ~i; i--)</span><br><span class="line"><span class="keyword">if</span>(fa[x][i] != fa[y][i])</span><br><span class="line">x = fa[x][i], y = fa[y][i];</span><br><span class="line"><span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Dij</span><span class="params">(<span class="keyword">int</span> S, LL *dis)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">dis[i] = inf, vis[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line">q.push(make_pair(dis[S] = <span class="number">0</span>, S));</span><br><span class="line"><span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> now = q.top().second; q.pop();</span><br><span class="line"><span class="keyword">if</span>(vis[now]) <span class="keyword">continue</span>; vis[now] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = head[now]; i; i = e[i].nt) &#123;</span><br><span class="line"><span class="keyword">int</span> v = e[i].to;</span><br><span class="line"><span class="keyword">if</span>(dis[v] &gt; dis[now] + e[i].w) &#123;</span><br><span class="line">dis[v] = dis[now] + e[i].w;</span><br><span class="line">q.push(make_pair(-dis[v], v));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> lca = LCA(x, y); LL ans = <span class="number">0</span>;</span><br><span class="line">ans = d[x] + d[y] - <span class="number">2</span> * d[lca];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= C[<span class="number">0</span>]; i++)</span><br><span class="line">ans = min(ans, dis[i][x] + dis[i][y]);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> x = read(), y = read(), w = read();</span><br><span class="line">ini(x, y, w); ini(y, x, w);</span><br><span class="line">&#125;</span><br><span class="line">deep[<span class="number">1</span>] = <span class="number">1</span>; fa[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">sort(C + <span class="number">1</span>, C + <span class="number">1</span> + tot);</span><br><span class="line">C[<span class="number">0</span>] = unique(C + <span class="number">1</span>, C + <span class="number">1</span> + tot) - C - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= C[<span class="number">0</span>]; i++)</span><br><span class="line">        Dij(C[i], dis[i]);</span><br><span class="line"></span><br><span class="line">Q = read();</span><br><span class="line"><span class="keyword">while</span>(Q--) &#123;</span><br><span class="line"><span class="keyword">int</span> x = read(), y = read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, Query(x, y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="summary">Summary</h2><ul><li>打的时候尽量在不出错的情况下提高手速</li><li>读题读快一点</li><li>有想法就尽量去实现</li></ul>]]></content>
      
      <categories>
          
          <category> CodeForces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 模拟 </tag>
            
            <tag> Z-function </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>卢卡斯定理学习笔记</title>
      <link href="/2018/09/08/ExLucas/"/>
      <url>/2018/09/08/ExLucas/</url>
      <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/fQdavSnNLoUa6Snba7jQtoUe5QEPe9jGRXdd0.A*Sv8!/r/dDYBAAAAAAAA"></p><a id="more"></a><h1 id="卢卡斯定理">卢卡斯定理</h1><p>常用于求解<span class="math inline">\(\binom{n}{m} (mod \ \ P)\)</span> , 且<span class="math inline">\(n\)</span>, <span class="math inline">\(m\)</span>值域特别大, 而 <span class="math inline">\(P\)</span> 的值域比较小</p><h2 id="p为素数"><span class="math inline">\(P\)</span>为素数</h2><p>直接记定理就好了 : <span class="math display">\[\binom{n}{m} (mod \ \ P)= \binom{n / P}{m / P} \cdot \binom {n \% P}{m \% P} (mod\ \ P)\]</span> 然后我们预处理出<span class="math inline">\(1 \sim P\)</span>的阶乘和逆元, 那么求这个组合数的复杂度就是<span class="math inline">\(O(P + log_P^{n})\)</span></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, fac[maxn], P;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)&#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>)cnt = <span class="number">1l</span>l * cnt * x % P;</span><br><span class="line">x = <span class="number">1l</span>l * x * x % P; k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> P)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n &lt; m)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>)(<span class="number">1l</span>l * fac[n] * ksm(fac[n - m], P - <span class="number">2</span>) % P * ksm(fac[m], P - <span class="number">2</span>) % P);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="title">Lucas</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> P)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">0</span> || m == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>)(<span class="number">1l</span>l * Lucas(n / P, m / P, P) * C(n % P, m % P, P) % P);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); m = read(); P = read();</span><br><span class="line">fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= P; i++)</span><br><span class="line">fac[i] = <span class="number">1l</span>l * fac[i - <span class="number">1</span>] * i % P;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; Lucas(n, m, P);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="p-不为素数"><span class="math inline">\(P\)</span> 不为素数</h2><p>其实这个东西和卢卡斯定理并没有什么关系</p><p>因为<span class="math inline">\(P\)</span>不为素数, 所以 : <span class="math display">\[P = \prod P_i^{a_i}\]</span> 我们考虑求出 <span class="math display">\[\binom {n}{m} (mod \ \ P_i^{a_i})\]</span> 然后直接用<span class="math inline">\(CRT\)</span>合并就是答案了</p><p>那么现在问题转化为了如何快速求出<span class="math inline">\(\binom{n}{m}(mod\ \ P_i^{a_i})\)</span>了</p><p>因为实在膜 <span class="math inline">\(P_i^{a_i}\)</span> 的意义下, 所以阶乘其实是有循环节的, 我们可以考虑直接暴力处理循环节和不完整的循环</p><p>难道这样就好了吗, 事实上并没有这么简单</p><p>因为<span class="math inline">\(P_i^{a_i}\)</span>是<span class="math inline">\(P_i\)</span>的倍数, 所以很有可能再膜意义下就直接变为零了, 但是事实上并不是这样的, 我们观察组合数的公式 : <span class="math display">\[\binom {n}{m} = \frac{n!}{(n - m)!m!}\]</span> 所以分母和分子的<span class="math inline">\(P_i\)</span>是可已被约掉的, 所以我们不能直接取膜, 我们再考虑把是<span class="math inline">\(P_i\)</span>的倍数的数给单独提出来搞一下</p><p>那么 <span class="math display">\[fac(n) = \big(fac(\lfloor \frac{n}{P_i^{a_i}} \rfloor) \cdot P_i^{\lfloor \frac{n}{P_i^{a_i}} \rfloor}\big) \cdot \big(\prod_{i = 1}^{P_i^{a_i}} i\big) \cdot \big(\prod_{i = 1}^{n \% P_i^{a_i}} i\big) (mod \ \ P_i^{a_i})\]</span> 我们发现这个是一个递归式, 那么直接递归就好了, 特别的如果<span class="math inline">\(n = 0\)</span>就返回<span class="math inline">\(1\)</span></p><p>需要注意的是<span class="math inline">\(P_i\)</span>这个东西不能在递归的时候直接乘上, 我们考虑, 在递归完之后, 或者递归之前直接处理出来就好了</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">LL n, m, P;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">ksm</span><span class="params">(LL x, LL k, LL P)</span></span>&#123;</span><br><span class="line">LL cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)&#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>)cnt = cnt * x % P;</span><br><span class="line">x = x * x % P; k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">Exgcd</span><span class="params">(LL a, LL b, LL &amp;x, LL &amp;y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b == <span class="number">0</span>)&#123;x = <span class="number">1</span>; y = <span class="number">0</span>; <span class="keyword">return</span> a;&#125;</span><br><span class="line">LL x0 = <span class="number">0</span>, y0 = <span class="number">0</span>;</span><br><span class="line">LL d = Exgcd(b, a % b, y0, x0);</span><br><span class="line">x = x0; y = y0 - ((a / b) * x0);</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">fac</span><span class="params">(LL n, LL Pi, LL Pk)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">LL rnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Pk; i++)</span><br><span class="line"><span class="keyword">if</span>(i % Pi)rnt = rnt * i % Pk;</span><br><span class="line">rnt = ksm(rnt, n / Pk, Pk);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n % Pk; i++)</span><br><span class="line"><span class="keyword">if</span>(i % Pi)rnt = rnt * i % Pk;</span><br><span class="line"><span class="keyword">return</span> rnt * fac(n / Pi, Pi, Pk) % Pk;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">inv</span><span class="params">(LL x, LL P)</span></span>&#123;</span><br><span class="line">LL inv, tmp;</span><br><span class="line">Exgcd(x, P, inv, tmp);</span><br><span class="line"><span class="keyword">return</span> (inv + P) % P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">ExLucas</span><span class="params">(LL n, LL m, LL Pi, LL Pk)</span></span>&#123;</span><br><span class="line">LL C1 = fac(n, Pi, Pk), C2 = fac(n - m, Pi, Pk), C3 = fac(m, Pi, Pk);</span><br><span class="line">LL tim = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = n; i; i /= Pi)tim += i / Pi;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = n - m; i; i /= Pi)tim -= i / Pi;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = m; i; i /= Pi)tim -= i / Pi;</span><br><span class="line"><span class="keyword">return</span> C1 * inv(C2, Pk) % Pk * inv(C3, Pk) % Pk * ksm(Pi, tim, Pk) % Pk;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">China</span><span class="params">(LL n, LL m, LL P)</span></span>&#123;</span><br><span class="line">LL A = <span class="number">0</span>, M = P, Pk = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = <span class="number">2</span>; i &lt;= P; i++)</span><br><span class="line"><span class="keyword">if</span>(P % i == <span class="number">0</span>)&#123;</span><br><span class="line">Pk = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(P % i == <span class="number">0</span>)Pk *= i, P /= i;</span><br><span class="line">A = (A + ExLucas(n, m, i, Pk) * inv(M / Pk, Pk) % M * (M / Pk) % M) % M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (A + M) % M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); m = read(); P = read();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; China(n, m, P);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OI笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CRT </tag>
            
            <tag> Exgcd </tag>
            
            <tag> ExLucas </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水题记录1.0</title>
      <link href="/2018/09/04/%E6%B0%B4%E9%A2%98%E8%AE%B0%E5%BD%951.0/"/>
      <url>/2018/09/04/%E6%B0%B4%E9%A2%98%E8%AE%B0%E5%BD%951.0/</url>
      <content type="html"><![CDATA[<h1 style="text-align: center"><font color="#ff 0000"> 15/15</font></h1><p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/Ep*AEoNkOIvyrbtXCVz0h86q4xsyzzcAs3R*hMMnqHw!/r/dFMBAAAAAAAA"> <a id="more"></a></p><h1 id="水题记录">水题记录</h1><h2 id="bzoj1951古代猪文"><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1951" target="_blank" rel="noopener">1.BZOJ1951古代猪文</a></h2><p>题目大意 : 要求求出 <span class="math display">\[G^{\sum \{C_{K}^{N}, K\mid N\}} \% 999911659\]</span> <span class="math inline">\(N \leq 10^9 , G \leq 10^9\)</span></p><p>题解 :</p><p>我们考虑一个事实 <span class="math display">\[G ^ P = G ^ {P \% \phi(P)} (mod \ \ P)\]</span> 因为 <span class="math inline">\(P\)</span> 是质数所以<span class="math inline">\(G^{\phi(P)} = 1(mod \ \ P)\)</span>, 然后可以知道, <span class="math display">\[G ^ P = G ^ {P + k \cdot \phi(P)} (mod \ \ P)\]</span> 即与上面那个式子等价</p><p>然后我们考虑怎么求 <span class="math display">\[\sum \{C_{K}^{N}, K\mid N\} \% \phi(P)\]</span> 因为<span class="math inline">\(\phi(P)\)</span>不是质数我们考虑用<span class="math inline">\(Lucas\)</span> <span class="math display">\[\phi(P) = P - 1 = 2 \cdot 3 \cdot 4679 \cdot 35617\]</span> 这样就很水了, 因为对于<span class="math inline">\(\phi(P)\)</span>的每个素因子的幂都是<span class="math inline">\(1\)</span></p><p>所以直接对于每个素因子用一下<span class="math inline">\(Lucas\)</span>, 最后直接<span class="math inline">\(CRT\)</span>合并一下素膜数就好了, <del>并不用ExCRT, 水水水</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">4e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P[<span class="number">5</span>] = &#123;<span class="number">999911659</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4679</span>, <span class="number">35617</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fac[<span class="number">5</span>][maxn], G, N, num[maxn], a[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k, <span class="keyword">int</span> mod)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x == mod)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)&#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>)cnt = <span class="number">1l</span>l * cnt * x % mod;</span><br><span class="line">x = <span class="number">1l</span>l * x * x % mod; k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">com</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m &gt; n)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>)(<span class="number">1l</span>l * fac[k][n] * ksm(fac[k][n - m], P[k] - <span class="number">2</span>, P[k]) % P[k] * ksm(fac[k][m], P[k] - <span class="number">2</span>, P[k]) % P[k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m == <span class="number">0</span> || n == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>)(<span class="number">1l</span>l * C(n / P[k], m / P[k], k) * com(n % P[k], m % P[k], k) % P[k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b == <span class="number">0</span>)&#123;x = <span class="number">1</span>; y = <span class="number">0</span>; <span class="keyword">return</span> a;&#125;</span><br><span class="line"><span class="keyword">int</span> x0 = <span class="number">0</span>, y0 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> d = exgcd(b, a % b, y0, x0);</span><br><span class="line">x = x0; y = y0 - ((a / b) * x0);</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">china</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">const</span> <span class="keyword">int</span> *m, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> A = <span class="number">0</span>, M = <span class="number">1</span>, tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)M *= m[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> Mi = M / m[i], inv;</span><br><span class="line">exgcd(Mi, m[i], inv, tmp);</span><br><span class="line">A = (A + <span class="number">1l</span>l * a[i] * Mi * inv) % M;</span><br><span class="line">&#125; <span class="keyword">return</span> (A % M + M) % M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">N = read(); G = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i * i &lt;= N; i++)</span><br><span class="line"><span class="keyword">if</span>(N % i == <span class="number">0</span>)&#123;</span><br><span class="line">num[++num[<span class="number">0</span>]] = i;</span><br><span class="line"><span class="keyword">if</span>(i * i != N)num[++num[<span class="number">0</span>]] = N / i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">1</span>; k &lt; <span class="number">5</span>; k++)&#123;</span><br><span class="line">fac[k][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; i++)</span><br><span class="line">fac[k][i] = <span class="number">1l</span>l * fac[k][i - <span class="number">1</span>] * i % P[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">1</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= num[<span class="number">0</span>]; i++)</span><br><span class="line">a[k] = (a[k] + C(N, num[i], k)) % P[k];</span><br><span class="line"><span class="comment">/*for(register int i = 1; i &lt;= num[0]; i++)</span></span><br><span class="line"><span class="comment">cout &lt;&lt; "num[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; num[i] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">for(register int i = 1; i &lt; 5; i++)</span></span><br><span class="line"><span class="comment">cout &lt;&lt; "a[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; a[i] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">int o = china(a, P, 4);</span></span><br><span class="line"><span class="comment">cout &lt;&lt; "P = " &lt;&lt; o &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; "G = " &lt;&lt; G &lt;&lt; endl;*/</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ksm(G, china(a, P, <span class="number">4</span>), P[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bzoj2142礼物"><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2142" target="_blank" rel="noopener">2.BZOJ2142礼物</a></h2><p>题目大意 : 有<span class="math inline">\(n\)</span>件礼物, <span class="math inline">\(m\)</span>个人, 要求每个人分得<span class="math inline">\(w_i\)</span>件礼物, 问有法案数对<span class="math inline">\(P\)</span>取膜后的结果</p><p>题解 : 很显然答案应该是 <span class="math display">\[\binom {n}{\sum w_i} \prod_{i = 1}^{m} \binom{w_i}{\sum_{j = 1}^{m}w_j} (mod \ \ P)\]</span> 然后因为题目不保证<span class="math inline">\(P\)</span>为素数, 所以直接 $ ExLucas $ 就好了</p><p>如果不会<span class="math inline">\(ExLucas\)</span>的, 可以<a href="http://www.vixbob-lwc.pw/2018/09/08/ExLucas/" target="_blank" rel="noopener">点击这里</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line">LL n, m, P, a[maxn], s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">ksm</span><span class="params">(LL x, LL k, LL P)</span></span>&#123;</span><br><span class="line">LL cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)&#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>)cnt = cnt * x % P;</span><br><span class="line">x = x * x % P; k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">Exgcd</span><span class="params">(LL a, LL b, LL &amp;x, LL &amp;y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b == <span class="number">0</span>)&#123;x = <span class="number">1</span>; y = <span class="number">0</span>; <span class="keyword">return</span> a;&#125;</span><br><span class="line">LL x0 = <span class="number">0</span>, y0 = <span class="number">0</span>;</span><br><span class="line">LL d = Exgcd(b, a % b, y0, x0);</span><br><span class="line">x = x0; y = y0 - ((a / b) * x0);</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">inv</span><span class="params">(LL x, LL P)</span></span>&#123;</span><br><span class="line">LL inv, tmp;</span><br><span class="line">Exgcd(x, P, inv, tmp);</span><br><span class="line"><span class="keyword">return</span> (inv + P) % P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">fac</span><span class="params">(LL n, LL Pi, LL Pk)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">LL rnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = <span class="number">2</span>; i &lt;= Pk; i++)</span><br><span class="line"><span class="keyword">if</span>(i % Pi)rnt = rnt * i % Pk;</span><br><span class="line">rnt = ksm(rnt, n / Pk, Pk);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = <span class="number">2</span>; i &lt;= n % Pk; i++)</span><br><span class="line"><span class="keyword">if</span>(i % Pi)rnt = rnt * i % Pk;</span><br><span class="line"><span class="keyword">return</span> rnt * fac(n / Pi, Pi, Pk) % Pk;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">ExLucas</span><span class="params">(LL n, LL m, LL Pi, LL Pk)</span></span>&#123;</span><br><span class="line">LL C1 = fac(n, Pi, Pk), C2 = fac(n - m, Pi, Pk), C3 = fac(m, Pi, Pk);</span><br><span class="line">LL tim = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = n; i; i /= Pi)tim += i / Pi;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = n - m; i; i /= Pi)tim -= i / Pi;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = m; i; i /= Pi)tim -= i / Pi;</span><br><span class="line"><span class="keyword">return</span> C1 * inv(C2, Pk) % Pk * inv(C3, Pk) % Pk * ksm(Pi, tim, Pk) % Pk;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">calc</span><span class="params">(LL n, LL m, LL Pi, LL Pk)</span></span>&#123;</span><br><span class="line">LL ans = ExLucas(n, a[<span class="number">0</span>], Pi, Pk);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">ans = ans * ExLucas(s[i], a[i], Pi, Pk) % Pk;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">China</span><span class="params">(LL n, LL m, LL P)</span></span>&#123;</span><br><span class="line">LL A = <span class="number">0</span>, M = P, Pk = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> LL i = <span class="number">2</span>; i &lt;= P; i++)</span><br><span class="line"><span class="keyword">if</span>(P % i == <span class="number">0</span>)&#123;</span><br><span class="line">Pk = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(P % i == <span class="number">0</span>)Pk *= i, P /= i;</span><br><span class="line">A = (A + calc(n, m, i, Pk) * (M / Pk) % M * inv(M / Pk, Pk) % M) % M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (A + M) % M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">P = read(); n = read(); m = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">a[<span class="number">0</span>] += (a[i] = read());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = m; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">s[i] = s[i + <span class="number">1</span>] + a[i];</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>] &gt; n)&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"Impossible"</span>; <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; China(n, m, P);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arc59-eキャンディーとn人の子供-children-and-candies"><a href="https://arc059.contest.atcoder.jp/tasks/arc059_c" target="_blank" rel="noopener">3.ARC59-EキャンディーとN人の子供 / Children and Candies</a></h2><p>题目大意 : 幼儿园里有<span class="math inline">\(n\)</span>个小朋友, 你有<span class="math inline">\(C\)</span>块糖, 第<span class="math inline">\(i\)</span>个小朋友一开始有一个兴奋程度<span class="math inline">\(x, x\in [A_i, B_i]\)</span>, 如果这个朋友获得了<span class="math inline">\(a_i\)</span>块糖, 那么<span class="math inline">\(Ta\)</span>的兴奋程度会变为<span class="math inline">\(x^{a_i}\)</span>, 定义整个幼儿园的兴奋程度为 <span class="math display">\[\prod_{i = 1}^{n}x^{a_i}\]</span> 要求求出, 对于所有的分糖方案的的整个幼儿园兴奋程度的和</p><p>题解 : 我们考虑<span class="math inline">\(dp\)</span>, 定义<span class="math inline">\(f[i][j]\)</span>, 为前<span class="math inline">\(i\)</span>个小朋友分了 <span class="math inline">\(j\)</span> 块糖的所有方案的幼儿园兴奋程度的和, 所以很显然有一个这样的转移 : <span class="math display">\[f[i][j] = \sum_{k = 0}^{j} \big(f[i][j - k] \cdot \sum_{v = A[i]}^{B[i]} v^{k}\big)\]</span> 我们发现样的话复杂度是<span class="math inline">\(O(n^4)\)</span>的, 复杂度很有问题</p><p>然后我们观察可以发现<span class="math inline">\(\sum_{v = A[i]}^{B[i]}v^k\)</span>和<span class="math inline">\(j\)</span>根本就没有关系, 所以没有必要每次都求一遍, 那么我么可以直接把<span class="math inline">\(k\)</span>放在第二层枚举, <span class="math inline">\(j\)</span>丢到最后一层枚举, 这样的话复杂度就成功的降为<span class="math inline">\(O(n^3)\)</span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">4e2</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, C, A[maxn], B[maxn], mi[maxn][maxn], f[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> maxv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;LL rnt = <span class="number">1l</span>l * x * y; <span class="keyword">return</span> (<span class="keyword">int</span>)(rnt &gt;= P ? rnt % P : rnt);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); C = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)A[i] = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)maxv = max(maxv, B[i] = read());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= maxv; i++)&#123;</span><br><span class="line">mi[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= C; j++)</span><br><span class="line">mi[i][j] = mul(mi[i][j - <span class="number">1</span>], i);</span><br><span class="line">&#125;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= C; k++)&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = A[i]; j &lt;= B[i]; j++)res = pls(res, mi[j][k]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = k; j &lt;= C; j++)</span><br><span class="line">f[i][j] = pls(f[i][j], mul(f[i - <span class="number">1</span>][j - k], res));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; f[n][C];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2 3</span></span><br><span class="line"><span class="comment">1 1</span></span><br><span class="line"><span class="comment">1 1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="arc60e-高橋君とホテル-tak-and-hotels"><a href="https://arc060.contest.atcoder.jp/tasks/arc060_c" target="_blank" rel="noopener">4.ARC60E-高橋君とホテル / Tak and Hotels</a></h2><p>题目大意 : 在一条直线有<span class="math inline">\(n\)</span>个旅馆, 每个旅馆在直线上有坐标, 每个旅馆的坐标为<span class="math inline">\(x_i\)</span>, 你每一步最多走<span class="math inline">\(L\)</span>, 也可以小于<span class="math inline">\(L\)</span>, 现在有<span class="math inline">\(m\)</span>个询问<span class="math inline">\((a_i, b_i)\)</span>, 询问从<span class="math inline">\(a_i\)</span>号旅馆到<span class="math inline">\(b_i\)</span>号旅馆的最少步数</p><p>题解 : 我们考虑倍增<span class="math inline">\(go[i][j]\)</span>表示从第<span class="math inline">\(i\)</span>个旅馆往前走<span class="math inline">\(2^j\)</span>步最远可以走到哪个旅馆, 然后就可以直接倍增了</p><p>但是有个问题 : <span class="math inline">\(go[i][0]\)</span>我们怎么预处理, 直接暴力? 但是这样有可能被卡, 所以我们考虑搞一个双指针往后扫, 这样就可以<span class="math inline">\(O(n)\)</span>预处理了</p><p>然后<del>就水过了</del></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, L, Q, x[maxn], go[maxn][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">PreGo</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> L, <span class="keyword">int</span> *x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pos = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(pos &lt;= n &amp;&amp; x[pos] - x[i] &lt;= L)pos++;</span><br><span class="line">go[i][<span class="number">0</span>] = pos - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">19</span>; j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">go[i][j] = go[go[i][j - <span class="number">1</span>]][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)x[i] = read();</span><br><span class="line">L = read(); Q = read();</span><br><span class="line">PreGo(n, L, x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Q; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> a = read(), b = read(), now, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a &gt; b)swap(a, b);</span><br><span class="line">now = a;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">19</span>; ~k; k--)</span><br><span class="line"><span class="keyword">if</span>(go[now][k] &lt; b)&#123;</span><br><span class="line">now = go[now][k];</span><br><span class="line">ans |= (<span class="number">1</span> &lt;&lt; k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">9</span></span><br><span class="line"><span class="comment">1 3 6 13 15 18 19 29 31</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">1 8</span></span><br><span class="line"><span class="comment">7 3</span></span><br><span class="line"><span class="comment">6 7</span></span><br><span class="line"><span class="comment">8 5</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="arc60e-すぬけ君の地下鉄旅行-snukes-subway-trip"><a href="https://arc061.contest.atcoder.jp/tasks/arc061_c" target="_blank" rel="noopener">5.ARC60E-すぬけ君の地下鉄旅行 / Snuke's Subway Trip</a></h2><p>题目大意 : 现在有一张图, 上面有<span class="math inline">\(n\)</span>个点, <span class="math inline">\(m\)</span>条边, 每条边隶属于一个公司, 当你从<span class="math inline">\(u\)</span>移动到<span class="math inline">\(v\)</span>时, 经过的这条边<span class="math inline">\((u, v)\)</span></p><p>隶属的公司和转移到<span class="math inline">\(u\)</span>的那条边隶属的公司不一样, 你的花费就会加一, 求从<span class="math inline">\(1\)</span>走到<span class="math inline">\(n\)</span>的最小花费, 如果可以到达输出花费, 否则输出<span class="math inline">\(-1\)</span></p><p>题解 : 我们考虑一下最短路的原理, 最短路我们只关心到某个点的最短路, 就算当前距离和以前更新过的答案一样也不用更新, 因为这样对后面的更新没有影响</p><p>我们再来考虑一下这道题, 我们考虑记录一下当前最优状态是可能从哪几条边转移过来的, 然后以后的转移基于我们记录的边, 就像这样 :</p><p><span class="math inline">\(S[v]\)</span>表示到<span class="math inline">\(v\)</span>点的最短距离时, 有可能转移到这个状态的边集, 这时如果我们想从<span class="math inline">\(u\)</span>点移动到<span class="math inline">\(v\)</span>点, 如果<span class="math inline">\((u, v)\)</span>这条边在<span class="math inline">\(S[v]\)</span>这个集合中出现过了, 那么这次转移的花费就是<span class="math inline">\(0\)</span>, 否则是<span class="math inline">\(1\)</span>, 然后如果<span class="math inline">\(dis[u] + w &lt; dis[v]\)</span>, 我们就清空<span class="math inline">\(S[v]\)</span>, 并加入<span class="math inline">\((u, v)\)</span>这条边, 如果<span class="math inline">\(dis[u] + w = dis[v]\)</span>就直接往<span class="math inline">\(S[v]\)</span>中加一条边就行了</p><p>那么这样做为什么是正确的呢?</p><p>因为对于某个点无论是什么状态, 它往外转移的边都是相同的, 所以就算某个不优的状态转移时可以更优, 但也只能少<span class="math inline">\(1\)</span>, 这样也不会比当前最优的要优</p><p>我们可以用式子说明, 我们设不优的状态为<span class="math inline">\(old\)</span>, 最优状态为<span class="math inline">\(new\)</span>, 我们有<span class="math inline">\(old - new \geq 1\)</span>, 所以我们有 : <span class="math display">\[new + 1 \le old + 0\]</span> 所以正确性没有问题</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, head[maxn], cnt, dis[maxn], vis[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Graph</span>&#123;</span><span class="keyword">int</span> to, nt, C;&#125;e[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;S[maxn];</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ini</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> C)</span> </span>&#123;e[++cnt] = (Graph)&#123;y, head[x], C&#125;; head[x] = cnt;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Dij</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dis));</span><br><span class="line"><span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">q.push(make_pair(dis[s] = <span class="number">0</span>, s));</span><br><span class="line"><span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> now = q.top().second; q.pop();</span><br><span class="line"><span class="keyword">if</span>(vis[now])<span class="keyword">continue</span>; vis[now] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = head[now]; i; i = e[i].nt) &#123;</span><br><span class="line"><span class="keyword">int</span> v = e[i].to, w;</span><br><span class="line">w = S[now].count(e[i].C) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(dis[v] &gt; dis[now] + w) &#123;</span><br><span class="line">dis[v] = dis[now] + w;</span><br><span class="line">q.push(make_pair(-dis[v], v));</span><br><span class="line">S[v].clear();</span><br><span class="line">S[v].insert(e[i].C);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(dis[v] == dis[now] + w) S[v].insert(e[i].C);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x = read(), y = read(), C = read();</span><br><span class="line">ini(x, y, C); ini(y, x, C);</span><br><span class="line">&#125;</span><br><span class="line">Dij(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (dis[n] == inf ? <span class="number">-1</span> : dis[n]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arc58c---こだわり者いろはちゃん-irohas-obsession"><a href="https://arc058.contest.atcoder.jp/tasks/arc058_a" target="_blank" rel="noopener">6.ARC58C - こだわり者いろはちゃん / Iroha's Obsession</a></h2><p>题目大意 : 求出一个不小于<span class="math inline">\(n\)</span>的数, 要求其满足以下条件 :</p><p>设这个数的各个位的数字的集合为<span class="math inline">\(S\)</span>, 给出一个集合<span class="math inline">\(D\)</span>, (保证集合D当中的元素属于<span class="math inline">\([0,9]\)</span>) <span class="math display">\[\large{S} \large\cap \large{D} = \varnothing\]</span> 题解 : 考虑直接暴力枚举, 如果符合条件直接输出就好了</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k, D[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x) &#123;</span><br><span class="line"><span class="keyword">if</span>(D[x % <span class="number">10</span>])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">x /= <span class="number">10</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); k = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++) D[read()] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = n; i &lt;= maxn; i++)</span><br><span class="line"><span class="keyword">if</span>(check(i)) &#123;<span class="built_in">cout</span> &lt;&lt; i; <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arc58d---いろはちゃんとマス目-iroha-and-a-grid"><a href="https://arc058.contest.atcoder.jp/tasks/arc058_b" target="_blank" rel="noopener">7.ARC58D - いろはちゃんとマス目 / Iroha and a Grid</a></h2><p>题目大意 : 给你一个<span class="math inline">\(n \times m\)</span>的矩阵, 你只能往下或者往右走, 问你从左上角走到右下角并且不经过左下角<span class="math inline">\(H \times W\)</span>的矩阵的所有方案数对<span class="math inline">\(10^9 + 7\)</span>取膜后的答案</p><p>题解 : 我们先考虑一个事实, 如果我们从一个<span class="math inline">\(N \times M\)</span>的没有任何障碍的矩阵的左上角走到右下角的方案数, 我们可以<span class="math inline">\(dp\)</span>, 但是复杂度不对, 事实上我们这个方案数其实就是 <span class="math display">\[\binom{n + m - 2}{n - 1}\]</span> 其实就是, 我们一共走<span class="math inline">\(n + m - 2\)</span>步, 纵向走<span class="math inline">\(n-1\)</span>步, 问你有多少总方案, 然后就可以转化成上面那个东西了</p><p>知道上面那个结论以后, 我们再来考虑有障碍物的情况, 如图 :</p><p><img src="http://wx4.sinaimg.cn/mw690/0060lm7Tly1fvds0m53huj30bl09674k.jpg"></p><p>我们知道从左上角分别走到蓝色区域的第一排的每个格子的方案数, 我们也知道从右下角分别走到蓝色区域第二排的每个格子的方案数, 根据乘法原理答案很显然就是就是 : <span class="math display">\[\sum _{i = B + 1}^{i \le m} \binom {n - H + i - 2}{n - H - 1} \cdot \binom {H + m - i - 1}{H - 1} (mod \ \ 10^9 + 7)\]</span> 代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, fac[maxn], A, B, ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;LL rnt = <span class="number">1l</span>l * x * y; <span class="keyword">return</span> (<span class="keyword">int</span>)(rnt &gt;= P ? rnt % P : rnt);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k) &#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>) cnt = mul(cnt, x);</span><br><span class="line">x = mul(x, x); k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = x + y - <span class="number">2</span>, m = x - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> mul(mul(ksm(fac[n - m], P - <span class="number">2</span>), ksm(fac[m], P - <span class="number">2</span>)), fac[n]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); m = read(); fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n + m; i++)</span><br><span class="line">fac[i] = mul(fac[i - <span class="number">1</span>], i);</span><br><span class="line">A = read(); B = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = B + <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="comment">//cerr &lt;&lt; (n - A) &lt;&lt; " " &lt;&lt; i &lt;&lt; " " &lt;&lt; B &lt;&lt; " " &lt;&lt; m - i + 1 &lt;&lt; endl;</span></span><br><span class="line">ans = pls(ans, mul(C(n - A, i), C(A, m - i + <span class="number">1</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arc58e---和風いろはちゃん-iroha-and-haiku"><a href="https://arc058.contest.atcoder.jp/tasks/arc058_c" target="_blank" rel="noopener">8.ARC58E - 和風いろはちゃん / Iroha and Haiku</a></h2><p>题目大意 : 你现在有一个长度为<span class="math inline">\(N\)</span>的序列(序列中的每个数小于等于<span class="math inline">\(10\)</span>), 让你求有多少个序列, 存在一个子序列满足这个子序列可以分为三个子序列, 且第一个子序列的和为<span class="math inline">\(X\)</span>, 第二个子序列的和为<span class="math inline">\(Y\)</span>, 第三个子序列的和为<span class="math inline">\(Z\)</span></p><p>题解 :</p><p>首先我先讲一下我一开始想的辣鸡错误方法</p><p>我们考虑直接<span class="math inline">\(dp\)</span>, <span class="math inline">\(h[i][j]\)</span>表示长度为<span class="math inline">\(i\)</span>的和为<span class="math inline">\(j\)</span>的序列的方案数, <span class="math inline">\(g[i]\)</span>表示长度为<span class="math inline">\(i\)</span>满足题目条件的序列的方案数</p><p><span class="math inline">\(f[L][i][j]\)</span>, 表示长度为<span class="math inline">\(L\)</span>的序列中只存在从第<span class="math inline">\(i\)</span>个数开始的一个长度为<span class="math inline">\(j\)</span>的子序列满足题目中的条件的方案数</p><p>那么转移就是 : <span class="math display">\[f[L][i][j] = g[j] \cdot 10^{L - j} - \sum _{l = 1}^{l &lt; i}\sum _{p = 1}^{p \le l} \sum_{v = 1}^{p + v - 1 \le l} f[l][p][v] - \sum _{l = 1}^{l \le L - (i + j - 1)}\sum _{p = 1}^{p \le l} \sum_{v = 1}^{p + v - 1 \le l} f[l][p][v]\]</span> 这个转移就是, 枚举两个区间<span class="math inline">\([1, i - 1], [L- (i + j - 1)]\)</span>, 把这两个区间中所有包含合法序列的方案数都减掉, 但是还是会算重, 为什么呢?</p><p>因为如果枚举到左侧的一个长度为<span class="math inline">\(i - 1\)</span>的区间, 你无法去掉这个区间和<span class="math inline">\([i, i + j - 1]\)</span>这个区间拼起来的区间中的合法方案数, 所以如果这样搞得话, 根本无法去重</p><p>然后, 我就去抄了一波正解</p><p>我们还是考虑<span class="math inline">\(dp\)</span>, 如果我们无法直接计算合法的方案数, 那我们就考虑不合法的方案数, 最后直接拿总方案数减去不合法的方案数就好了</p><p>设状态<span class="math inline">\(f[i][S]\)</span>表示前<span class="math inline">\(i\)</span>个数, 后若干个数加起来不超过<span class="math inline">\(X+Y+Z\)</span>的状态的不合法的方案数</p><p>什么意思呢? 举个栗子吧 :</p><p>序列<span class="math inline">\(1, 2, 3\)</span>, 被表示成二进制状态就是<span class="math inline">\(1 | 100 |100000 = 100101\)</span></p><p>我们知道一个序列的状态为 <span class="math display">\[\sum _{i = 1} ^ {i \le n} (1 &lt;&lt; s[i])\]</span> <span class="math inline">\(s[i]\)</span>为这个序列的前缀和</p><p>这样表示一个序列的状态有什么好处呢 ? 这样的话这个状态一定会包含其一个子序列的状态, 这样的话我们就可以用这个状态来判别是否合法了</p><p>那么转移十分显然 , 设题目中给出的合法方案的状态为 <span class="math inline">\(S_2\)</span> : <span class="math display">\[f[i][S] = \sum _{k = 1} ^ {k \le 10}f[i - 1][(S &lt;&lt; k) | (1 &lt;&lt; k - 1) \&amp; U] \cdot [(((S&lt;&lt;k) | (1 &lt;&lt; k - 1) \&amp; U) \&amp; S_2) != S_2]\]</span> 我们考虑一下这样转移的正确性 :</p><p>显然如果当地前状态包含了题目给出的状态肯定是无法转移的, 如果当前不包含题目中所给出的状态, 那么转移一定是合法的, 因为每一次转移都是基于当前状态不包含合法状态, 所以最后正确性是一定没有问题的</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">45</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, x, y, z, f[maxn][<span class="number">1</span> &lt;&lt; <span class="number">18</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dec</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x -= y; <span class="keyword">return</span> x &lt; <span class="number">0</span> ? x + P : x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;LL rnt = <span class="number">1l</span>l * x * y; <span class="keyword">return</span> (<span class="keyword">int</span>)(rnt &gt;= P ? rnt % P : rnt);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k) &#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>) cnt = mul(cnt, x);</span><br><span class="line">x = mul(x, x); k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); x = read(); y = read(); z = read();</span><br><span class="line"><span class="keyword">int</span> ans = ksm(<span class="number">10</span>, n);</span><br><span class="line"><span class="keyword">int</span> tot = (<span class="number">1</span> &lt;&lt; x - <span class="number">1</span>) | (<span class="number">1</span> &lt;&lt; x + y - <span class="number">1</span>) | (<span class="number">1</span> &lt;&lt; x + y + z - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> S = (<span class="number">1</span> &lt;&lt; x + y + z);</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> S2 = <span class="number">0</span>; S2 &lt; S; S2++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= <span class="number">10</span>; k++) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = ((S2 &lt;&lt; k) | (<span class="number">1</span> &lt;&lt; k - <span class="number">1</span>)) &amp; (S - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>((cur &amp; tot) != tot)</span><br><span class="line">f[i][cur] = pls(f[i][cur], f[i - <span class="number">1</span>][S2]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> S2 = <span class="number">0</span>; S2 &lt; S; S2++) &#123;</span><br><span class="line">ans = dec(ans, f[n][S2]);</span><br><span class="line"><span class="comment">//if((S2 &amp; tot) == tot) cout &lt;&lt; f[n][S2] &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arc58f---文字列大好きいろはちゃん-iroha-loves-strings"><a href="https://arc058.contest.atcoder.jp/tasks/arc058_d" target="_blank" rel="noopener">9.ARC58F - 文字列大好きいろはちゃん / Iroha Loves Strings</a></h2><p>题目大意 : 给你<span class="math inline">\(N\)</span>个字符串, 现在你可以从其中任意选出几个, 要求拼成一个长度为<span class="math inline">\(K\)</span>的字符串, 要求输出字典序最小的那一个, 拼接顺序要按照题目给出的顺序拼接 <span class="math display">\[N \in [1, 2000], \sum |s_i| \le 10^6, K \le 10^4\]</span></p><p>题解 : 我们先考虑一下暴力<span class="math inline">\(dp\)</span>直接背包, 设状态<span class="math inline">\(f[i][j]\)</span>为前<span class="math inline">\(i\)</span>个字符串中拼成长度为<span class="math inline">\(j\)</span>的最小字典序的字符串, 由于每一次转移为<span class="math inline">\(|s_i|\)</span>, 这样的话复杂度是<span class="math inline">\(O(N\cdot K \cdot \sum|s_i|)\)</span>的, 非常的不正确</p><p>我们考虑一下这样<span class="math inline">\(dp\)</span>的原因是什么, 因为我们无法保证你当前最优的串, 是否能再后续的字符串中拼接到<span class="math inline">\(K\)</span>的长度, 所以我们考虑保存每一种可能的长度的最优解, 但是如果我们知道是否能够拼成的话, 这样的保存就变得非常没有必要了</p><p>所以我们考虑先利用<span class="math inline">\(dp\)</span>的思想预处理出来一个数组<span class="math inline">\(Rm[i][j]\)</span>, 表示用<span class="math inline">\(i \sim N\)</span>的字符串是否能够拼成长度为<span class="math inline">\(j\)</span>的字符串, 然后每次我们只用保存一个字符串就可以了, 并且我们每次更新一下这个字符串的断点, 每次考虑从这个位置接上当前串, 看是否能够组成更优的串, 以此来做到更新答案的目的</p><p>但是还有一个很重要的问题就是, 如何快速比较字典序, 如果我们直接比较的话复杂度肯定是<span class="math inline">\(O(|s_i|)\)</span>的, 我们考虑把比较字典序的问题转化为找<span class="math inline">\(LCP\)</span>的问题, 最后直接比较<span class="math inline">\(LCP\)</span>的后一位就好了, 这里我们可以直接<span class="math inline">\(Hash\)</span>一下,每次二分一个位置, 比较一下就好了, 这样我们就成功的把比较的复杂度降至<span class="math inline">\(O(log|s_i|)\)</span>了</p><p>至此, 题目我们已经完成了一大半了, 可是还有一个很重要的问题就是, 如果当前串真包含一个颗可以拼接而成的串的话, 我们要额外的更新一下断点, 这样才可以保证最后答案的正确性</p><p><span class="math inline">\(PS:\)</span> 我说的好像头头是道, 但是这道题我调了一个星期还是<span class="math inline">\(WA\)</span>了<span class="math inline">\(5\)</span>个点, 求神犇查错</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e3</span> + <span class="number">505</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm = <span class="number">1e4</span> + <span class="number">505</span>;</span><br><span class="line"><span class="keyword">const</span> ull seed = <span class="number">233</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k, len[maxn];</span><br><span class="line">ull Hash[maxm], cur[maxm], fac[maxn * <span class="number">505</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> ex[maxm];</span><br><span class="line"><span class="built_in">string</span> s[maxn], st[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> Rm[maxn][maxm], ok[<span class="number">2</span>][maxm];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">checkit</span><span class="params">(<span class="built_in">string</span> &amp;st, <span class="built_in">string</span> &amp;s, <span class="keyword">int</span> pos, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = min(pos, j) + s.size(), R = <span class="number">0</span>, mid = (l + r) / <span class="number">2</span>; R = r;</span><br><span class="line"><span class="keyword">int</span> siz = s.size(), ans = <span class="number">0</span>, ch0, ch1;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r) &#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">ull H0 = <span class="number">0</span>, H1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(mid &lt;= pos) H0 = cur[mid];</span><br><span class="line"><span class="keyword">else</span> H0 = cur[pos] * fac[mid - pos] + Hash[mid - pos];</span><br><span class="line"><span class="keyword">if</span>(mid &lt;= j)   H1 = cur[mid];</span><br><span class="line"><span class="keyword">else</span> H1 = cur[j] * fac[mid - j] + Hash[mid - j];</span><br><span class="line"><span class="keyword">if</span>(H0 == H1) l = mid + <span class="number">1</span>, ans = mid;</span><br><span class="line"><span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans == R) <span class="keyword">return</span> j &gt; pos ? j : pos;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(ans &gt;= pos) ch0 = s[ans - pos]; <span class="keyword">else</span> ch0 = st[ans];</span><br><span class="line"><span class="keyword">if</span>(ans &gt;= j) ch1 = s[ans - j]; <span class="keyword">else</span> ch1 = st[ans];</span><br><span class="line"><span class="keyword">return</span> ch0 &gt; ch1 ? j : pos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="built_in">string</span> <span class="title">checkagain</span><span class="params">(<span class="built_in">string</span> &amp;st, <span class="built_in">string</span> &amp;now, <span class="built_in">string</span> &amp;s, <span class="keyword">int</span> pos)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = min(now.size(), st.size()), R = <span class="number">0</span>, mid = (l + r) / <span class="number">2</span>; R = r;</span><br><span class="line"><span class="keyword">int</span> siz = s.size(), ans = <span class="number">0</span>, ch0, ch1;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r) &#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">ull H0 = <span class="number">0</span>, H1 = <span class="number">0</span>;</span><br><span class="line">H0 = cur[mid];</span><br><span class="line"><span class="keyword">if</span>(mid &lt;= pos) H1 = cur[mid];</span><br><span class="line"><span class="keyword">else</span> H1 = cur[pos] * fac[mid - pos] + Hash[mid - pos];</span><br><span class="line"><span class="keyword">if</span>(H0 == H1) l = mid + <span class="number">1</span>, ans = mid;</span><br><span class="line"><span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans == R) &#123;</span><br><span class="line">        <span class="keyword">if</span>(st.size() &gt; now.size()) <span class="keyword">return</span> st;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">ch0 = now[ans]; ch1 = st[ans];</span><br><span class="line"><span class="keyword">if</span>(ch0 &gt; ch1) <span class="keyword">return</span> st;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">freopen(<span class="string">"in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"MY"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line">n = read(); k = read(); fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= maxn * <span class="number">500</span>; i++)</span><br><span class="line">fac[i] = fac[i - <span class="number">1</span>] * seed;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, ex); s[i] = ex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Rm[n + <span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= k; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(j &gt;= s[i].size()) Rm[i][j] |= Rm[i + <span class="number">1</span>][j - s[i].size()];</span><br><span class="line">Rm[i][j] |= Rm[i + <span class="number">1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Rm[<span class="number">2</span>][k - s[<span class="number">1</span>].size()]) &#123;</span><br><span class="line">ok[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">1</span>; st[<span class="number">1</span>] = s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> t = i &amp; <span class="number">1</span>, t0 = t ^ <span class="number">1</span>, p = <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">memset</span>(ok[t0], <span class="number">0</span>, <span class="keyword">sizeof</span>(ok[t0]));</span><br><span class="line"></span><br><span class="line">cur[<span class="number">0</span>] = Hash[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= st[i - <span class="number">1</span>].size(); j++)</span><br><span class="line">cur[j] = cur[j - <span class="number">1</span>] * seed + st[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= s[i].size(); j++)</span><br><span class="line">Hash[j] = Hash[j - <span class="number">1</span>] * seed + s[i][j - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= st[i - <span class="number">1</span>].size() + <span class="number">1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(!Rm[i + <span class="number">1</span>][k - (j + s[i].size() - <span class="number">1</span>)] || !(ok[t][j] || j &gt; st[i - <span class="number">1</span>].size())) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(p == <span class="number">-1</span>) p = j;</span><br><span class="line"><span class="keyword">else</span> p = checkit(st[i - <span class="number">1</span>], s[i], p - <span class="number">1</span>, j - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(p != <span class="number">-1</span>)</span><br><span class="line">            st[i] = st[i - <span class="number">1</span>].substr(<span class="number">0</span>, p - <span class="number">1</span>) + s[i];</span><br><span class="line">        <span class="keyword">else</span> st[i] = st[i - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Rm[i + <span class="number">1</span>][k - st[i - <span class="number">1</span>].size()])</span><br><span class="line">st[i] = checkagain(st[i - <span class="number">1</span>], st[i], s[i], p - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(st[i] == st[i - <span class="number">1</span>]) p = st[i].size() + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++) &#123;</span><br><span class="line">            <span class="keyword">int</span> o = j + s[i].size() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(o &gt; st[i].size()) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(!Rm[i + <span class="number">1</span>][k - o] || !ok[t][j]) <span class="keyword">continue</span>;</span><br><span class="line">            ull H0 = <span class="number">0</span>, H1 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(o &gt; p - <span class="number">1</span>) H0 = cur[p - <span class="number">1</span>] * fac[o - (p - <span class="number">1</span>)] + Hash[o - (p - <span class="number">1</span>)];</span><br><span class="line">            <span class="keyword">else</span> H0 = cur[o];</span><br><span class="line">            H1 = cur[j - <span class="number">1</span>] * fac[s[i].size()] + Hash[s[i].size()];</span><br><span class="line">            <span class="keyword">if</span>(H0 == H1) ok[t0][o + <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ok[t0][p] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(j &gt; st[i].size()) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(!Rm[i + <span class="number">1</span>][k - (j - <span class="number">1</span>)] || !ok[t][j]) <span class="keyword">continue</span>;</span><br><span class="line">            ull H0 = <span class="number">0</span>, H1 = <span class="number">0</span>;</span><br><span class="line">            H0 = cur[j - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(j &gt; p - <span class="number">1</span>) H1 = cur[p - <span class="number">1</span>] * fac[j - p] + Hash[j - p];</span><br><span class="line">            <span class="keyword">else</span> H1 = cur[j - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(H0 == H1) ok[t0][j] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*cerr &lt;&lt; "case" &lt;&lt; i &lt;&lt; ": " &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">cerr &lt;&lt; st[i] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">for(register int j = 1; j &lt;= k; j++)</span></span><br><span class="line"><span class="comment">cerr &lt;&lt; ok[t0][j] &lt;&lt; " ";</span></span><br><span class="line"><span class="comment">cerr &lt;&lt; "\n\n";</span></span><br><span class="line"><span class="comment">*/</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; st[n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="noi.ac-模拟赛r2-t1-palindrome"><a href="http://www.6965157.com/contest/11/problem/34" target="_blank" rel="noopener">10.NOI.AC 模拟赛R2 T1 palindrome</a></h2><p>题目大意 : 要你求一个最长回文字串的切分, 我们平常定义回文串是比较开头和结尾的字符, 这道题里面就是将一个子串看成一个字符来比较, 详情见题面</p><p>题解 : 考虑直接<span class="math inline">\(Hash\)</span>头一个指针, 尾一个指针, 往中间扫, 一匹配到相同的就直接<span class="math inline">\(ans += 2\)</span>, 最后判一下<span class="math inline">\(ans\)</span>是否要加一就行了, <del>水水水</del></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> seed0 = <span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> seed1 = <span class="number">277</span>;</span><br><span class="line"><span class="keyword">const</span> ull P = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, ans;</span><br><span class="line">ull fac0[maxn], fac1[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Hash</span> &#123;</span></span><br><span class="line">ull hash0, hash1;</span><br><span class="line">Hash (ull H0 = <span class="number">0</span>, ull H1 = <span class="number">0</span>) &#123;hash0 = H0; hash1 = H1;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">mul</span><span class="params">(ull s, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">hash0 = hash0 + s * fac0[k];</span><br><span class="line">hash1 = (hash1 + s * fac1[k] % P) % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(ull s)</span> </span>&#123;</span><br><span class="line">hash0 = hash0 * seed0 + s;</span><br><span class="line">hash1 = (hash1 * seed1 % P + s) % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;hash0 = hash1 = <span class="number">0</span>;&#125;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Hash &amp;t) <span class="keyword">const</span> &#123;<span class="keyword">return</span> hash0 == t.hash0 &amp;&amp; hash1 == t.hash1;&#125;</span><br><span class="line">&#125;t0, t1;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"palindrome.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"palindrome.out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">T = read(); fac0[<span class="number">0</span>] = fac1[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; i++)</span><br><span class="line">fac0[i] = fac0[i - <span class="number">1</span>] * seed0, fac1[i] = fac1[i - <span class="number">1</span>] * seed1 % P;</span><br><span class="line"><span class="keyword">while</span>(T--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s + <span class="number">1</span>);</span><br><span class="line">n = <span class="built_in">strlen</span>(s + <span class="number">1</span>); ans = <span class="number">0</span>;</span><br><span class="line">t0.clear(); t1.clear();</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = n, L = <span class="number">1</span>, R = n;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">t0.push(s[l]);</span><br><span class="line">t1.mul(s[r], R - r);</span><br><span class="line"><span class="keyword">if</span>(t0 == t1) &#123;</span><br><span class="line">ans += <span class="number">2</span>;</span><br><span class="line">t0.clear(); t1.clear();</span><br><span class="line">L = l + <span class="number">1</span>; R = r - <span class="number">1</span>;</span><br><span class="line">&#125; l++; r--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans + (!(t0 == t1) || (n &amp; <span class="number">1</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">abananab</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="noa.ac-模拟赛r2-t2-string"><a href="http://www.6965157.com/contest/11/problem/35" target="_blank" rel="noopener">11.NOA.AC 模拟赛R2 T2 string</a></h2><p>题目大意 : 你有一个只由<span class="math inline">\(A,B,C,D\)</span>组成的长度为<span class="math inline">\(N\)</span>的字符串, 你有<span class="math inline">\(M\)</span>种魔法, 每次可以把一个字符串<span class="math inline">\(S_i\)</span>变为<span class="math inline">\(S_i&#39;\)</span></p><p>并且你可一交换一个字符串中的相邻的两个字符, 问你最多可以变成多少种<strong>不同</strong>的字符串</p><p>题解 : 不要被题目所迷惑了, 题目中告诉我们可以交换一个字符串中相邻的两个字符, 也就是间接的告诉我, 我们不用考虑, 这个字符串的具体形态是什么, 只用考虑这个字符串中有多少个<span class="math inline">\(A\)</span>, 多少个<span class="math inline">\(B\)</span>, 多少个<span class="math inline">\(C\)</span>, 多少个<span class="math inline">\(D\)</span>, 就行了</p><p>那么我们可以将题目中给出的<span class="math inline">\(M\)</span>种魔法看成从一种状态向另一种状态的转移, 我们可以直接把每一种状态看成一个点, 每个点的权值是当前状态可以组成不同的字符串的方案数, 每一种魔法看成一种状态向另一种状态的连边, 并且是单向边, 最后我们把图建出来以后, 直接缩一下点, 然后在<span class="math inline">\(DAG\)</span>图上<span class="math inline">\(dp\)</span>一下就好了</p><p>最后对于一开始每种状态的权值, 我们也可<span class="math inline">\(dp\)</span>一下就可以了</p><p>设状态<span class="math inline">\(g[i][j][k][v]\)</span>表示长度为<span class="math inline">\(i\)</span>的字符串, 有<span class="math inline">\(j\)</span>个<span class="math inline">\(A\)</span>, <span class="math inline">\(k\)</span>个<span class="math inline">\(B\)</span>, <span class="math inline">\(v\)</span>个<span class="math inline">\(C\)</span>的方案数, 转移很显然就是 : <span class="math display">\[g[i][j][k][v] += \begin{cases}g[i - 1][j - 1][k][v] \ \ \ \ if(j &gt; 1) \\ g[i - 1][j][k - 1] \ \ \ \ \ \ \ \ if(k &gt; 1) \\ g[i - 1][j][k][v - 1]  \ \ \ \ if(v &gt; 1) \\ g[i - 1][j][k][v] \ \ \ \ \ \ \ \ \ \ \ if(i - j - k - v &gt; 1) \end{cases}\]</span></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">55</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxs = <span class="number">2e4</span> + <span class="number">5e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxm = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, con, cal[maxn &lt;&lt; <span class="number">1</span>][<span class="number">2</span>][<span class="number">1</span> &lt;&lt; <span class="number">8</span>], in[maxn], bcnt;</span><br><span class="line"><span class="keyword">int</span> P[maxn][maxn][maxn], st[maxs], top, be[maxs], becnt, dfn[maxs], low[maxs];</span><br><span class="line"></span><br><span class="line">__int128 g[maxn][maxn][maxn][maxn], w[maxs], ans, f[maxs];</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis0[maxs], vis1[maxs], instack[maxs];</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s0[maxn], s1[maxn], putit[maxs];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span><span class="keyword">int</span> A, B, C, D;&#125; t[maxs];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Graph</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> head[maxs], cnt = <span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span><span class="keyword">int</span> to, nt;&#125; e[maxm];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ini</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;e[++cnt] = (node)&#123;y, head[x]&#125;; head[x] = cnt;&#125;</span><br><span class="line">&#125;G, E;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> __<span class="function">int128 <span class="title">getit</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> A = t[id].A, B = t[id].B, C = t[id].C;</span><br><span class="line"><span class="keyword">return</span> g[n][A][B][C];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> now)</span> </span>&#123;</span><br><span class="line">dfn[now] = low[now] = ++dfn[<span class="number">0</span>];</span><br><span class="line">instack[st[++top] = now] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = G.head[now]; i; i = G.e[i].nt) &#123;</span><br><span class="line"><span class="keyword">int</span> v = G.e[i].to;</span><br><span class="line"><span class="keyword">if</span>(!dfn[v]) &#123;</span><br><span class="line">Tarjan(v);</span><br><span class="line">low[now] = min(low[now], low[v]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(instack[v])</span><br><span class="line">low[now] = min(low[now], low[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dfn[now] == low[now]) &#123;</span><br><span class="line">bcnt++;</span><br><span class="line"><span class="keyword">while</span>(now != st[top]) &#123;</span><br><span class="line">be[st[top]] = bcnt; w[bcnt] += getit(st[top]);</span><br><span class="line">instack[st[top--]] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">be[st[top]] = bcnt; w[bcnt] += getit(st[top]);</span><br><span class="line">instack[st[top--]] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rebuild</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> now = <span class="number">1</span>; now &lt;= con; now++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = G.head[now]; i; i = G.e[i].nt) &#123;</span><br><span class="line"><span class="keyword">int</span> v = G.e[i].to;</span><br><span class="line"><span class="keyword">if</span>(be[now] != be[v]) </span><br><span class="line">E.ini(be[now], be[v]), in[be[v]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(__int128 x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x) &#123;</span><br><span class="line">putit[++len] = x % <span class="number">10</span> + <span class="string">'0'</span>;</span><br><span class="line">x /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = len; i &gt;= <span class="number">1</span>; i--)<span class="built_in">putchar</span>(putit[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Topsort</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">while</span>(!q.empty()) q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= bcnt; i++)</span><br><span class="line"><span class="keyword">if</span>(in[i] == <span class="number">0</span>) q.push(i), f[i] = w[i];</span><br><span class="line"><span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> now = q.front(); q.pop(); ans = max(ans, f[now]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = E.head[now]; i; i = E.e[i].nt) &#123;</span><br><span class="line"><span class="keyword">int</span> v = E.e[i].to;</span><br><span class="line">f[v] = max(f[v], f[now] + w[v]);</span><br><span class="line">in[v]--;</span><br><span class="line"><span class="keyword">if</span>(in[v] == <span class="number">0</span>)q.push(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">0</span>; i + j &lt;= n; j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">0</span>; i + j + k &lt;= n; k++) &#123;</span><br><span class="line">t[++con] = (Node) &#123;i, j, k, n - i - j - k&#125;;</span><br><span class="line">P[i][j][k] = con;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*cerr &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">for(register int i = 1; i &lt;= con; i++)</span></span><br><span class="line"><span class="comment">cerr &lt;&lt; "case " &lt;&lt; i &lt;&lt; ": A = " &lt;&lt; t[i].A &lt;&lt; " B = " &lt;&lt; t[i].B &lt;&lt; " C = " &lt;&lt; t[i].C &lt;&lt; " D = " &lt;&lt; t[i].D &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">g[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">0</span>; j + k &lt;= i; k++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> v = <span class="number">0</span>; j + k + v &lt;= i; v++) &#123;</span><br><span class="line"><span class="keyword">if</span>(j &gt; <span class="number">0</span>) g[i][j][k][v] += g[i - <span class="number">1</span>][j - <span class="number">1</span>][k][v];</span><br><span class="line"><span class="keyword">if</span>(k &gt; <span class="number">0</span>) g[i][j][k][v] += g[i - <span class="number">1</span>][j][k - <span class="number">1</span>][v];</span><br><span class="line"><span class="keyword">if</span>(v &gt; <span class="number">0</span>) g[i][j][k][v] += g[i - <span class="number">1</span>][j][k][v - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(i - j - k - v &gt; <span class="number">0</span>) g[i][j][k][v] += g[i - <span class="number">1</span>][j][k][v];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//cerr &lt;&lt; g[6][3][1][1] &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//write(g[6][3][1][1]); cerr &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>, t0 = <span class="number">0</span>, t1 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, s0 + <span class="number">1</span>, s1 + <span class="number">1</span>);</span><br><span class="line">len = <span class="built_in">strlen</span>(s0 + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= len; j++) &#123;</span><br><span class="line">cal[i][<span class="number">0</span>][s0[j]]++;</span><br><span class="line">cal[i][<span class="number">1</span>][s1[j]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= con; i++) &#123;</span><br><span class="line"><span class="comment">//cerr &lt;&lt; "#case : " &lt;&lt; i &lt;&lt; endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> A0 = cal[j][<span class="number">0</span>][<span class="string">'A'</span>], B0 = cal[j][<span class="number">0</span>][<span class="string">'B'</span>];</span><br><span class="line"><span class="keyword">int</span> C0 = cal[j][<span class="number">0</span>][<span class="string">'C'</span>], D0 = cal[j][<span class="number">0</span>][<span class="string">'D'</span>];</span><br><span class="line"><span class="keyword">int</span> A1 = cal[j][<span class="number">1</span>][<span class="string">'A'</span>], B1 = cal[j][<span class="number">1</span>][<span class="string">'B'</span>];</span><br><span class="line"><span class="keyword">int</span> C1 = cal[j][<span class="number">1</span>][<span class="string">'C'</span>], D1 = cal[j][<span class="number">1</span>][<span class="string">'D'</span>];</span><br><span class="line"><span class="keyword">if</span>(A0 == A1 &amp;&amp; B0 == B1 &amp;&amp; C0 == C1)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(t[i].A &gt;= A0 &amp;&amp; t[i].B &gt;= B0 &amp;&amp; t[i].C &gt;= C0 &amp;&amp; t[i].D &gt;= D0) &#123;</span><br><span class="line">G.ini(i, P[t[i].A - A0 + A1][t[i].B - B0 + B1][t[i].C - C0 + C1]);</span><br><span class="line"><span class="comment">//cerr &lt;&lt; i &lt;&lt; " " &lt;&lt; P[t[i].A - A0 + A1][t[i].B - B0 + B1][t[i].C - C0 + C1] &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cerr &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= con; i++)</span><br><span class="line"><span class="keyword">if</span>(!dfn[i]) Tarjan(i);</span><br><span class="line"><span class="comment">/*for(register int i = 1; i &lt;= bcnt; i++) &#123;</span></span><br><span class="line"><span class="comment">cerr &lt;&lt; "w[" &lt;&lt; i &lt;&lt; "] = ";</span></span><br><span class="line"><span class="comment">write(w[i]); cerr &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">cerr &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">for(register int i = 1; i &lt;= con; i++) &#123;</span></span><br><span class="line"><span class="comment">cerr &lt;&lt; "g[" &lt;&lt; i &lt;&lt; "] = ";</span></span><br><span class="line"><span class="comment">write(getit(i)); cerr &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line">rebuild(); Topsort();</span><br><span class="line">write(ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bzoj1027合金"><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1027" target="_blank" rel="noopener">12.BZOJ1027合金</a></h2><p>题目大意 : 给你<span class="math inline">\(N\)</span>个点, 再给你<span class="math inline">\(M\)</span>个点, 要求从<span class="math inline">\(M\)</span>个点中选出若干个点使得这些点中的凸包能够包含<span class="math inline">\(N\)</span>个点所构成的凸包, 要求最小化选出的点集的大小</p><p>题解 : 考虑枚举一个点对,</p><ul><li>如果所有的需求点都在这两个点所连成的<strong>线段</strong>上或在直线的上方, 连正向边</li><li>如果所有的需求点都在这两个点所连成的<strong>线段</strong>上或在直线的下方, 连反向边</li></ul><p>最后跑一遍<span class="math inline">\(Floyd\)</span>, 答案就是 <span class="math display">\[min \{ dis[i][i]\}\]</span> 代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e2</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-13</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, dis[maxn][maxn], ans = inf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> x;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vector</span> &#123;</span></span><br><span class="line"><span class="keyword">double</span> x, y;</span><br><span class="line">Vector (<span class="keyword">double</span> X = <span class="number">0</span>, <span class="keyword">double</span> Y = <span class="number">0</span>) &#123;x = X; y = Y;&#125;</span><br><span class="line">Vector <span class="keyword">operator</span> + (<span class="keyword">const</span> Vector &amp;t) <span class="keyword">const</span> &#123;<span class="keyword">return</span> Vector(x + t.x, y + t.y);&#125;</span><br><span class="line">Vector <span class="keyword">operator</span> - (<span class="keyword">const</span> Vector &amp;t) <span class="keyword">const</span> &#123;<span class="keyword">return</span> Vector(x - t.x, y - t.y);&#125;</span><br><span class="line"><span class="keyword">double</span> <span class="keyword">operator</span> * (<span class="keyword">const</span> Vector &amp;t) <span class="keyword">const</span> &#123;<span class="keyword">return</span> x * t.x + y * t.y;&#125;</span><br><span class="line"><span class="keyword">double</span> <span class="keyword">operator</span> ^ (<span class="keyword">const</span> Vector &amp;t) <span class="keyword">const</span> &#123;<span class="keyword">return</span> x * t.y - y * t.x;&#125;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Vector &amp;t) <span class="keyword">const</span> &#123;<span class="keyword">return</span> x &lt; t.x;&#125;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt;= (<span class="keyword">const</span> Vector &amp;t) <span class="keyword">const</span> &#123;<span class="keyword">return</span> x &lt;= t.x;&#125;</span><br><span class="line">&#125;Ha[maxn], Ne[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> H0 = <span class="number">0</span>, H1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">double</span> getit = (Ha[x] - Ha[y]) ^ (Ha[x] - Ne[i]);</span><br><span class="line"><span class="keyword">bool</span> is = Ha[x] &lt;= Ne[i] &amp;&amp; Ne[i] &lt;= Ha[y];</span><br><span class="line">H0 += (getit &lt; -eps || (<span class="built_in">fabs</span>(getit) &lt; eps &amp;&amp; is));</span><br><span class="line">H1 += (getit &gt; eps || (<span class="built_in">fabs</span>(getit) &lt; eps &amp;&amp; is));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(H0 == m) dis[x][y] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(H1 == m) dis[y][x] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//if(dis[x][y] == 1) cerr &lt;&lt; x &lt;&lt; "--&gt;" &lt;&lt; y &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//if(dis[y][x] == 1) cerr &lt;&lt; y &lt;&lt; "--&gt;" &lt;&lt; x &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cerr &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>, &amp;Ha[i].x, &amp;Ha[i].y, &amp;x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>, &amp;Ne[i].x, &amp;Ne[i].y, &amp;x);</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dis));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">judge(i, j);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) ans = min(ans, dis[i][i]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (ans == inf ? <span class="number">-1</span> : ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arc59-cいっしょ-be-together"><a href="https://arc059.contest.atcoder.jp/tasks/arc059_a" target="_blank" rel="noopener">13.ARC59-Cいっしょ / Be Together</a></h2><p>题目大意 : 给你一个序列<span class="math inline">\(a_i\)</span>, 要求求出 <span class="math display">\[\sum _ {i = 1} ^ {i \le n} (a_i - x)^2\]</span> 的最小值</p><p>题解 : 枚举一个<span class="math inline">\(x\)</span>, 取最小值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IL inline </span></span><br><span class="line"><span class="function">IL <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar(); &#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123; u = (u &lt;&lt; <span class="number">1</span>) + (u &lt;&lt; <span class="number">3</span>) + ch - <span class="number">48</span>; ch = getchar(); &#125;</span><br><span class="line"><span class="keyword">return</span> u * f; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">150</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"><span class="keyword">int</span> ans = INT_MAX;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = read();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">-100</span>; i &lt;= <span class="number">100</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> now = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) </span><br><span class="line">now += (i - a[j]) * (i - a[j]);</span><br><span class="line">ans = min(ans, now);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上为<span class="math inline">\(Edgration\)</span>的代码, 我是伪的</p><h2 id="arc59-dアンバランス-unbalanced"><a href="https://arc059.contest.atcoder.jp/tasks/arc059_b" target="_blank" rel="noopener">14.ARC59-Dアンバランス / Unbalanced</a></h2><p>题目大意 : 给你一个字符串, 要求求出一个长度至少为<span class="math inline">\(2\)</span>的子串满足, 这个子串至少存在一个字符出现的次数的两倍大于这个子串的长度</p><p>题解 : <span class="math inline">\(S[a \sim z][i]\)</span>表示<span class="math inline">\(a \sim z\)</span>在前<span class="math inline">\(i\)</span>个字符中出现的次数</p><p>我们可以贪心的考虑一下, 对于每一个左端点我们只考虑这个位置上的字符在一个区间内是否能满足条件, 其它的可以不用考虑, 因为如果后面的某个位置也出现了这个位置上没有出现的字符, 那么一定会比在这个位置上考虑更优</p><p>设当前位置上的字符为<span class="math inline">\(ch\)</span></p><p>根据题面中给出的条件我们可以列出一个约束条件 <span class="math display">\[2 \cdot (S[ch][r] - S[ch][l - 1]) &gt; r - l + 1\]</span> 我们移项一下 <span class="math display">\[2 \cdot S[ch][r] - r &gt; 2 \cdot S[ch][l - 1] - (l - 1)\]</span> 这个时候就看得很明显了, 设<span class="math inline">\(b[ch][i] = 2 \cdot S[ch][i] - i\)</span></p><p>然后对于一个左端点<span class="math inline">\(l\)</span>, 直接查询在它的右边是否存在一个<span class="math inline">\(r\)</span>满足<span class="math inline">\(b_r &gt; b_l\)</span></p><p>然后这个东西直接用<span class="math inline">\(ST\)</span>表维护一下就好了</p><p>复杂度<span class="math inline">\(O(26 \cdot nlogn)\)</span>, 然后因为找到答案就退出了, 所以跑不满, 然后还跑得飞快</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, sum[maxn];</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; st[maxn][<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; query(<span class="keyword">int</span> l, <span class="keyword">int</span> r) &#123;</span><br><span class="line"><span class="keyword">int</span> k = log2(r - l + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> max(st[l][k], st[r - (<span class="number">1</span> &lt;&lt; k) + <span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s + <span class="number">1</span>);</span><br><span class="line">n = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="string">'a'</span>; k &lt;= <span class="string">'z'</span>; k++) &#123;</span><br><span class="line"><span class="built_in">memset</span>(sum, <span class="number">0</span>, <span class="keyword">sizeof</span>(sum));</span><br><span class="line"><span class="built_in">memset</span>(st, <span class="number">0</span>, <span class="keyword">sizeof</span>(st));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">sum[i] = sum[i - <span class="number">1</span>] + (k == s[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">st[i][<span class="number">0</span>] = make_pair(<span class="number">2</span> * sum[i] - i, i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">20</span>; j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt;= n; i++)</span><br><span class="line">st[i][j] = max(st[i][j - <span class="number">1</span>], st[i + (<span class="number">1</span> &lt;&lt; j - <span class="number">1</span>)][j - <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] != k) <span class="keyword">continue</span>;</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; tmp = query(i + <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">if</span>(tmp &gt; st[i][<span class="number">0</span>]) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">" "</span> &lt;&lt; tmp.second; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arc59-fバイナリハック-unhappy-hacking"><a href="https://arc059.contest.atcoder.jp/tasks/arc059_d" target="_blank" rel="noopener">15.ARC59-Fバイナリハック / Unhappy Hacking</a></h2><p>题目大意 : 你有一个键盘, 键盘上只有三个键, <span class="math inline">\(0\)</span>, <span class="math inline">\(1\)</span>, <span class="math inline">\(backspace\)</span>, 你可以敲击键盘<span class="math inline">\(n\)</span>下</p><p>然后给定一个<span class="math inline">\(0, 1\)</span>串, 问你敲击键盘<span class="math inline">\(n\)</span>下后, 有多少种方案可以得到这个零一串</p><p>题解 : 其实题面中给的那个串其实是用来忽悠你的, 如果你硬要靠虑那个零一串的话这道题会变得非常不好做</p><p>然而, 事实我们根本就不用考虑最后的目标串是什么, 因为我们可以通过调整中间的按键来改变最后的串, 所以不用</p><p>考虑最后的串, 我们直接<span class="math inline">\(dp\)</span>然后最后除以<span class="math inline">\(2^{目标串的长度}\)</span>, 就是答案了</p><p>然后设<span class="math inline">\(f[i][j]\)</span> 表示按了<span class="math inline">\(i\)</span>下键, 得到了一个长度为<span class="math inline">\(j\)</span>的零一串的总方案数, 然后转移很明显 <span class="math display">\[\begin{cases} f[i][j] = f[i][j] + 2 \cdot f[i - 1][j - 1] \ \ \ \ if(j &gt; 0) \\f[i][j] = f[i][j] + f[i - 1][j] \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(j = 0) \\f[i][j] = f[i][j] + f[i - 1][j + 1]\end{cases}\]</span> 解释一下,</p><ul><li>如果串的长度大于一你可以按零或一</li><li>如果串的长度大于等于零你可以按<span class="math inline">\(backspace\)</span></li></ul><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, f[maxn][maxn], len;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>;  ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k) &#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>) cnt = <span class="number">1l</span>l * cnt * x % P;</span><br><span class="line">x = <span class="number">1l</span>l * x * x % P; k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;x += y; <span class="keyword">return</span> x &gt;= P ? x - P : x;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = read(); <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s + <span class="number">1</span>);</span><br><span class="line">len = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(j &gt; <span class="number">0</span>)</span><br><span class="line">f[i][j] = pls(f[i][j], f[i - <span class="number">1</span>][j - <span class="number">1</span>] * <span class="number">2</span> % P);</span><br><span class="line"><span class="keyword">else</span> f[i][j] = pls(f[i][j], f[i - <span class="number">1</span>][j]);</span><br><span class="line">f[i][j] = pls(f[i][j], f[i - <span class="number">1</span>][j + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (<span class="number">1l</span>l * f[n][len] * ksm(ksm(<span class="number">2</span>, len), P - <span class="number">2</span>) % P);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OI刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 组合数学 </tag>
            
            <tag> 倍增 </tag>
            
            <tag> CRT </tag>
            
            <tag> Exgcd </tag>
            
            <tag> 计算几何 </tag>
            
            <tag> ExLucas </tag>
            
            <tag> 最短路 </tag>
            
            <tag> Lucas </tag>
            
            <tag> 费马小定理 </tag>
            
            <tag> Floyd </tag>
            
            <tag> 状压DP </tag>
            
            <tag> 凸包 </tag>
            
            <tag> ST表 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>中国剩余定理学习笔记</title>
      <link href="/2018/09/03/CRT/"/>
      <url>/2018/09/03/CRT/</url>
      <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/.Ary9UmAWnXFM47jeunYAOmlk*Oq6T4VDh0AHQRqq8c!/r/dDQBAAAAAAAA"> <a id="more"></a></p><h1 id="中国剩余定理">中国剩余定理</h1><p>有一组膜方程, 要求求出最小的<span class="math inline">\(x\)</span> <span class="math display">\[\begin{cases}x = a_1(mod\ \ m_1) \\ x = a_2(mod \ \ m_2)\\ x = a_3(mod \ \ m_3)\\ .......... \\ x = a_n (mod \ \ m_n)\end{cases}\]</span></p><h2 id="m_i两两互质时"><span class="math inline">\(m_i\)</span>两两互质时</h2><p>我们引入中国剩余定理</p><p>定义<span class="math inline">\(M = \prod m_i\)</span>, 相当于要求我们构造出一个<span class="math inline">\(A = x (mod \ \ M)\)</span></p><p>定义<span class="math inline">\(M_i = \frac {M}{m_i}\)</span>, <span class="math inline">\(M_i^{-1}\)</span>为<span class="math inline">\(M_i\)</span>在膜<span class="math inline">\(M\)</span>意义下的逆元, 然后我们有下列等式: <span class="math display">\[a_i \cdot M_i \cdot M_i^{-1} = a_i(mod \ \ m_i)\\a_i \cdot M_i \cdot M_i^{-1} = 0(mod \ \ M_i)\]</span> 我们可以构造出一个最小解<span class="math inline">\(A = \sum a_i \cdot M_i \cdot M_i^{-1} (mod \ \ M)\)</span></p><p><span class="math inline">\(PS\)</span> : 这里求逆元必须要用<span class="math inline">\(Exgcd\)</span>, 因为不保证<span class="math inline">\(m_i\)</span>为质数, 只保证<span class="math inline">\(M_i\)</span>与<span class="math inline">\(m_i\)</span>互质</p><p>证明 : 不会, 待填坑......</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> namesapce <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">LL n, m[maxn], a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">exgcd</span><span class="params">(LL a, LL b, LL &amp;x, LL &amp;y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b == <span class="number">0</span>)&#123;x = <span class="number">1</span>; y = <span class="number">0</span>; <span class="keyword">return</span> a;&#125;</span><br><span class="line">LL x0 = <span class="number">0</span>, y0 = <span class="number">0</span>;</span><br><span class="line">LL d = exgcd(b, a % b, y0, x0);</span><br><span class="line">x = x0; y = y0 - ((a / b) * x0);</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">china</span><span class="params">(LL *a, LL *m, LL n)</span></span>&#123;</span><br><span class="line">LL M = <span class="number">1</span>, ans = <span class="number">0</span>, tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)M *= m[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> Mi = M / m[i], inv;</span><br><span class="line">exgcd(Mi, m[i], inv, tmp);</span><br><span class="line">ans = (ans + Mi * inv * a[i]) % M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (M + ans % M) % M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">a[i] = read(), m[i] = read();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; china(a, m, n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="m_i为任意数"><span class="math inline">\(m_i\)</span>为任意数</h2><p>我们引入拓展中国剩余定理, 比如对于一组膜方程 : <span class="math display">\[\begin{cases} x = a_1 (mod \ \ m_1)\\ x = a_2(mod \ \ m_2)\end{cases}\]</span> 我们将式子转换一下 <span class="math display">\[x = a_1 + m_1 \cdot y_1, x = a_2 + m_2 \cdot y_2\]</span></p><p><span class="math display">\[x = a_1 + m_1 \cdot y_1 = a_2 + m_2 \cdot y_2\]</span></p><p><span class="math display">\[a_1 - a_2 = m_2 \cdot y_2 - m_1 \cdot y_1\]</span></p><p>然后我们设<span class="math inline">\(d = gcd(m_1, m_2)\)</span>, 并使得<span class="math inline">\(m_1 \cdot x + m_2 \cdot y = d\)</span>, 显然如果<span class="math inline">\(d \not\mid (a_1 - a_2)\)</span>无解, 否则就是有解</p><p>然后使得<span class="math inline">\(y_1 = \frac {a_1 - a_2}{d} \cdot x, y_2 = \frac {a_1 - a_2}{d} \cdot y\)</span> <span class="math display">\[A = a_1 + m_1 \cdot y_1\]</span> 我们就得到了一个合法解, <span class="math inline">\(x = A(mod \ \ lcm(m_1, m_2))\)</span></p><p>如果膜方程有很多的话, 就依次合并就好了</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">LL n, m[maxn], a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">exgcd</span><span class="params">(LL a, LL b, LL &amp;x, LL &amp;y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b == <span class="number">0</span>)&#123;x = <span class="number">1</span>; y = <span class="number">0</span>; <span class="keyword">return</span> a;&#125;</span><br><span class="line">LL x0 = <span class="number">0</span>, y0 = <span class="number">0</span>;</span><br><span class="line">LL d = exgcd(b, a % b, y0, x0);</span><br><span class="line">x = x0; y = y0 - ((a / b) * x0);</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">mul</span><span class="params">(LL x, LL y, LL mod)</span></span>&#123;</span><br><span class="line">x %= mod; y %= mod;</span><br><span class="line"><span class="keyword">return</span> (x * y - (LL)(((<span class="keyword">long</span> <span class="keyword">double</span>)x * y + <span class="number">0.5</span>) / mod) * mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">exchina</span><span class="params">(LL *a, LL *m, LL n)</span></span>&#123;</span><br><span class="line">LL A = a[<span class="number">1</span>], M = m[<span class="number">1</span>], t, d, x, y;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)&#123;</span><br><span class="line">d = exgcd(M, m[i], x, y);</span><br><span class="line"><span class="keyword">if</span>((a[i] - A) % d != <span class="number">0</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">t = m[i] / d;</span><br><span class="line">x = mul(x, (a[i] - A) / d, t);</span><br><span class="line"><span class="comment">//x *= ((a[i] - A) / d);</span></span><br><span class="line"><span class="comment">//x = (t + x % t) % t;</span></span><br><span class="line">A = (mul(M, x, M * t) + A) % (M * t); M *= t; A %= M;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (A % M + M) % M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">m[i] = read(), a[i] = read();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (exchina(a, m, n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="例题讲解">例题讲解</h1><h2 id="bzoj5418屠龙勇士"><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=5418" target="_blank" rel="noopener">1.BZOJ5418屠龙勇士</a></h2><p>题目大意 : 给你一组以下形式的膜方程, 并让你求出最小解 <span class="math display">\[w_i \cdot x = a_i (mod \ \ p_i)\]</span> 我们还是考虑转换一下式子 : <span class="math display">\[w_i \cdot x_i + p_i \cdot y_i = a_i\]</span> 再考虑直接用<span class="math inline">\(Exgcd\)</span>求出<span class="math inline">\(w_i \cdot a + p_i \cdot b = gcd(w_i, p_i) = d\)</span>, 显然如果<span class="math inline">\(d \not\mid a_i\)</span>无解, 否则 <span class="math display">\[x = a + k \cdot \frac{p_i}{d}\]</span> 这样我们将膜方程转化为了 : <span class="math display">\[\begin{cases} x = \frac{a_1}{gcd(w_1, p_1)} (mod \ \ \frac{p_1}{gcd(w_1, p_1)})\\x = \frac{a_2}{gcd(w_2, p_2)} (mod \ \ \frac{p_2}{gcd(w_2, p_2)})\\..........\\x = \frac{a_n}{gcd(w_n, p_n)} (mod \ \ \frac{p_n}{gcd(w_n, p_n)})\\\end{cases}\]</span> 这样我们就可以愉悦的套上<span class="math inline">\(ExCRT\)</span>的模板了</p><p>但是上面我们所讨论的都是基于<span class="math inline">\(a_i \leq p_i\)</span>的, 但是如果不保证这个条件的话就会出一些问题, 因为有可能我们根本就没有把血量杀到小于等于零但是在膜<span class="math inline">\(p_i\)</span>的意义下血量就是零了, 所以这个不是完全正确的, 但是我们又发现所有不满足<span class="math inline">\(a_i \leq p_i\)</span>的测试点都满足<span class="math inline">\(p_i = 1\)</span>, 所以对于这种情况答案就是 : <span class="math display">\[max\{\lceil \frac{a_i}{w_i} \rceil\}\]</span> 最后关于选剑的问题我们直接用<span class="math inline">\(multiset\)</span>维护一下就好了, 具体如下 :</p><p>先在<span class="math inline">\(multiset\)</span>里面<span class="math inline">\(upper\_bound\)</span>一下, 如果这个迭代器为<span class="math inline">\(begin()\)</span>那么这个答案就是这个迭代器所代表的值, 否则就把这个迭代器减减一下, 就是答案了</p><h1 id="summary">Summary</h1><p><del>水水水</del></p><p><del>咕咕咕</del></p>]]></content>
      
      <categories>
          
          <category> OI笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CRT </tag>
            
            <tag> Exgcd </tag>
            
            <tag> ExCRT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Streaming#5模拟赛</title>
      <link href="/2018/09/02/20180902/"/>
      <url>/2018/09/02/20180902/</url>
      <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/L4co5ovnhyPCGXuu9oqIMj3qHnqHD3cfmBs4X9z8fDc!/r/dPMAAAAAAAAA"> <a id="more"></a></p><h1 id="streaming5-题解报告"><a href="http://www.vixbob-lwc.pw/pdf/2018.9.2.pdf" target="_blank" rel="noopener">Streaming#5 题解报告</a></h1><h2 id="t1.珠">T1.珠</h2><p>题目大意 : 给你一个长度为<span class="math inline">\(n\)</span>的数字环, 你可顺时针或者逆时针选择一个子序列, 满足子序列的以<span class="math inline">\(2\)</span>开头, 后面的数字都是<span class="math inline">\(3\)</span>, 求最长子序列</p><p>题解 : 我们考虑对于每一个数字为<span class="math inline">\(2\)</span>的位置向左边和右边二分一个位置, 使得这个位置到数字<span class="math inline">\(2\)</span>中间全是<span class="math inline">\(3\)</span>, 所以我们必须得先处理处两个数组<span class="math inline">\(preL, preR\)</span>, 表示从一个为<span class="math inline">\(3\)</span>的位置向左向右全部都是<span class="math inline">\(3\)</span>的结束位置, 这样就可以二分了, 特别的如果你向右边二分出的位置为这个序列的末尾, 那你必须从这个序列的开头再次二分一个位置, 因为这个是一个环, 头尾可以相接</p><p>复杂度为<span class="math inline">\(O(nlogn)\)</span></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> posR[maxn], posL[maxn], ans, L, R, n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">binaryR</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>, ans = l - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(posR[mid] == i)l = mid + <span class="number">1</span>, ans = mid;</span><br><span class="line"><span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">binaryL</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>, ans = r + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(posL[mid] == i)r = mid - <span class="number">1</span>, ans = mid;</span><br><span class="line"><span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"beads.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"beads.out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s + <span class="number">1</span>); n = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">'3'</span>)posR[i] = (s[i - <span class="number">1</span>] == s[i]) ? posR[i - <span class="number">1</span>] : i;</span><br><span class="line"><span class="keyword">else</span> posR[i] = inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">'3'</span>)posL[i] = (s[i + <span class="number">1</span>] == s[i]) ? posL[i + <span class="number">1</span>] : i;</span><br><span class="line"><span class="keyword">else</span> posL[i] = -inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] != <span class="string">'2'</span>)<span class="keyword">continue</span>;</span><br><span class="line">R = binaryR(i + <span class="number">1</span>, n, i + <span class="number">1</span>), L = binaryR(<span class="number">1</span>, i - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">ans = max(ans, R - i + <span class="number">1</span> + L * (R == n));</span><br><span class="line">R = binaryL(i + <span class="number">1</span>, n, n), L = binaryL(<span class="number">1</span>, i - <span class="number">1</span>, i - <span class="number">1</span>);</span><br><span class="line">ans = max(ans, i - L + <span class="number">1</span> + (n - R + <span class="number">1</span>) * (L == <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans == <span class="number">0</span>)<span class="built_in">puts</span>(<span class="string">"TvT"</span>);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'2'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; ans; i++)<span class="built_in">putchar</span>(<span class="string">'3'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">323</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">333</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2332323333</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">33332233233</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="t2.免农">T2.免农</h2><p>题目大意 : 一开始你有两个免子, 下一个时刻, 你的免子会变成当前时刻的两倍, 然后我们会将这些免子分为若干组, <span class="math inline">\(k\)</span>个为一组, 特别的如果存在一组, 这一组里只有一个免子, 那么这个免子就会死去, 求<span class="math inline">\(n\)</span>时刻时免子的个数对<span class="math inline">\(p\)</span>取余的结果</p><p>题解 :</p><ul><li>考虑如果<span class="math inline">\(k\)</span>为偶数的话, 是不会存在单个免子为一组的, 所以最后的答案就是<span class="math inline">\(2^{n + 1} \% p\)</span></li><li>如果<span class="math inline">\(k\)</span>为奇数的话, 当<span class="math inline">\(2^{q} \% k == 1\)</span>的话那么在<span class="math inline">\(q\)</span>时刻之后, 就不会有免子再会落单了, 并且可以证明在<span class="math inline">\(k\)</span>个时刻以内, 一定存在一个时刻<span class="math inline">\(t\)</span>, 使得<span class="math inline">\(2^t \% k == 1\)</span>, 所以直接模拟就好了</li></ul><p>复杂度<span class="math inline">\(O(min(k, n))\)</span></p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">LL n, k, p, now, ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">ksm</span><span class="params">(LL x, LL k)</span></span>&#123;</span><br><span class="line">LL cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)&#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>)cnt = cnt * x % p;</span><br><span class="line">x = x * x % p; k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"rabit.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"rabit.out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">n = read(); k = read(); p = read();</span><br><span class="line">now = <span class="number">2</span> % k; ans = <span class="number">2</span>;</span><br><span class="line">if(!(k &amp; 1))&#123;cout &lt;&lt; ans * ksm(2, n) % p; return 0;&#125;</span><br><span class="line"><span class="keyword">while</span>(now != <span class="number">1</span> &amp;&amp; n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">now = <span class="number">2</span> * now % k;</span><br><span class="line">ans = <span class="number">2</span> * ans % p;</span><br><span class="line">n--;</span><br><span class="line">&#125; <span class="keyword">if</span>(now == <span class="number">1</span>)ans--;</span><br><span class="line">cout &lt;&lt; (ans + p) % p * ksm(2, n) % p;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">6 7 10086</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="t3.高维网络">T3.高维网络</h2><p>题目大意 : 现在有一个<span class="math inline">\(d\)</span>维空间, 起始坐标为<span class="math inline">\(A(0, 0, ...., 0)\)</span>, 结束坐标为<span class="math inline">\(B(a_1, a_2, ...., a_d)\)</span>, 现在有<span class="math inline">\(p\)</span>个坐标上设有障碍, 并且每一步只能在某一个维度上走一步, 也就是说只能这样转移 : <span class="math display">\[(0, 0, ...., 0) -&gt; (1, 0, ...., 0) or (0, 0,...., 0) -&gt; (0, 1, ...., 0)\]</span> 求从起点走到终点不经过障碍有多少种方案, 输出方案数对<span class="math inline">\(P\)</span>取余后的结果</p><p>题解 :</p><p>我们先考虑没有障碍的情况, 从<span class="math inline">\(x(s_1, s_2, ...., s_d)\)</span>移动到<span class="math inline">\(y(t_1, t_2, ...., t_d)\)</span>有多少种方案, 首先我们设数组<span class="math inline">\(tmp_i = t_i - s_i\)</span>, 其后缀和为<span class="math inline">\(S\)</span>, 那么我们一定会走<span class="math inline">\(\sum_{i = 1}^{d}tmp_i\)</span>步, 前<span class="math inline">\(tmp_1\)</span>步我们可以任意分配就有<span class="math inline">\(C_{S_1}^{tmp_1}\)</span>种方案, 然后我们依次分配步数就可以知道方案数为 : <span class="math display">\[Paths(x, y) = \prod_{i = 1} ^ {i \leq d} C_{S_i}^{tmp_i}\]</span> 然后如果直接容斥的话复杂度为<span class="math inline">\(O(2^p \cdot d \cdot logP)\)</span>, 实测可以获得<span class="math inline">\(80\)</span>分的好成绩</p><p>我们现在再考虑<span class="math inline">\(dp\)</span>, <span class="math inline">\(f[i]\)</span>表示从起点到第<span class="math inline">\(i\)</span>个障碍点并且不经过任何障碍点的方案数, 不难得出转移方程为 : <span class="math display">\[f[i] = Paths(A, i) - \sum_{i \ne j} f[j] * Paths(j, i)\]</span> <span class="math inline">\(PS\)</span> :</p><ul><li>注意<span class="math inline">\(Paths(x, y)\)</span>有方向性, 表示从<span class="math inline">\(x\)</span>转移到<span class="math inline">\(y\)</span>可以经过任意障碍的方案数</li><li>并且这个<span class="math inline">\(dp\)</span> 的转移顺序必需是从最靠近起点<span class="math inline">\(A\)</span>的障碍点开始转移, 不然会有问题</li></ul><p><span class="math inline">\(Update\)</span> : 我们来考虑一下这个<span class="math inline">\(dp\)</span>的正确性, 我们可能会想这样<span class="math inline">\(dp\)</span>会不会减掉一些重复的路径, 比如说有三个点<span class="math inline">\(i, j, k\)</span>, <span class="math inline">\(i\)</span>可以到达<span class="math inline">\(j\)</span>, <span class="math inline">\(j\)</span>可以到达<span class="math inline">\(k\)</span>, 在转移的时候我们会将 <span class="math display">\[f[i] * Paths(i, k) \&amp; \&amp; f[j] * Paths(j, k)\]</span> 都减掉, 这样会不会有问题呢?</p><p>实际上是不会的, 我们注意到<span class="math inline">\(f[i]\)</span>的定义是指从<span class="math inline">\(A\)</span>到<span class="math inline">\(i\)</span>号障碍点不经过任何其他障碍的路径方案数, 所以<span class="math inline">\(f[j]\)</span>中的方案数是不包括<span class="math inline">\(f[i] * Paths(i, j)\)</span>的, 所以这样<span class="math inline">\(dp\)</span>的正确性是有保障的, 最终复杂度为<span class="math inline">\(O(p ^ 2 \cdot d \cdot logP)\)</span>这样的复杂度是正确的</p><p>代码 :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> zero = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">105</span>], d, p, fac[maxn], s[<span class="number">105</span>], pos[<span class="number">505</span>][<span class="number">105</span>], tmp[<span class="number">105</span>], ans, sum, Q[<span class="number">505</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">505</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)&#123;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>)cnt = <span class="number">1l</span>l * cnt * x % P;</span><br><span class="line">x = <span class="number">1l</span>l * x * x % P; k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> cnt % P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> *S, <span class="keyword">int</span> *T)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= d; i++)&#123;</span><br><span class="line">tmp[i] = <span class="built_in">abs</span>(T[i] - S[i]);</span><br><span class="line"><span class="keyword">if</span>(S[i] &gt; T[i])<span class="keyword">return</span> zero;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = d; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">s[i] = s[i + <span class="number">1</span>] + tmp[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= d; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> C = <span class="number">1</span>;</span><br><span class="line">C = <span class="number">1l</span>l * C * ksm(fac[s[i] - tmp[i]], P - <span class="number">2</span>) % P;</span><br><span class="line">C = <span class="number">1l</span>l * C * ksm(fac[tmp[i]], P - <span class="number">2</span>) % P * fac[s[i]] % P;</span><br><span class="line">ans = <span class="number">1l</span>l * ans * C % P;</span><br><span class="line">&#125; <span class="keyword">return</span> ans % P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= d; i++)</span><br><span class="line"><span class="keyword">if</span>(pos[x][i] != pos[y][i]) <span class="keyword">return</span> pos[x][i] &lt; pos[y][i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"cube.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"cube.out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">d = read(); p = read(); fac[<span class="number">1</span>] = <span class="number">1</span>; fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= d; i++)</span><br><span class="line">sum += (a[i] = read());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= sum; i++)</span><br><span class="line">fac[i] = <span class="number">1l</span>l * fac[i - <span class="number">1</span>] * i % P;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= d; j++)</span><br><span class="line">pos[i][j] = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; i++)Q[i] = i;</span><br><span class="line">sort(Q + <span class="number">1</span>, Q + <span class="number">1</span> + p, cmp);</span><br><span class="line">ans = calc(pos[<span class="number">0</span>], a);</span><br><span class="line"><span class="comment">//cout &lt;&lt; "ans = " &lt;&lt; ans &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">/*for(register int i = 1; i &lt;= p; i++)&#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; Q[i] &lt;&lt; " : ";</span></span><br><span class="line"><span class="comment">for(register int j = 1; j &lt;= d; j++)</span></span><br><span class="line"><span class="comment">cout &lt;&lt; pos[Q[i]][j] &lt;&lt; " ";</span></span><br><span class="line"><span class="comment">cout &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; i++)&#123;</span><br><span class="line">f[Q[i]] = calc(pos[<span class="number">0</span>], pos[Q[i]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= p; j++)</span><br><span class="line"><span class="keyword">if</span>(Q[i] != Q[j])</span><br><span class="line">f[Q[i]] = (f[Q[i]] - <span class="number">1l</span>l * f[Q[j]] * calc(pos[Q[j]], pos[Q[i]]) % P + P) % P;</span><br><span class="line"><span class="comment">//cout &lt;&lt; "f[" &lt;&lt; Q[i] &lt;&lt; "] = " &lt;&lt; f[Q[i]] &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; i++)</span><br><span class="line">ans = (ans - <span class="number">1l</span>l * f[i] * calc(pos[i], a) % P + P) % P;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2 1</span></span><br><span class="line"><span class="comment">2 1</span></span><br><span class="line"><span class="comment">1 0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2 1</span></span><br><span class="line"><span class="comment">2 1</span></span><br><span class="line"><span class="comment">2 0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="summary">Summary</h2><ul><li>推容斥式子时不要想当然, 想清楚再打</li></ul><p><del>水水水</del></p><p><del>咕咕咕</del></p>]]></content>
      
      <categories>
          
          <category> 模拟赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> DP </tag>
            
            <tag> 组合数学 </tag>
            
            <tag> 容斥原理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浅谈仙人掌和圆方树</title>
      <link href="/2018/08/31/Cactus/"/>
      <url>/2018/08/31/Cactus/</url>
      <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/ZayFJrhxuRv.oNtLHKJRQkdvQ2g0.gm6rjKZHOdZvjM!/r/dDQBAAAAAAAA"> <a id="more"></a></p><h2 id="什么是仙人掌">1.什么是仙人掌</h2><p>给你一张无向图，一条边最多只在一个简单环当中的图被称之为仙人掌，例如：</p><p><img src="https://www.lydsy.com/JudgeOnline/images/1023/1.jpg"></p><p><strong>(图片出自BZOJ1023)</strong></p><p>又或者这样</p><p><img src="http://wx1.sinaimg.cn/mw690/0060lm7Tly1fv07s37l7mj30k00akq3l.jpg"></p><p><strong>(图片源于网络)</strong></p><h2 id="什么是圆方树">2.什么是圆方树</h2><p>仙人掌<span class="math inline">\(G = (V, E)\)</span> 的圆方树 <span class="math inline">\(T = (V_T,E_T)\)</span> 为满足以下条件的无向图：</p><ul><li><p><span class="math inline">\(V_T = R_T \bigcup S_T, R_T = V , R_T \bigcap S_T \ne ∅\)</span> , 我们称 <span class="math inline">\(R_T\)</span> 集合为圆点, <span class="math inline">\(S_T\)</span> 集合为方点</p></li><li><p><span class="math inline">\(\large{\forall} {e} \large\in E\)</span> , 若 <span class="math inline">\(e\)</span> 不在任何简单环中, 则<span class="math inline">\(e \large\in E_T\)</span></p></li><li><p>对于每个仙人掌的简单环<span class="math inline">\(R\)</span> ,存在方点<span class="math inline">\(P_R \large\in S_T\)</span> , 并且 <span class="math inline">\(\large{\forall} {p} \large\in R\)</span> 满足<span class="math inline">\((P_R, P) \large\in E_T\)</span> , 即对每个环建立一个方点并连向这个环里的所有点</p></li></ul><p>通俗一点的说 : 就是对于每个简单环都额外建一个方点 , 然后将每个圆点向方点连一条边 , 最后再将不连通的圆点连上原本有的边 , 就构成了圆方树</p><p>以下是对于圆方树正确性的证明：</p><p>感性证明</p><ul><li>不在环上的点和边不会改变其树的性质, 而每个在环上的点都会连向方点, 形成一个菊花图, 所以这一定是一颗树</li></ul><p>理论证明</p><ul><li>原图中的环的个数为 <span class="math inline">\(|E| - |V| + 1\)</span> , 则 <span class="math inline">\(|V_T| = |S_T| + |R_T| = |V| + |E| - |V| + 1 = |E| + 1, |E_T| = |E|\)</span> <strong>(大小为</strong><span class="math inline">\(\textbf{r}\)</span><strong>的环在仙人掌和圆方树中都是</strong><span class="math inline">\(\textbf{r}\)</span><strong>条边)</strong> , 因此满足<span class="math inline">\(|V_T| = |E_T| + 1\)</span></li></ul><h2 id="如何构造圆方树">3.如何构造圆方树</h2><p>我们直接从任意一个点开始进行<span class="math inline">\(Tarjan\)</span> 求点双联通分量 , 然后对于每一个点双联通分量建立一个方点 , 然后连边向这个点双联通分量里的每一个点连边, 最后处理没有连边的圆圆点对</p><p><span class="math inline">\(PS\)</span> : 个人建议通过并查集维护一下连通性在判断是否需要将原图中的边加入进来 , 而且这样可以避免重边带来的一些奇奇怪怪的<span class="math inline">\(bug\)</span></p><p>如图 :</p><p><img src="http://wx1.sinaimg.cn/mw690/0060lm7Tly1fv07u9zu73j30wx0bo752.jpg"></p><p>虚边是原图上的边 , 实边是新建立的圆方树上的边 , 有一些虚边和实边重和的请况可以按照上述并查集的方法来维护</p><h2 id="圆方树的性质">4.圆方树的性质</h2><ul><li><span class="math inline">\(\large{\forall} {(x, y)} \large\in E_T, \{x, y\} \large\cap R_T \ne \varnothing\)</span> , 通俗点说就是两个方点一定不会相连</li><li><p>在构造的过程中无论取什么点为根 , 构造出的圆方树都是一样的(在形态上) , 因此圆方树是无根树 定义 : 子仙人掌 &gt; 以<span class="math inline">\(\textbf{r}\)</span>为根的仙人掌上的点<span class="math inline">\(\textbf{p}\)</span>的子仙人掌是从仙人掌中去掉<span class="math inline">\(\textbf{p}\)</span>到<span class="math inline">\(\textbf{r}\)</span>的简单路径上的所有边之后 , <span class="math inline">\(\textbf{p}\)</span>所在的联通块</p></li><li><p>以<span class="math inline">\(\textbf{r}\)</span>为根的仙人掌中 , 点<span class="math inline">\(\textbf{p}\)</span>的子仙人掌就是圆方树以<span class="math inline">\(\textbf{r}\)</span>为根时点<span class="math inline">\(\textbf{p}\)</span>的子树中的所有圆点所构成的图</p></li></ul><h2 id="利用圆方树和仙人掌解决问题">5.利用圆方树和仙人掌解决问题</h2><h4 id="bzoj4316小c的独立集"><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=4316" target="_blank" rel="noopener">BZOJ4316小C的独立集</a></h4><p>题面 : 求一颗仙人掌上的最大独立集</p><p>题解 : 我们先考虑如果在一棵树上应该怎么做 , 考虑状态<span class="math inline">\(f[i][0/1]\)</span>表示这个点选或不选时以这个点为根的子树中的最大独立集是多少 , 那么转移就是 : <span class="math display">\[f[i][0] = \sum_{v \in son[i]}^{v} max(f[v][0], f[v][1]) \\f[i][1] = \sum_{v \in son[i]}^{v} f[v][0]\]</span> 我们再考虑环上如何转移 , 我们把这个环上深度最小的点称作这个环的根 , 我们还是考虑这个环的根选还是不选 , 然后我们把环展开 , 如果选择根节点的话 , 它两侧的点都是不能选的 , 否则就无所谓 , 然后剩下的就按树上的做法来搞就好了 , 所以转移就是 : <span class="math display">\[g[i][0] = max(g[i - 1][0], g[i - 1][1]) + f[id[i]][0] \\g[i][1] = g[i - 1][0] + f[id[i]][1]\]</span></p><p>最后的答案就是<span class="math inline">\(max(f[root][0], f[root][1])\)</span> , 这道题就这么愉悦的水过辣</p><h4 id="bzoj1023cactus仙人掌图"><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1023" target="_blank" rel="noopener">BZOJ1023cactus仙人掌图</a></h4><p>题目大意 : 给你一颗仙人掌 , 求仙人掌上的两点之间最短路的最大值 , 就是仙人掌的直径</p><p>题解 : 我们先考虑在树上怎么做 , 我们考虑状态<span class="math inline">\(f[i]\)</span>表示在以这个点为根的子树当中, 经过<span class="math inline">\(i\)</span>这个点的最长链的长度, 转移很显然, 就是: <span class="math display">\[f[i] = max \{ f[v] + w_{i,v}, v \in son[i] \}\]</span> 然后我们就在转移的过程中更新一下答案就好了</p><p>然后还是一样的思路我们把环单独拎出来搞一下, 但是怎么弄呢, 发现不好在环上直接<span class="math inline">\(dp\)</span>, 因为环上的最短距离是不确定的, 我们考虑把环拆成链, 直接在链上<span class="math inline">\(dp\)</span>, 但是如果直接转移的话是<span class="math inline">\(n^2\)</span>的, 式子是这样的: <span class="math display">\[ans = max(ans, max \{ f[r] + f[l] + r - l, r - l &lt; \frac{len}{2} \} )\]</span> 然后我们观察发现如果固定左端点, 新加入一个右端点我们可以将一些没有当前优的右端点给弹掉, 这个东西是可以用单调队列<span class="math inline">\(O(n)\)</span>维护的, 具体的 :</p><ul><li>如果当前队尾和队头的插值超过环的长度的二分之一, 弹掉队头, 直到符合条件为止</li><li>如果<span class="math inline">\(f[q[tail]] + q[tail] \leq f[i] + i\)</span>, 弹掉队尾, 直到符合条件为止</li></ul><p>然后就可以开心的<span class="math inline">\(dp\)</span>辣</p><h4 id="bzoj2125最短路"><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2125" target="_blank" rel="noopener">BZOJ2125最短路</a></h4><p>题目大意 : 给你一颗仙人掌, 有<span class="math inline">\(n\)</span>次询问, 每次询问两点之间的最短路, <span class="math inline">\(n \leq 10^5\)</span></p><p>题解 : 对于上面的题, 我们可以不用建圆方树, 但是这道题我们考虑将圆方树建出来, 但是有一个问题, 我们怎么设定圆点到方点的边权, 这里有一个小技巧, 我们对于每一个环都建立一个根, 每个圆点到方点的边权就是这个圆点在其所在的环中到这个环的根的最短距离, 这样的话就可以保证从深度小的点向深度大的点遍历时, 是点与点之间的最短距离</p><p>建完图以后, 对其进行倍增预处理, 和剖分, 对于每次查询<span class="math inline">\((u, v)\)</span>, 我们我们求一下<span class="math inline">\(LCA(u, v)\)</span> 如果<span class="math inline">\(LCA(u, v)\)</span>是圆点那么就和普通的树上查询距离是一样的答案就是<span class="math inline">\(dis[u] + dis[v] - dis[LCA(u, v)]\)</span>, 如果是方点的话, 就说明<span class="math inline">\(u, v\)</span>的祖先是在一个环上的, 这种情况不能直接搞, 我们用倍增向上跳到方点下的那个两个点<span class="math inline">\(fa_u, fa_v\)</span>, 让后求一下环上两点的最短距离<span class="math inline">\(L\)</span>,那么最后的答案就是<span class="math inline">\(dis[u] + dis[v] - dis[fa_u] - dis[fa_v] + L\)</span></p><h2 id="广义仙人掌">6.广义仙人掌</h2><p>填坑中.....</p><h2 id="summary">7.Summary</h2><p><del>水水水</del></p><p><del>咕咕咕</del></p>]]></content>
      
      <categories>
          
          <category> OI笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 仙人掌 </tag>
            
            <tag> 图论 </tag>
            
            <tag> 圆方树 </tag>
            
            <tag> 单调队列 </tag>
            
            <tag> 树链剖分 </tag>
            
            <tag> 倍增 </tag>
            
            <tag> Tarjan </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>EducationalCodeForcesRound48</title>
      <link href="/2018/08/23/EducationalCodeforcesRound48%20/"/>
      <url>/2018/08/23/EducationalCodeforcesRound48%20/</url>
      <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/*SVOWpJk1IjRD8HN1cNj094azdOHiadNLhw3R*z*mR8!/r/dPMAAAAAAAAA"> <a id="more"></a></p><h1 id="educational-codeforces-round-48-rated-for-div.-2"><a href="http://codeforces.com/contest/1016" target="_blank" rel="noopener">Educational Codeforces Round 48 (Rated for Div. 2)</a></h1><h2 id="a.death-note"><a href="http://codeforces.com/contest/1016/problem/A" target="_blank" rel="noopener">A.Death Note</a></h2><p>题目大意：告诉你你一天可以写<span class="math inline">\(a_i\)</span>个字, 现在你有一本<span class="math inline">\(DeathNote\)</span>,这本书有<span class="math inline">\(n\)</span>页,每页可以写<span class="math inline">\(m\)</span>个字，问每天如果写<span class="math inline">\(a_i\)</span>个字的话,一天要翻多少页</p><p>题解：你搞一个 <span class="math inline">\(sum\)</span> 记录当前页你已经写了多少个字，然后每天要翻的页数就是$ $, <span class="math inline">\(sum = (sum + a_i)\%m\)</span></p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn], n, m, ans;</span><br><span class="line"></span><br><span class="line">LL sum;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); m = read(); </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)a[i] = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">sum += a[i]; ans = sum / m;</span><br><span class="line"><span class="comment">//while(sum &gt;= m)ans++, sum -= m;</span></span><br><span class="line">sum %= m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="b.segment-occurrences"><a href="http://codeforces.com/contest/1016/problem/B" target="_blank" rel="noopener">B.Segment Occurrences</a></h2><p>题目大意：给你一个串<span class="math inline">\(s_0\)</span> , 再给你一个匹配串<span class="math inline">\(s_1\)</span> ,有<span class="math inline">\(m\)</span>次询问每次问你<span class="math inline">\(s_0\)</span>这个串在<span class="math inline">\([l, r]\)</span>这个区间内，出现了多少次<span class="math inline">\(s_1\)</span>串</p><p>题解：由于<span class="math inline">\(len(s_1) \leq 10^3\)</span> , <span class="math inline">\(len(s_0) \leq 10^5\)</span> ,所以我们直接对于<span class="math inline">\(s_0\)</span>中的每一位的后<span class="math inline">\(len(s_1)\)</span>位和<span class="math inline">\(s_1\)</span>匹配一下，然后<span class="math inline">\(a_i = (s_1==s_{0l, r})\)</span> ，用这个数组搞一下前缀和，每次之久<span class="math inline">\(O(1)\)</span>查询就好了,但是注意如果查询<span class="math inline">\([l,r]\)</span>区间最后的答案是<span class="math inline">\(sum[r - len(s_1) + 1] - sum[l - 1]\)</span>而不是<span class="math inline">\(sum[r]-sum[l-1]\)</span>,然后匹配我用的是哈希，当然<span class="math inline">\(KMP\)</span>, 暴力匹配都是可以的</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> seed0 = <span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> seed1 = <span class="number">23331</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Q, sum[maxn], n, m;</span><br><span class="line"><span class="keyword">char</span> s[maxn], s1[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Hash</span>&#123;</span></span><br><span class="line">ull base0, base1;</span><br><span class="line">Hash(ull X = <span class="number">0</span>, ull X0 = <span class="number">0</span>)&#123;base0 = X; base1 = X0;&#125;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Hash &amp;t) <span class="keyword">const</span> &#123;<span class="keyword">return</span> base0 == t.base0 &amp;&amp; base1 == t.base1;&#125;</span><br><span class="line">&#125;ex, op[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> Hash <span class="title">gethash</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> len, <span class="keyword">char</span> *s)</span></span>&#123;</span><br><span class="line">ull base0 = <span class="number">0</span>, base1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = pos; i &lt;= pos + len - <span class="number">1</span>; i++)</span><br><span class="line">base0 = base0 * seed0 + s[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = pos; i &lt;= pos + len - <span class="number">1</span>; i++)</span><br><span class="line">base1 = base1 * seed1 + s[i];</span><br><span class="line"><span class="keyword">return</span> Hash(base0, base1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); m = read(); Q = read();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>, s + <span class="number">1</span>, s1 + <span class="number">1</span>);</span><br><span class="line">ex = gethash(<span class="number">1</span>, m, s1);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i + m - <span class="number">1</span> &lt;= n; i++)&#123;</span><br><span class="line">op[i] = gethash(i, m, s);</span><br><span class="line">sum[i] = sum[i - <span class="number">1</span>] + (op[i] == ex);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Q; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> l = read(), r = read();</span><br><span class="line"><span class="keyword">if</span>(r - l + <span class="number">1</span> &lt; m)<span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum[r - m + <span class="number">1</span>] - sum[l - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="c.vasya-and-the-mushrooms"><a href="http://codeforces.com/contest/1016/problem/C" target="_blank" rel="noopener">C.Vasya And The Mushrooms</a></h2><p>题目大意：有两排蘑菇，每行有<span class="math inline">\(n\)</span>个，每个蘑菇都有一个生长速度<span class="math inline">\(a_i\)</span>, 一开始的初始时间是零，你在两个个子之间移动的速度是<span class="math inline">\(1m/s\)</span> 每个相邻的格子之间的距离是一，最后你得到每个蘑菇的权值是<span class="math inline">\(a_i\cdot t_i\)</span> ，<span class="math inline">\(t_i\)</span>是你猜到这个蘑菇的时间，问你如何采摘才能让总权值最大</p><p>题解：这题然我们一次性拿完并且不能经过相同的蘑菇，那么很显然如果你在某一行上走的路径长度超过二的话那么你就必须得走到头然后从另一行绕回来，那么我们就可以枚举一下是从那一行的哪一列开始一直向前走的，此前我们必须得走蛇形的，例如：</p><p><img src="http://r.photo.store.qq.com/psb?/V12wIROa4RmSjE/rUFSkozPDhUPV*4kyF3fEwrJv6AJqUhl0Q5sqW.Q.XI!/r/dDYBAAAAAAAA"></p><p>所以我们枚举一下转折点就好了，关于统计答案我们处理一个蛇行走的第一行和第二行的前缀和(就是在蛇行走时的前缀和)分别为 <span class="math inline">\(s_0, s_1\)</span>，和一个前缀和分别为<span class="math inline">\(ss_0, ss_1\)</span>，和一个后缀和<span class="math inline">\(sss_0, sss_1\)</span>，还有一个这样的东西 <span class="math display">\[ssa_{i} = \sum_{j=1}^{j\leq i}i\cdot a_j\]</span> 和这样一个东西 <span class="math display">\[ssb_{1i}=\sum_{j=i}^{j \leq n}(n - j + 1) \cdot a_j\]</span> 所以说对于一个转折点在第一行第<span class="math inline">\(i\)</span>列的情况来说 <span class="math display">\[ans = s_{0i} + s_{1i} + (sum_{0n} - sum_{0i} + i \cdot (ss_{0n} - ss_{0i})) + (ssb_{1i} - ssb_{1n} + (n + i) \cdot (sss_{1i} - sss_{1n}))\]</span> 还有一个是就是转折点在第二行第<span class="math inline">\(i\)</span>列的情况，我就不打了，写着好麻烦，见代码，<del>其实就是懒</del></p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> seed0 = <span class="number">233</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> seed1 = <span class="number">23331</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[maxn], b[maxn];</span><br><span class="line"></span><br><span class="line">LL ans, sum, sa[maxn], sb[maxn], ssa0[maxn], ssb0[maxn], ssa1[maxn], ssb1[maxn], s0[maxn], s1[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">s0[i] = s0[i - <span class="number">1</span>] + (a[i] = read());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">s1[i] = s1[i - <span class="number">1</span>] + (b[i] = read());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">ssb0[i] = ssb0[i - <span class="number">1</span>] + <span class="number">1l</span>l * i * b[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">ssa1[i] = ssa1[i + <span class="number">1</span>] + <span class="number">1l</span>l * (n - i + <span class="number">1</span>) * a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">ssa0[i] = ssa0[i - <span class="number">1</span>] + <span class="number">1l</span>l * i * a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">ssb1[i] = ssb1[i + <span class="number">1</span>] + <span class="number">1l</span>l * (n - i + <span class="number">1</span>) * b[i];</span><br><span class="line">ans = max(ans, sum);</span><br><span class="line"><span class="comment">// -------------------------------------------------- // task 3</span></span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>, tim = <span class="number">1</span>; i &lt;= n; i += <span class="number">2</span>, tim += <span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i &lt;= n)sb[i] = sb[i - <span class="number">1</span>] + <span class="number">1l</span>l * tim * b[i];</span><br><span class="line"><span class="keyword">if</span>(i &lt; n)sb[i + <span class="number">1</span>] = sb[i] + <span class="number">1l</span>l * (tim + <span class="number">1</span>) * b[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>, tim = <span class="number">3</span>; i &lt;= n; i += <span class="number">2</span>, tim += <span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i &lt;= n)sa[i] = sa[i - <span class="number">1</span>] + <span class="number">1l</span>l * tim * a[i];</span><br><span class="line"><span class="keyword">if</span>(i &lt; n)sa[i + <span class="number">1</span>] = sa[i] + <span class="number">1l</span>l * (tim + <span class="number">1</span>) * a[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i += <span class="number">2</span>)&#123;</span><br><span class="line">sum = <span class="number">0</span>; <span class="keyword">int</span> tim = (i - <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">sum += sa[i - <span class="number">1</span>] + sb[i - <span class="number">1</span>];</span><br><span class="line">sum += (ssa0[n] - ssa0[i - <span class="number">1</span>]) + <span class="number">1l</span>l * (tim - i) * (s0[n] - s0[i - <span class="number">1</span>]);</span><br><span class="line">sum += ssb1[i] + <span class="number">1l</span>l * (tim + n - i) * (s1[n] - s1[i - <span class="number">1</span>]);</span><br><span class="line">ans = max(ans, sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i += <span class="number">2</span>)&#123;</span><br><span class="line">sum = <span class="number">0</span>; <span class="keyword">int</span> tim = i * <span class="number">2</span>; </span><br><span class="line">sum += sa[i] + sb[i];</span><br><span class="line">sum += (ssb0[n] - ssb0[i]) + <span class="number">1l</span>l * (tim - i - <span class="number">1</span>) * (s1[n] - s1[i]);</span><br><span class="line">sum += ssa1[i + <span class="number">1</span>] + <span class="number">1l</span>l * (tim + n - i - <span class="number">1</span>) * (s0[n] - s0[i]);</span><br><span class="line">ans = max(ans, sum);</span><br><span class="line">&#125; <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="d.vasya-and-the-matrix"><a href="http://codeforces.com/contest/1016/problem/D" target="_blank" rel="noopener">D.Vasya And The Matrix</a></h2><p>题目大意：给你一个<span class="math inline">\(n \cdot m\)</span>的矩阵，告诉你每一行和每一列的异或和，让你求出一种合法解</p><p>题解：我们考虑直接对前<span class="math inline">\(n-1\)</span>行只填第一个数，这个数等于每一行的异或和，也就是说前<span class="math inline">\(n-1\)</span></p><p>的每一行的后<span class="math inline">\(m-1\)</span>列都填零，最后一行的第一个数等于第一列的异或和异或上第一列的前<span class="math inline">\(n-1\)</span>行的每一个数</p><p>然后对于最后一行的后<span class="math inline">\(m-1\)</span>个数都填的是对应的每一列的异或和，如果最后一行的所有数异或起来不等于最后一行的异或和就是无解，否则就是就是合法解</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e2</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, c[maxn], r[maxn], mp[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> cnow[maxn], rnow[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; (((1 &lt;&lt; 30) - 1) &lt;&lt; 1) + 1; 2147483647</span></span><br><span class="line">n = read(); m = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)c[i] = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)r[i] = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">mp[i][<span class="number">1</span>] = c[i], rnow[<span class="number">1</span>] ^= c[i];</span><br><span class="line">mp[n][<span class="number">1</span>] = rnow[<span class="number">1</span>] ^ r[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= m; i++)</span><br><span class="line">mp[n][i] = r[i], cnow[n] ^= r[i];</span><br><span class="line"><span class="keyword">if</span>((cnow[n] ^ mp[n][<span class="number">1</span>]) != c[n])<span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; mp[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="e.rest-in-the-shades"><a href="http://codeforces.com/contest/1016/problem/E" target="_blank" rel="noopener">E.Rest In The Shades</a></h2><p>题目大意：已知一个光源的纵坐标与横坐标的变化范围，现在<span class="math inline">\(x\)</span>轴上有<span class="math inline">\(n\)</span>条围栏(会挡住光线)，并且第一象限中有<span class="math inline">\(q\)</span>个点，问你点在起点移动到终点的过程中<span class="math inline">\(q\)</span>个点中每个点处于阴影的时间。<span class="math inline">\(PS\)</span>:光源的移动速度为<span class="math inline">\(1\)</span>单位每秒，</p><p>并且保证线段不相交</p><p>题解：我们换一种方法理解一下这个题目，其实这个题目要求的东西可以转化为，<span class="math inline">\(q\)</span>个点中每个点和每条线段的左右端点连线后在光源的纵坐标的位置会得到<span class="math inline">\(n\)</span>个投影，然后问这<span class="math inline">\(n\)</span>个投影和光源移动的那个线段的重合部分有多长，因为我们得到的是<span class="math inline">\(n\)</span>个不相交的投影，所以我们直接离散一下值域，然后二分一下光源移动的线段的左端点与右端点，把处于这个范围中间的完整的投影加上，再算一下两端不完全重合的投影所覆盖的长度即可，如图：</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-11</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, Q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span><span class="keyword">double</span> l, r;&#125;t[maxn];</span><br><span class="line"><span class="keyword">double</span> sum[maxn], y2, L, R;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">lower</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(t[mid].l &gt; x)r = mid - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> l = mid + <span class="number">1</span>, ans = mid;</span><br><span class="line">&#125; <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">equ</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x - y) &lt;= eps;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">getpos</span><span class="params">(<span class="keyword">double</span> x2, <span class="keyword">double</span> y2, <span class="keyword">double</span> x3, <span class="keyword">double</span> y3)</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> k = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(equ(x2, x3))<span class="keyword">return</span> x2;</span><br><span class="line">k = (y2 - y3) / (x2 - x3); b = y2 - k * x2;</span><br><span class="line"><span class="keyword">return</span> -b / k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; (((1 &lt;&lt; 30) - 1) &lt;&lt; 1) + 1; 2147483647</span></span><br><span class="line">y2 = read(); L = read(); R = read(); n = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">t[i].l = read(); t[i].r = read();</span><br><span class="line">sum[i] = sum[i - <span class="number">1</span>] + t[i].r - t[i].l;</span><br><span class="line">&#125; Q = read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Q; i++)&#123;</span><br><span class="line"><span class="keyword">double</span> l = <span class="number">0</span>, r = <span class="number">0</span>, x = read(), y = read(), ans = <span class="number">0</span>;</span><br><span class="line">l = getpos(x, y, L, y2); r = getpos(x, y, R, y2);</span><br><span class="line"><span class="keyword">int</span> posl = lower(<span class="number">0</span>, n, l), posr = lower(<span class="number">0</span>, n, r);</span><br><span class="line"><span class="keyword">if</span>(posr == <span class="number">0</span>)ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">/*ans = min(r, max(l, t[posl].r)) - t[posl].l - fabs(l - t[posl].l);</span></span><br><span class="line"><span class="comment">if(posr &gt; posl)&#123;</span></span><br><span class="line"><span class="comment">ans += max(r, t[posr].r) - t[posr].l - fabs(r - t[posr].r);</span></span><br><span class="line"><span class="comment">ans += sum[posr - 1] - sum[posl];</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line">ans = sum[posr - <span class="number">1</span>] - sum[posl - <span class="number">1</span>];</span><br><span class="line">ans -= (min(l, t[posl].r) - t[posl].l);</span><br><span class="line">ans += max(r, t[posr].r) - t[posr].l - <span class="built_in">fabs</span>(r - t[posr].r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.15lf\n"</span>, ans * (y - y2) / y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="f.road-projects"><a href="http://codeforces.com/contest/1016/problem/F" target="_blank" rel="noopener">F.Road Projects</a></h2><p>题目大意：给你一棵树，有<span class="math inline">\(m\)</span>个询问，每个询问有一个<span class="math inline">\(x\)</span>,问你再这棵树上的任意两个没有直接的遍相连的节点中间加上一条边权为 <span class="math inline">\(v\)</span> 的边，从<span class="math inline">\(1\)</span>号结点到<span class="math inline">\(n\)</span>号节点的路径上边权和的最小值最大可以为多少</p><p><del>原题题面写的真TM辣鸡，又扯又说不清</del></p><p>题解：考虑这样一个事实，无论加的边的权值是多少我们每次都贪心选取相同的两个节点来加边肯定是最优的。</p><p>那么怎么求这一对节点呢，我们可以设<span class="math inline">\(d_1[x]\)</span>为<span class="math inline">\(1\)</span>号结点到<span class="math inline">\(x\)</span>号节点的权值，<span class="math inline">\(d_n[x]\)</span>为<span class="math inline">\(n\)</span>号节点到<span class="math inline">\(x\)</span>号结点的权值，如果在<span class="math inline">\(x,y\)</span>中间加了一条边 <span class="math display">\[ans = min(d_1[n], min(d_1[x]+v+d_n[y],d_1[y]+v+d_n[x]))\]</span> 如果<span class="math inline">\(d_1[x]+v+d_n[y] \leq d_1[y]+v+d_n[x]\)</span> 等价于 <span class="math inline">\(d_1[x] - d_n[x] \leq d_1[y]-d_n[y]\)</span> ,所以我们直接按照这个为比较的依据把所有的点都丢进一个<span class="math inline">\(vector\)</span>中，然后<span class="math inline">\(sort\)</span>一下，再呗所有点都丢进一个<span class="math inline">\(set\)</span>中，这回用 <span class="math inline">\(d_n[x]\)</span> 做为排序依据，然后顺序枚举一下，每个节点求一个相对于这个节点最优另一个节点即<span class="math inline">\(set.end() - 1\)</span>等价于<span class="math inline">\(set.rbegin()\)</span>(反向迭代器),</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> LL inf = (<span class="number">1l</span>l &lt;&lt; <span class="number">60</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cnt, head[maxn], pos[maxn];</span><br><span class="line">LL d1[maxn], dn[maxn], minv = inf, maxv;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Graph</span>&#123;</span><span class="keyword">int</span> to, nt, w;&#125;e[maxn &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;LL, <span class="keyword">int</span>&gt; &gt;o;</span><br><span class="line"><span class="built_in">set</span>&lt;pair&lt;LL, <span class="keyword">int</span>&gt; &gt;s0;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ini</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span></span>&#123;e[++cnt] = (Graph)&#123;y, head[x], w&#125;; head[x] = cnt;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> fa, LL *d, LL dis)</span></span>&#123;</span><br><span class="line">d[now] = dis;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = head[now]; i; i = e[i].nt)&#123;</span><br><span class="line"><span class="keyword">int</span> v = e[i].to;</span><br><span class="line"><span class="keyword">if</span>(v == fa)<span class="keyword">continue</span>;</span><br><span class="line">dfs(v, now, d, dis + e[i].w);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x = read(), y = read(), w = read();</span><br><span class="line">ini(x, y, w); ini(y, x, w);</span><br><span class="line">&#125;</span><br><span class="line">dfs(<span class="number">1</span>, <span class="number">1</span>, d1, <span class="number">0</span>); dfs(n, n, dn, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">o.push_back(make_pair(d1[i] - dn[i], i));</span><br><span class="line">sort(o.begin(), o.end());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">pos[o[i].second] = i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">s0.insert(make_pair(dn[i], i));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; o.size(); i++)&#123;</span><br><span class="line"><span class="keyword">int</span> p = o[i].second;</span><br><span class="line">s0.erase(make_pair(dn[p], p));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> u = head[p]; u; u = e[u].nt)&#123;</span><br><span class="line"><span class="keyword">int</span> v = e[u].to;</span><br><span class="line"><span class="keyword">if</span>(pos[v] &gt; pos[p])</span><br><span class="line">s0.erase(make_pair(dn[v], v));</span><br><span class="line">&#125;</span><br><span class="line">LL p0 = inf;</span><br><span class="line"><span class="keyword">if</span>(!s0.empty())</span><br><span class="line">maxv = max(maxv, s0.rbegin() -&gt; first + d1[p]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> u = head[p]; u; u = e[u].nt)&#123;</span><br><span class="line"><span class="keyword">int</span> v = e[u].to;</span><br><span class="line"><span class="keyword">if</span>(pos[v] &gt; pos[p])</span><br><span class="line">s0.insert(make_pair(dn[v], v));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x = read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, min(d1[n], maxv + x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="g.appropriate-team"><a href="http://codeforces.com/contest/1016/problem/G" target="_blank" rel="noopener">G.Appropriate Team</a></h2><p>题目大意：给你一个值域为<span class="math inline">\(10^{18}\)</span>的序列<span class="math inline">\(a\)</span>, 和一个<span class="math inline">\(X,Y\)</span>，问你有多少对<span class="math inline">\(i,j\)</span>满足存在一个<span class="math inline">\(V\)</span>, 使 <span class="math display">\[GCD(a_i,V) = X, LCM(a_j,V)=Y\]</span> 特别的<span class="math inline">\(i,j\)</span>可以相等</p><p>题解：由题意可知 $ V % X == 0, Y % V == 0 $ 所以如果<span class="math inline">\(Y \% X \neq 0\)</span>则不存在<span class="math inline">\(V\)</span>即<span class="math inline">\(ans=0\)</span></p><p>否则 <span class="math display">\[X = \prod P_{i}^{p_{xi}}, Y = \prod P_{i}^{p_{yi}}, a_j = \prod P_{i}^{p_{aji}}\]</span> 对于 <span class="math inline">\(GCD(x,y)\)</span> 是将每个<span class="math inline">\(x,y\)</span> 的素因子的个数取个<span class="math inline">\(min\)</span> 即 <span class="math display">\[GCD(x,y) = \prod P_i^{min(P_{xi}, P_{yi})}\]</span> 而<span class="math inline">\(LCM(x,y)\)</span>　则是取<span class="math inline">\(max\)</span> <span class="math display">\[LCM(x,y) = \prod P_i^{max(P_{xi}, P_{yi})}\]</span> 也就说如果对于<span class="math inline">\(GCD(a_i,V)\)</span>的一个素因子<span class="math inline">\(P_i\)</span>来说，如果<span class="math inline">\(P_{ai} &gt; P_{xi}\)</span>, 那么<span class="math inline">\(P_{Vi} = P_{xi}\)</span>, 否则就无所谓</p><p>反过来如果对于<span class="math inline">\(LCM(a_j,V)\)</span>的一个素因子<span class="math inline">\(P_i\)</span>来说，如果 <span class="math inline">\(P_{ai} &lt; P_{yi}\)</span>,那么<span class="math inline">\(P_{Vi}=P_{yi}\)</span>。</p><p>至此我们可以这样看，对于每一个素因子<span class="math inline">\(P_i\)</span>,设<span class="math inline">\(l=P_{xi},r=P_{yi}\)</span> 如果<span class="math inline">\(P_{ai}==l||P_{aj}==r\)</span>则存在这样的一个素因子, 特别的如果<span class="math inline">\(l==r\)</span>也一定会存在一个这样的素因子，当对于每一个素因子都成立时就存在一个<span class="math inline">\(V\)</span>, 因为一个值域为<span class="math inline">\(10^{18}\)</span>的数，至多有<span class="math inline">\(15\)</span>个<strong>不同</strong>的素因子, 所以我们可以直接搞一个二进制来表示一下对于每个素因子的状态，我们这样表示，如果对于一个素因子成立就把这一位设为<span class="math inline">\(1\)</span>，所以对于每个<span class="math inline">\(a_i\)</span>他都有两个二进制<span class="math inline">\(l_i\)</span>和<span class="math inline">\(r_i\)</span>,最后要我们求的问题就可以转化为，从一个序列中取<span class="math inline">\(i,j\)</span>使得<span class="math inline">\(l_i|r_j==(1&lt;&lt;15)-1\)</span>,但这样表示不太好看我们把不成立设为<span class="math inline">\(1\)</span>, 最后就是<span class="math inline">\(l_i \&amp; r_i==0\)</span> , 最后就是怎么算，官方题解给的是<span class="math inline">\(n\cdot2^n\)</span>，但是我并不会。<del>我太菜辣</del></p><p>最后就是关于<span class="math inline">\(X,Y\)</span>的素因数的分解，这里我用的是<span class="math inline">\(Pollard-rho\)</span>算法，由于数据很毒瘤，这里一定要用龟速乘才能过，不然会爆</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">LL minv[<span class="number">1</span> &lt;&lt; <span class="number">16</span>];</span><br><span class="line">LL numx[<span class="number">15</span>], numy[<span class="number">15</span>];</span><br><span class="line">LL n, a[maxn], x, y, A, B, facy[<span class="number">15000</span>], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar(); LL u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">gcd</span><span class="params">(LL x, LL y)</span></span>&#123;<span class="keyword">return</span> y == <span class="number">0</span> ? x : gcd(y, x % y);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">mul</span><span class="params">(LL x, LL y, LL p)</span></span>&#123;</span><br><span class="line">    LL cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(y)&#123;</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>)cnt = (cnt + x) % p;</span><br><span class="line">        x = (x + x) % p; y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">ksm</span><span class="params">(LL x, LL k, LL p)</span></span>&#123;</span><br><span class="line">    LL cnt = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(k)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k &amp; <span class="number">1</span>)cnt = mul(cnt, x, p);</span><br><span class="line">        x = mul(x, x, p); k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">judge</span><span class="params">(LL a, LL p)</span></span>&#123;</span><br><span class="line">    LL q = p - <span class="number">1</span>; <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(q % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        ++k, q &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    LL v = ksm(a, q, p);</span><br><span class="line">    <span class="keyword">if</span>(v == <span class="number">1</span> || v == p - <span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span>(k-- != <span class="number">0</span>)&#123;</span><br><span class="line">        v = mul(v, v, p);</span><br><span class="line">        <span class="keyword">if</span>(v == p - <span class="number">1</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">miller_rabbin</span><span class="params">(LL p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p == <span class="number">2</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(p % <span class="number">2</span> == <span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">60</span>; i++)&#123;</span><br><span class="line">        LL a = rand() % (p - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(judge(a, p))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = (<span class="number">1</span> &lt;&lt; <span class="number">7</span>) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">pollard_rho</span><span class="params">(LL n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">3</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    LL x = <span class="number">0</span>, y = x, t = <span class="number">1</span>, q = <span class="number">1</span>, a = (rand() % (n - <span class="number">1</span>)) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">2</span>;; k &lt;&lt;= <span class="number">1</span>, y = x, q = <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; ++i) &#123;</span><br><span class="line">            x = (mul(x, x, n) + a) % n;</span><br><span class="line">            q = mul(q, <span class="built_in">abs</span>(x - y), n);</span><br><span class="line">            <span class="keyword">if</span> (!(i &amp; M)) &#123;</span><br><span class="line">                t = gcd(q, n);</span><br><span class="line">                <span class="keyword">if</span> (t &gt; <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (t &gt; <span class="number">1</span> || (t = gcd(q, n)) &gt; <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t == n) &#123;</span><br><span class="line">        t = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (t == <span class="number">1</span>) t = gcd(<span class="built_in">abs</span>((x = ((mul(x, x, n) + a) % n)) - y), n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">findfac</span><span class="params">(LL x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(miller_rabbin(x))&#123;facy[++facy[<span class="number">0</span>]] = x; <span class="keyword">return</span>;&#125;</span><br><span class="line">    LL p = x;</span><br><span class="line">    <span class="keyword">while</span>(p &gt;= x)p = pollard_rho(p);</span><br><span class="line">    findfac(p);</span><br><span class="line">    findfac(x / p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 0 133056495 897612484786617600</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dEBUG</span><span class="params">(LL *x, LL len)</span></span>&#123;</span><br><span class="line"><span class="built_in">cerr</span> &lt;&lt; <span class="string">"----------------------------------DEBUG----------------------------------"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= len; i++)</span><br><span class="line"><span class="built_in">cerr</span> &lt;&lt; x[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cerr</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cerr</span> &lt;&lt; <span class="string">"----------------------------------DEBUG----------------------------------"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">srand(<span class="number">19260817</span>);</span><br><span class="line">n = read(); A = x = read(); B = y = read();</span><br><span class="line"><span class="keyword">if</span>(y % x != <span class="number">0</span>)&#123;<span class="built_in">cout</span> &lt;&lt; <span class="number">0</span>; <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)a[i] = read();</span><br><span class="line">    findfac(B);</span><br><span class="line">    sort(facy + <span class="number">1</span>, facy + <span class="number">1</span> + facy[<span class="number">0</span>]);</span><br><span class="line">    facy[<span class="number">0</span>] = unique(facy + <span class="number">1</span>, facy + <span class="number">1</span> + facy[<span class="number">0</span>]) - facy - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= facy[<span class="number">0</span>]; i++)</span><br><span class="line"><span class="keyword">while</span>(B % facy[i] == <span class="number">0</span>)B /= facy[i], numy[i]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= facy[<span class="number">0</span>]; i++)</span><br><span class="line"><span class="keyword">while</span>(A % facy[i] == <span class="number">0</span>)A /= facy[i], numx[i]++;</span><br><span class="line"><span class="comment">//dEBUG(facy, facy[0]);</span></span><br><span class="line"><span class="comment">//dEBUG(numx, facy[0]);</span></span><br><span class="line"><span class="comment">//dEBUG(numy, facy[0]);</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] % x != <span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> maskx = <span class="number">0</span>; LL T = a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= facy[<span class="number">0</span>]; k++)&#123;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(numx[k] == numy[k])<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">while</span>(T % facy[k] == <span class="number">0</span>)T /= facy[k], p++;</span><br><span class="line">maskx |= ((p &gt; numx[k]) &lt;&lt; (k - <span class="number">1</span>));</span><br><span class="line">&#125; minv[maskx]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; facy[<span class="number">0</span>]; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> G = <span class="number">0</span>; G &lt; (<span class="number">1</span> &lt;&lt; facy[<span class="number">0</span>]); G++)</span><br><span class="line"><span class="keyword">if</span>(G &amp; (<span class="number">1</span> &lt;&lt; i))minv[G] += minv[G ^ (<span class="number">1</span> &lt;&lt; i)];</span><br><span class="line"><span class="keyword">int</span> MK = (<span class="number">1</span> &lt;&lt; facy[<span class="number">0</span>]) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(y % a[i] != <span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> masky = <span class="number">0</span>; LL T = a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= facy[<span class="number">0</span>]; k++)&#123;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(T % facy[k] == <span class="number">0</span>)T /= facy[k], p++;</span><br><span class="line">masky |= ((p &lt; numy[k]) &lt;&lt; (k - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">ans += minv[masky ^ MK];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//dEBUG(minv, n); dEBUG(maxv, n);</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Summary</strong>:读懂题目很重要，打代码之前想清楚为什么，不要不懂装懂，打完就完事了</p><p><strong><em>Thinck Twice, Code once.</em></strong></p>]]></content>
      
      <categories>
          
          <category> CodeForces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> Hash </tag>
            
            <tag> KMP </tag>
            
            <tag> Greedy </tag>
            
            <tag> 计算几何 </tag>
            
            <tag> Pollard-rho </tag>
            
            <tag> 状态压缩 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CodeForcesRound499(Div.2)</title>
      <link href="/2018/07/31/CodeforcesRound499(Div.2)/"/>
      <url>/2018/07/31/CodeforcesRound499(Div.2)/</url>
      <content type="html"><![CDATA[<p><img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/J0RvZndfXntDHHLATTq4z3BasJgRnYqMjneN8CqRnfk!/r/dGEBAAAAAAAA"> <a id="more"></a></p><h1 id="codeforces-round-499-div.2"><a href="https://codeforc.es/contest/1011" target="_blank" rel="noopener">Codeforces Round #499 (Div.2)</a></h1><h2 id="a.-stages">A. <a href="https://codeforc.es/contest/1011/problem/A" target="_blank" rel="noopener">Stages</a></h2><p>题目大意：给你一个长度为<span class="math inline">\(n\)</span>的字符串， 让你从其中拿出<span class="math inline">\(k\)</span>个字符， 要求权值最小， 并且拿出的<span class="math inline">\(k\)</span>个字符中，至少要有一个间隔</p><p>题解： 直接将字符串<span class="math inline">\(sort\)</span>一下就好了，每次间隔一个取， 如果能取足<span class="math inline">\(k\)</span>个那么就是满足条件的，否则就输出<span class="math inline">\(-1\)</span></p><p>PS : 这里的间隔取不是指的字母在序列中的位置，而是在<span class="math inline">\(26\)</span>个字母中的位置</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e2</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, k, ans;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%s"</span>, &amp;n, &amp;k, s + <span class="number">1</span>);</span><br><span class="line">sort(s + <span class="number">1</span>, s + <span class="number">1</span> + n); <span class="keyword">int</span> p = <span class="number">1</span>, l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(k &amp;&amp; p &lt;= n)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[p] - s[l] &gt;= <span class="number">2</span>)&#123;</span><br><span class="line">ans += s[p] - <span class="string">'a'</span> + <span class="number">1</span>;</span><br><span class="line">k--; l = p;</span><br><span class="line">&#125; p++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k)<span class="built_in">cout</span> &lt;&lt; <span class="string">"-1"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="b.-planning-the-expedition">B. <a href="https://codeforc.es/contest/1011/problem/B" target="_blank" rel="noopener">Planning The Expedition</a></h2><p>题目大意： 你有一些物品，每个物品都只有若干个，有<span class="math inline">\(n\)</span>个人， 每个人只能吃同种物品，并且每天只吃一个，问你<span class="math inline">\(n\)</span>个人最多能吃几天</p><p>题解： 我们考虑直接二分一个天数<span class="math inline">\(mid\)</span>，线性扫描所有物品，每种物品的数量<span class="math inline">\(k_i\)</span>, 有<span class="math inline">\(m\)</span>种物品，则<span class="math inline">\(cnt = \sum_{i=1}^m\lfloor \frac{k_i}{mid} \rfloor\)</span>, 如果最后<span class="math inline">\(n\)</span> <span class="math inline">\(\leq\)</span> <span class="math inline">\(cnt\)</span>，就成立，否则不成立</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, a[maxn], bac[maxn], tmp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">x -= bac[i] / mid;</span><br><span class="line"><span class="keyword">return</span> x &lt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">binary</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(check(mid))l = mid + <span class="number">1</span>, ans = mid;</span><br><span class="line"><span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read(); m = read();</span><br><span class="line"><span class="keyword">if</span>(n &gt; m)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"0"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)bac[a[i] = read()]++;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; binary(<span class="number">1</span>, <span class="number">1000</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="c.-fly">C. <a href="https://codeforc.es/contest/1011/problem/C" target="_blank" rel="noopener">Fly</a></h2><p>题目大意： 你有一架飞机，质量为<span class="math inline">\(m\)</span>, 要求从<span class="math inline">\(1\)</span>好星球飞到<span class="math inline">\(n\)</span>星球, 在每个星球起飞或者降落都有一个系数<span class="math inline">\(k_i\)</span>, 起飞的耗油量为起飞前飞机质量和油的质量的和除以<span class="math inline">\(k_i\)</span>, 问你最少需要带多少油</p><p>题解： 再次考虑二分答案， 直接按照题目的意思模拟一下，判断最后的剩余的质量是否大于飞机的质量<span class="math inline">\(m\)</span></p><p>PS: 注意精度问题, <span class="math inline">\(eps = 1e-8\)</span>即可， 否则会可能会<span class="math inline">\(T\)</span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> m, a[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> mid)</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> now = m + mid;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">now -= now / a[i];</span><br><span class="line">now -= now / b[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">now -= now / a[n];</span><br><span class="line">now -= now / b[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> now + eps &gt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">binary</span><span class="params">(<span class="keyword">double</span> l, <span class="keyword">double</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> mid = (l + r) / <span class="number">2</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r + eps)&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(check(mid))r = mid - eps, ans = mid;</span><br><span class="line"><span class="keyword">else</span> l = mid + eps;</span><br><span class="line">&#125; <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(a[i] &lt;= <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"-1"</span>; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;b[i]);</span><br><span class="line"><span class="keyword">if</span>(b[i] &lt;= <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"-1"</span>; <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.9lf"</span>, binary(<span class="number">0</span>, <span class="keyword">double</span>(inf)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="d.-rocket">D. <a href="https://codeforc.es/contest/1011/problem/D" target="_blank" rel="noopener">Rocket</a></h2><p>题目大意：一道交互题， 要你猜一个数字<span class="math inline">\(x\)</span><span class="math inline">\((x \leq m)\)</span>， <span class="math inline">\(m\)</span>给出，并且回答机制是一种循环， 我们知道这个循环的长度为<span class="math inline">\(n\)</span><span class="math inline">\((n \leq 30)\)</span>, 这个序列是一个<span class="math inline">\(01\)</span>序列， 如果是<span class="math inline">\(0\)</span>那么回答的就是假话，是<span class="math inline">\(1\)</span>回答的就是真话，要求最多询问六十次，求出这个数字</p><p>题解： 首先我们可以用<span class="math inline">\(n\)</span>次询问确定这个<span class="math inline">\(01\)</span>序列，然后再用剩余询问次数确定这个数字，我们的前<span class="math inline">\(n\)</span>次询问每次都问<span class="math inline">\(m\)</span>, 如果问答大于就是说谎， 否则就是真话， 那么通过<span class="math inline">\(n\)</span>次询问，<span class="math inline">\(01\)</span>序列就确定下来了，然后就是普通的二分了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid, <span class="keyword">int</span> tot)</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; mid &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">if</span>(t == <span class="number">0</span>)<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (a[(tot % n == <span class="number">0</span>) ? n : tot % n] == <span class="number">0</span>) t = -t;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line"><span class="keyword">if</span>(t == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t == <span class="number">-1</span>)a[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> a[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = m, mid = (l + r) / <span class="number">2</span>, tot = n;</span><br><span class="line"><span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> t = check(mid, ++tot);</span><br><span class="line"><span class="keyword">if</span>(t == <span class="number">-1</span>) r = mid - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="e.-border">E. <a href="https://codeforc.es/contest/1011/problem/E" target="_blank" rel="noopener">Border</a></h2><p>题目大意：我们有<span class="math inline">\(n\)</span>种物品，每种物品都有一个价值<span class="math inline">\(val_i\)</span>, 并且都可以无限选择，问你在模<span class="math inline">\(k\)</span>的意义下能够组成多少种不同的价值, 输出种类数， 并且输出方案</p><p>题解：由<span class="math inline">\(n\)</span>个数的斐蜀定理可知，<span class="math inline">\(\sum_{i=1}^n a_ix_i = p \cdot gcd \{ x_i\}\)</span> , 假如我们有三个物品 <span class="math inline">\(a_1x_1 + a_2x_2 +a_3x_3 = p\cdot gcd\{x_1, x_2, x_3\}\)</span> , 这里的<span class="math inline">\(a_i\)</span>可以为负数，但是题目中必须得选非负数个那我们转换一下</p><p><span class="math inline">\(a_1x_1 +a_2x_2 +a_3x_3\)</span> 和 <span class="math inline">\(a_1x_1 + a_2x_2 + a_3x_3 + a_1&#39; \cdot kx_1 + a_2&#39; \cdot kx_2 + a_3&#39; \cdot kx_3\)</span> 在模<span class="math inline">\(k\)</span> 的意义下是一样的所以这个定理在模意义下是可以用的， 所以本题就很简单了，答案就是<span class="math inline">\(t \cdot gcd\{x_i\}, t \in [0,n]\)</span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, t, k;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> y == <span class="number">0</span> ? x : gcd(y, x % y);&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;st;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read(); k = read(); t = read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        t = gcd(t, read());</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">        st.insert((i * t) % k);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; st.size() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; :: iterator iter = st.begin(); iter != st.end(); iter++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (*iter) &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="f.-mars-rover">F. <a href="https://codeforc.es/contest/1011/problem/F" target="_blank" rel="noopener">Mars rover</a></h2><p>题目大意：我们有一棵二叉树，在所有的非叶子节点上有一个二进制运算符，由每个叶子节点向上合并到根节点可以得到一个值，问你修改每一个叶子节点的值时最后的答案是多少(每个叶子节点的权值都是<span class="math inline">\(0\)</span>或<span class="math inline">\(1\)</span>)，</p><p>题解：一遍<span class="math inline">\(dfs\)</span>求出一开始的答案，再用一次<span class="math inline">\(dfs\)</span>求出每次修改一个节点的权值会不会影响答案，关键是第二次<span class="math inline">\(dfs\)</span>怎么写，我们考虑除了&quot;与&quot;和&quot;或&quot;其他的二进制运算符只要改变其儿子节点的权值就会改变自己的权值，既然知道了这一点我们特判一下就好了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, ch[maxn][<span class="number">2</span>], ok[maxn], w[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn][<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); <span class="keyword">int</span> u = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))&#123;<span class="keyword">if</span>(ch == <span class="string">'-'</span>)f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))&#123;u = u * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125; <span class="keyword">return</span> u * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> x0, <span class="keyword">int</span> x1)</span></span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(s[now][<span class="number">1</span>])&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'A'</span>: <span class="keyword">return</span> x0 &amp; x1;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'O'</span>: <span class="keyword">return</span> x0 | x1;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'X'</span>: <span class="keyword">return</span> x0 ^ x1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(~w[now])<span class="keyword">return</span> w[now];</span><br><span class="line"><span class="keyword">if</span>(s[now][<span class="number">1</span>] == <span class="string">'N'</span>)<span class="keyword">return</span> w[now] = dfs(ch[now][<span class="number">0</span>]) ^ <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> w[now] = check(now, dfs(ch[now][<span class="number">0</span>]), dfs(ch[now][<span class="number">1</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now, <span class="keyword">int</span> de)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s[now][<span class="number">1</span>] == <span class="string">'N'</span>)&#123;</span><br><span class="line">ok[now] = de &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[ch[now][<span class="number">0</span>]][<span class="number">1</span>] != <span class="string">'I'</span>)dfs(ch[now][<span class="number">0</span>], ok[now]);</span><br><span class="line"><span class="keyword">else</span> ok[ch[now][<span class="number">0</span>]] = ok[now];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[now][<span class="number">1</span>] == <span class="string">'X'</span>)&#123;</span><br><span class="line">ok[now] = de &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[ch[now][<span class="number">0</span>]][<span class="number">1</span>] != <span class="string">'I'</span>)dfs(ch[now][<span class="number">0</span>], ok[now]);</span><br><span class="line"><span class="keyword">else</span> ok[ch[now][<span class="number">0</span>]] = ok[now];</span><br><span class="line"><span class="keyword">if</span>(s[ch[now][<span class="number">1</span>]][<span class="number">1</span>] != <span class="string">'I'</span>)dfs(ch[now][<span class="number">1</span>], ok[now]);</span><br><span class="line"><span class="keyword">else</span> ok[ch[now][<span class="number">1</span>]] = ok[now];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[now][<span class="number">1</span>] == <span class="string">'O'</span>)&#123;</span><br><span class="line">ok[now] = de &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[ch[now][<span class="number">0</span>]][<span class="number">1</span>] != <span class="string">'I'</span>)dfs(ch[now][<span class="number">0</span>], ok[now] &amp; (w[ch[now][<span class="number">1</span>]] != <span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> ok[ch[now][<span class="number">0</span>]] = ok[now] &amp; (w[ch[now][<span class="number">1</span>]] != <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(s[ch[now][<span class="number">1</span>]][<span class="number">1</span>] != <span class="string">'I'</span>)dfs(ch[now][<span class="number">1</span>], ok[now] &amp; (w[ch[now][<span class="number">0</span>]] != <span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> ok[ch[now][<span class="number">1</span>]] = ok[now] &amp; (w[ch[now][<span class="number">0</span>]] != <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[now][<span class="number">1</span>] == <span class="string">'A'</span>)&#123;</span><br><span class="line">ok[now] = de &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[ch[now][<span class="number">0</span>]][<span class="number">1</span>] != <span class="string">'I'</span>)dfs(ch[now][<span class="number">0</span>], ok[now] &amp; (w[ch[now][<span class="number">1</span>]] == <span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> ok[ch[now][<span class="number">0</span>]] = ok[now] &amp; (w[ch[now][<span class="number">1</span>]] == <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(s[ch[now][<span class="number">1</span>]][<span class="number">1</span>] != <span class="string">'I'</span>)dfs(ch[now][<span class="number">1</span>], ok[now] &amp; (w[ch[now][<span class="number">0</span>]] == <span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> ok[ch[now][<span class="number">1</span>]] = ok[now] &amp; (w[ch[now][<span class="number">0</span>]] == <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = read();</span><br><span class="line"><span class="built_in">memset</span>(w, <span class="number">-1</span>, <span class="keyword">sizeof</span>(w));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i] + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(s[i][<span class="number">1</span>] == <span class="string">'I'</span>)w[i] = read();</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i][<span class="number">1</span>] == <span class="string">'A'</span> || s[i][<span class="number">1</span>] == <span class="string">'X'</span> || s[i][<span class="number">1</span>] == <span class="string">'O'</span>)</span><br><span class="line">ch[i][<span class="number">0</span>] = read(), ch[i][<span class="number">1</span>] = read();</span><br><span class="line"><span class="keyword">else</span> ch[i][<span class="number">0</span>] = read();</span><br><span class="line">&#125; w[<span class="number">1</span>] = dfs(<span class="number">1</span>); dfs(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span>(s[i][<span class="number">1</span>] == <span class="string">'I'</span>)<span class="built_in">printf</span>(<span class="string">"%d"</span>, w[<span class="number">1</span>] ^ ok[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Summary : <del>水题集合</del></p>]]></content>
      
      <categories>
          
          <category> CodeForces </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 斐蜀定理 </tag>
            
            <tag> dfs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>NOIP2017TG Solution</title>
      <link href="/2017/11/12/NOIP2017%E9%A2%98%E8%A7%A3/"/>
      <url>/2017/11/12/NOIP2017%E9%A2%98%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p><span class="math inline">\(Naive\)</span>选手爆零记 <img src="http://r.photo.store.qq.com/psb?/V12wIROa0MTsCi/BLq7XBuIeMPeTY*n.rzz8dfbNeInAwd.h0XLFoj59VI!/r/dDABAAAAAAAA"></p><a id="more"></a><h2 id="noip2017-d1t1小凯的疑惑"><a href="https://www.luogu.org/problemnew/show/3951" target="_blank" rel="noopener">NOIP2017 D1T1小凯的疑惑</a></h2><p><a href="https://www.luogu.org/problemnew/show/2737" target="_blank" rel="noopener">luogu P2737</a>麦香牛块Beef McNuggets 原题弱化版。</p><p>数论题，个人感觉并没有什么意义（在NOIP上考）既不考查代码能力，也只会增加其他人的翻车几率（逃 <strong>代码如下：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(n<span class="number">-1</span>)*(m<span class="number">-1</span>)<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这边给出证明。</p><p>定理: 对于正整数<span class="math inline">\(p,q\)</span>满足<span class="math inline">\(gcd(p,q)=1\)</span>,我们有<span class="math inline">\(px+qy=n\)</span>无非负整数解的最大正整数<span class="math inline">\(n\)</span>为<span class="math inline">\(pq−p−q\)</span>. 证明如下:</p><p>我们首先利用反证法, 证明<span class="math inline">\(px + qy \ne pq - p - q\)</span>: 我们假设存在正整数<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>使得<span class="math inline">\(px + qy = pq - p - q\)</span>, 则有</p><p><span class="math display">\[px + qy = pq - p - q\]</span> <span class="math display">\[p(x + 1) + q(y + 1) = p\]</span> <span class="math display">\[\because gcd(p, q) = 1,p | q(y + 1)\]</span> <span class="math display">\[\therefore p | y + 1 \]</span> 同理, <span class="math display">\[q | x + 1\]</span> 接着我们令<span class="math inline">\(y + 1 = pj\)</span>,$ x + 1 = qk$. 则有</p><p><span class="math display">\[pqk + qpj = pq \]</span> <span class="math display">\[pq(j + k) = pq\]</span> 注意到<span class="math inline">\(x, y \ge 0\)</span>, 我们有<span class="math inline">\(y + 1 \ge 1\)</span>且<span class="math inline">\(x + 1 \ge 1\)</span>, 因而<span class="math inline">\(j \ge 1\)</span>且<span class="math inline">\(k \ge 1\)</span>. 因而<span class="math inline">\(j + k \ge 2\)</span>, 因而假设不成立.</p><p>得证.</p><p><a href="https://www.luogu.org/wiki/show?name=%E9%A2%98%E8%A7%A3+P3951" target="_blank" rel="noopener">证明转自</a></p><h2 id="noip2017-d1t2时间复杂度"><a href="https://www.luogu.org/problemnew/show/3952" target="_blank" rel="noopener">NOIP2017 D1T2时间复杂度</a></h2><p>看到这道题就心疼，NOIP的时候并没有写出来，可能是因为并没有学栈的原因，所以当时没有写出来，今天学长们讲了栈，我就来把这道题A了 学长们还说递归可以A来着，<sub>好像还很简单</sub> <strong>思路</strong>： 好像并没有什么思路，就是遇到<span class="math inline">\(F\)</span>就就压栈，遇到<span class="math inline">\(E\)</span>就把最上层的栈弹出，大概像循环嵌套，括号匹配，表达式求值都可以用栈实现吧！ <strong>传送门</strong>：<a href="https://www.luogu.org/problemnew/show/1981" target="_blank" rel="noopener">NOIP2013普及组 表达式求值</a>,<a href="https://www.luogu.org/problemnew/show/1054" target="_blank" rel="noopener">NOIP2005提高组T4 等价表达式</a>(毒瘤题，数据很鬼畜) <strong>代码如下</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> ans[<span class="number">11</span>][<span class="number">20</span>],e[<span class="number">11</span>][<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> T,judge[<span class="number">1</span>&lt;&lt;<span class="number">9</span>],deepth,is[<span class="number">1</span>&lt;&lt;<span class="number">9</span>],top,maxdeepth,fff,ff;</span><br><span class="line"><span class="comment">//ff是一个标记，来记录是否有重读的变量</span></span><br><span class="line"><span class="comment">//fff也是一个标记，用于记录一个循环的初始值大于结束值的请况</span></span><br><span class="line"><span class="comment">//top表示当前栈指向哪一层</span></span><br><span class="line"><span class="comment">//maxdeepth用来记录此程序的循环嵌套的最大层数</span></span><br><span class="line"><span class="comment">//deepth用于更新</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> num[<span class="number">11</span>][<span class="number">110</span>][<span class="number">5</span>],x;</span><br><span class="line"><span class="keyword">int</span> L,a,b,len,lennum,realdeepth;</span><br><span class="line"><span class="comment">//realdeepth就是输入所给的复杂度</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="keyword">int</span> is,isdi,deep;&#125;st[<span class="number">11</span>][<span class="number">110</span>];</span><br><span class="line"><span class="comment">//一个手写结构体的栈，用来记录状态</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("complexity.in","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("complexity.out","w",stdout);</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;L);getchar();len=<span class="number">0</span>;realdeepth=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">char</span> s=getchar();</span><br><span class="line">            <span class="keyword">if</span>(s==<span class="string">'\n'</span>)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(s&gt;=<span class="string">'0'</span>&amp;&amp;s&lt;=<span class="string">'9'</span>)realdeepth=realdeepth*<span class="number">10</span>+s-<span class="string">'0'</span>;<span class="comment">//算realdeepth</span></span><br><span class="line">            ans[i][++len]=s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//memset(st,0,sizeof(st));</span></span><br><span class="line">        <span class="built_in">memset</span>(judge,<span class="number">0</span>,<span class="keyword">sizeof</span>(judge));</span><br><span class="line">        <span class="built_in">memset</span>(is,<span class="number">0</span>,<span class="keyword">sizeof</span>(is));</span><br><span class="line">        ff=<span class="number">0</span>;top=<span class="number">0</span>;maxdeepth=<span class="number">0</span>;deepth=<span class="number">0</span>;fff=<span class="number">1</span>;a=<span class="number">0</span>;b=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//每一组数据都要初始化所有的标记，不要忘</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=L;j++)&#123;</span><br><span class="line">            len=<span class="number">0</span>;x=<span class="number">0</span>;lennum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">char</span> s=getchar();</span><br><span class="line">                <span class="keyword">if</span>(s!=<span class="string">'\n'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(s&gt;=<span class="string">'0'</span>&amp;&amp;s&lt;=<span class="string">'9'</span>)e[i][j][++len]=s,x=x*<span class="number">10</span>+s-<span class="string">'0'</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>((s&gt;=<span class="string">'a'</span>&amp;&amp;s&lt;=<span class="string">'z'</span>&amp;&amp;s!=<span class="string">'n'</span>)||(s&lt;=<span class="string">'Z'</span>&amp;&amp;s&gt;=<span class="string">'A'</span>))e[i][j][++len]=s;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(s==<span class="string">'n'</span>)e[i][j][++len]=s,x=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;<span class="comment">//n就标记为（1&lt;&lt;30）</span></span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(s==<span class="string">' '</span>)&#123;</span><br><span class="line">                        e[i][j][++len]=s;</span><br><span class="line">                        <span class="keyword">if</span>(x)num[i][j][++lennum]=x,x=<span class="number">0</span>;</span><br><span class="line">                        <span class="comment">//我是直接把循环中的两个值提取出来了，用整形来存比较好用</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s==<span class="string">'\n'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(x)num[i][j][++lennum]=x,x=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(e[i][j][<span class="number">1</span>]==<span class="string">'E'</span>)a++;<span class="comment">//预判ERR</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(e[i][j][<span class="number">1</span>]==<span class="string">'F'</span>)b++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a!=b)&#123;<span class="built_in">printf</span>(<span class="string">"ERR\n"</span>);<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=L;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(e[i][j][<span class="number">1</span>]==<span class="string">'F'</span>)&#123;</span><br><span class="line">                st[i][++top].isdi=e[i][j][<span class="number">3</span>];</span><br><span class="line">                st[i][top].deep=deepth;<span class="comment">//记录入栈时的deepth</span></span><br><span class="line">                <span class="keyword">if</span>(judge[e[i][j][<span class="number">3</span>]])ff=<span class="number">1</span>;<span class="comment">//重复就记录</span></span><br><span class="line">                <span class="keyword">else</span> judge[e[i][j][<span class="number">3</span>]]=<span class="number">1</span>;<span class="comment">//标记变量</span></span><br><span class="line">                <span class="keyword">if</span>(ff)<span class="keyword">break</span>;<span class="comment">//退出循环</span></span><br><span class="line">                <span class="keyword">if</span>(num[i][j][<span class="number">1</span>]!=(<span class="number">1</span>&lt;&lt;<span class="number">30</span>))&#123;<span class="comment">//判断两个变量的初始值和末状态值</span></span><br><span class="line">                    <span class="keyword">if</span>(num[i][j][<span class="number">2</span>]&gt;=num[i][j][<span class="number">1</span>]&amp;&amp;num[i][j][<span class="number">2</span>]!=(<span class="number">1</span>&lt;&lt;<span class="number">30</span>))st[i][top].is=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(num[i][j][<span class="number">2</span>]&lt;num[i][j][<span class="number">1</span>]&amp;&amp;num[i][j][<span class="number">2</span>]!=(<span class="number">1</span>&lt;&lt;<span class="number">30</span>))st[i][top].is=<span class="number">-1</span>;</span><br><span class="line">                    <span class="comment">//记录一个循环的初始值大于结束值的请况，且is=-1</span></span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(num[i][j][<span class="number">2</span>]==(<span class="number">1</span>&lt;&lt;<span class="number">30</span>))st[i][top].is=<span class="number">2</span>;<span class="comment">//不是常数的话is为2</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(num[i][j][<span class="number">1</span>]==(<span class="number">1</span>&lt;&lt;<span class="number">30</span>))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(num[i][j][<span class="number">2</span>]!=(<span class="number">1</span>&lt;&lt;<span class="number">30</span>))st[i][top].is=<span class="number">-1</span>;<span class="comment">//同理</span></span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(num[i][j][<span class="number">2</span>]==(<span class="number">1</span>&lt;&lt;<span class="number">30</span>))st[i][top].is=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(st[i][top].is==<span class="number">-1</span>)fff--;</span><br><span class="line">                <span class="comment">//把标记--，应为有可能多层都是不合法的循环（我一开始就是被这个坑了，结果debug了好长时间）</span></span><br><span class="line">                <span class="keyword">if</span>(st[i][top].is==<span class="number">2</span>&amp;&amp;fff==<span class="number">1</span>)deepth++;<span class="comment">//合法就更新deepth</span></span><br><span class="line">                maxdeepth=max(maxdeepth,deepth);<span class="comment">//看是否可以更新maxdeepth</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(e[i][j][<span class="number">1</span>]==<span class="string">'E'</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(st[i][top].is==<span class="number">-1</span>)fff++;</span><br><span class="line">                judge[st[i][top].isdi]=<span class="number">0</span>;</span><br><span class="line">                deepth=st[i][top].deep;</span><br><span class="line">                top--;</span><br><span class="line">                <span class="comment">//还原所有的标记，有点像递归回溯</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ff)&#123;<span class="built_in">printf</span>(<span class="string">"ERR\n"</span>);<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span>(ans[i][<span class="number">3</span>]==<span class="string">'n'</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(realdeepth==maxdeepth)<span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ans[i][<span class="number">3</span>]&gt;=<span class="string">'0'</span>&amp;&amp;ans[i][<span class="number">3</span>]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(maxdeepth==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最后判断输出就没有什么好说的了</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="noip2017-d2t1奶酪"><a href="https://www.luogu.org/problemnew/show/3958" target="_blank" rel="noopener">NOIP2017 D2T1奶酪</a></h2><p>这题嘛其实跟luogu上的一道题很像，因为被那道题卡了很久所以NOIp一下就想到了，但那道题是一个二维的，这个题改成了三维，这个几乎上是没有什么影响的，就是距离公式变了而已，还有就是那道题是要构造最小生成树，而NOIp的这道只用判断两个边界是否联通就好了，其实NOIp的比luogu上的这道还好写一些<a href="https://www.luogu.org/problemnew/show/1783" target="_blank" rel="noopener">传送门 P1783 海滩防御</a></p><p>主要思路</p><blockquote><p>将所有点都存入一个数组，然后把两个边界都存进去，然后跑一个<span class="math inline">\(N^2\)</span> 就行了，这里就不多赘述，具体的细节处理见代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &lt;ctime&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">int T,n,h,r,fa[1100];</span><br><span class="line">struct node&#123;int x,y,z;&#125;t[21][1100];</span><br><span class="line">int findx(int x)&#123;</span><br><span class="line">    if(fa[x]==x)return fa[x];</span><br><span class="line">    return fa[x]=findx(fa[x]);//并查集压缩路径（mmp考试的时候太紧张了把压缩路径敲掉了，直接return findx(fa[x])掉了50分还是60分，心疼啊！！所以压缩路径一定不能掉）</span><br><span class="line">&#125;</span><br><span class="line">void mergex(int x,int y)&#123;fa[findx(x)]=findx(y);&#125;//合并函数</span><br><span class="line">double dis(int x,int y,int z,int x2,int y2,int z2)&#123;</span><br><span class="line">    ll disx,disy,disz;</span><br><span class="line">    disx=(ll)(x-x2)*(x-x2);disy=(ll)(y-y2)*(y-y2);disz=(ll)(z-z2)*(z-z2);</span><br><span class="line">    return sqrt(disx+disz+disy);</span><br><span class="line">&#125;</span><br><span class="line">//这个是求两点之间距离的函数，值得一提的是这个函数要用到开方，但是开方的运算量是很大的，也就是常数很大，要是出题人搞几组毒瘤数据估计又要死一片（比如说我），所以你可以改成return 一个乘积，代码我也会贴到下面（不过是我高二学长的）</span><br><span class="line">int main()&#123;</span><br><span class="line">    //freopen(&quot;cheese.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">    //freopen(&quot;cheese.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;T);</span><br><span class="line">    for(int i=1;i&lt;=T;i++)&#123;</span><br><span class="line">        scanf(&quot;%d%d%d&quot;,&amp;n,&amp;h,&amp;r);</span><br><span class="line">        for(int j=0;j&lt;=n+1;j++)fa[j]=j;</span><br><span class="line">        for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">            int x,y,z;scanf(&quot;%d%d%d&quot;,&amp;x,&amp;y,&amp;z);</span><br><span class="line">            t[i][j].x=x;t[i][j].y=y;t[i][j].z=z;</span><br><span class="line">        &#125;t[i][n+1].z=h;</span><br><span class="line">        for(int j=0;j&lt;=n+1;j++)</span><br><span class="line">            for(int k=0;k&lt;=n+1;k++)&#123;</span><br><span class="line">                int x,y,z,x2,y2,z2,disr=r*2;</span><br><span class="line">                x=t[i][j].x;y=t[i][j].y;z=t[i][j].z;</span><br><span class="line">                x2=t[i][k].x;y2=t[i][k].y;z2=t[i][k].z;</span><br><span class="line">                if(j==0||j==n+1)&#123;x=x2,y=y2;disr=r;&#125;//边界特判</span><br><span class="line">                if(k==0||k==n+1)&#123;x2=x,y2=y;disr=r;&#125;//边界特判</span><br><span class="line">                double dist=dis(x,y,z,x2,y2,z2);</span><br><span class="line">                if(dist&lt;=disr)mergex(j,k);//如果可以就合并然后</span><br><span class="line">            &#125;</span><br><span class="line">        if(findx(0)==findx(n+1))printf(&quot;Yes\n&quot;);//如果联通就输出</span><br><span class="line">        else printf(&quot;No\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS：我这个代码一看就很low，也很慢跑了800多ms，下面再来看看我学长的代码，这个只跑了150ms</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;stack&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn = 1e4;</span><br><span class="line">typedef long long ll;</span><br><span class="line">struct Point &#123;</span><br><span class="line">    int x, y, z; </span><br><span class="line">    void read() &#123;</span><br><span class="line">        scanf(&quot;%d%d%d&quot;, &amp;x, &amp;y, &amp;z);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;p[maxn];</span><br><span class="line">struct MFS &#123;</span><br><span class="line">    int fa[maxn];</span><br><span class="line">    void clear(int x) &#123;</span><br><span class="line">        for (int i = 1; i &lt;= x; i++) fa[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    int find(int x) &#123;</span><br><span class="line">        return x == fa[x] ? x : fa[x] = find(fa[x]);</span><br><span class="line">    &#125;</span><br><span class="line">    void merge(int x, int y) &#123;</span><br><span class="line">        if (find(x) == find(y)) return;</span><br><span class="line">        fa[find(x)] = find(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;s;</span><br><span class="line">ll dis(Point a, Point b) &#123;</span><br><span class="line">    ll x = (ll)a.x - b.x;</span><br><span class="line">    ll y = (ll)a.y - b.y;</span><br><span class="line">    ll z = (ll)a.z - b.z;</span><br><span class="line">    return x * x + y * y + z * z;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">    //freopen(&quot;cheese.in&quot;, &quot;r&quot;, stdin);</span><br><span class="line">    //freopen(&quot;cheese.out&quot;, &quot;w&quot;, stdout);    </span><br><span class="line">    int T; scanf(&quot;%d&quot;, &amp;T);</span><br><span class="line">    while (T--) &#123;</span><br><span class="line">        int n, h, r; scanf(&quot;%d%d%d&quot;, &amp;n, &amp;h, &amp;r);</span><br><span class="line">        int S = n + 1, T = n + 2;</span><br><span class="line">        ll R = ((ll)r * 2) * ((ll)r * 2);</span><br><span class="line">        s.clear(n + 2);</span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            p[i].read();    </span><br><span class="line">            if ((ll)p[i].z - r &lt;= 0) s.merge(i, S);</span><br><span class="line">            if ((ll)p[i].z + r &gt;= h) s.merge(i, T);</span><br><span class="line">        &#125;</span><br><span class="line">        bool suc = false;</span><br><span class="line">        for (int i = 1; i &lt;= n &amp;&amp; !suc; i++) </span><br><span class="line">            for (int j = i + 1; j &lt;= n &amp;&amp; !suc; j++)</span><br><span class="line">                if (dis(p[i], p[j]) &lt;= R) &#123;</span><br><span class="line">                    s.merge(i, j);</span><br><span class="line">                    if (s.find(S) == s.find(T)) suc = true;</span><br><span class="line">                &#125;</span><br><span class="line">        if (s.find(S) == s.find(T)) suc = true;</span><br><span class="line">        if (suc) printf(&quot;Yes\n&quot;);</span><br><span class="line">        else printf(&quot;No\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;    </span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line">5</span><br><span class="line">1 6 4293</span><br><span class="line">3 3 -2</span><br><span class="line">1 9 866</span><br><span class="line">-4 4 3</span><br><span class="line">1 9 3171</span><br><span class="line">2 0 -3</span><br><span class="line">1 10 1940</span><br><span class="line">1 0 -5</span><br><span class="line">1 8 4150</span><br><span class="line">1 0 -4</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><p>一看就很高端，还把最小生成树（MFS）封装了，我也不是很懂，dalao就看看把！！！ ## <a href="https://www.luogu.org/problemnew/show/P3959" target="_blank" rel="noopener">D2T2 宝藏</a> 这道题一看就应该是状压DP,这道题的题目就不多赘述了 用dp[i]来表示状态i下的最优方案,dis[j]表示j到根节点的距离（题目中所描述的K）用dfs来更新答案，下面直接上代码，<code>代码附注释</code> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 2147483647</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">1</span>&lt;&lt;<span class="number">13</span>],dis[<span class="number">15</span>],G[<span class="number">15</span>][<span class="number">15</span>],isG[<span class="number">15</span>][<span class="number">15</span>],n,m,ans=inf;</span><br><span class="line"><span class="comment">//isG表示x,y之间是否有边</span></span><br><span class="line"><span class="comment">//点只有十二个直接上邻接矩阵即可</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> w)</span></span>&#123;G[x][y]=w;G[y][x]=w;isG[x][y]=<span class="number">1</span>;isG[y][x]=<span class="number">1</span>;&#125;</span><br><span class="line"><span class="comment">//插边函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="comment">//枚举你所选点集中的每个点</span></span><br><span class="line">        <span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>))&amp;x)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>)&amp;x)&amp;&amp;isG[i][j])</span><br><span class="line">                <span class="comment">//判断能否选</span></span><br><span class="line">                    <span class="keyword">if</span>(dp[<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>)|x]&gt;dp[x]+dis[i]*G[i][j])&#123;</span><br><span class="line">                    <span class="comment">//有没有更新的必要</span></span><br><span class="line">                        <span class="keyword">int</span> temp=dis[j];</span><br><span class="line">                        dis[j]=dis[i]+<span class="number">1</span>;</span><br><span class="line">                        dp[<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>)|x]=dp[x]+dis[i]*G[i][j];</span><br><span class="line">                        dfs(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>)|x);</span><br><span class="line">                        dis[j]=temp;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="built_in">memset</span>(G,<span class="number">63</span>,<span class="keyword">sizeof</span>(G));<span class="comment">//赋较大初值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,w;<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;w);</span><br><span class="line">        <span class="keyword">if</span>(w&lt;G[x][y])insert(x,y,w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(dis,<span class="number">63</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>;j++)dp[j]=inf;</span><br><span class="line">        <span class="comment">//每枚举一遍根节点就重置一遍</span></span><br><span class="line">        dis[i]=<span class="number">1</span>;dp[<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>)]=<span class="number">0</span>;</span><br><span class="line">        dfs(<span class="number">1</span>&lt;&lt;(i<span class="number">-1</span>));</span><br><span class="line">        ans=min(ans,dp[(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>]);<span class="comment">//看答案是否能更新</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> NOIP </category>
          
          <category> 游记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> 模拟 </tag>
            
            <tag> dfs </tag>
            
            <tag> 状态压缩 </tag>
            
            <tag> 并查集 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
